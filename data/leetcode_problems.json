{
    "1": {
        "description": "Given an array of integers, return indices of the two numbers such that they add up to a specific target.\r\n\r\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\r\n\r\n\r\nExample:\r\n\r\nGiven nums = [2, 7, 11, 15], target = 9,\r\n\r\nBecause nums[0] + nums[1] = 2 + 7 = 9,\r\nreturn [0, 1].",
        "level": 1,
        "paid_only": false,
        "question_id": 1,
        "slug": "two-sum",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "title": "Two Sum",
        "url": "https://leetcode.com/problems/two-sum/description/"
    },
    "2": {
        "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\r\n\r\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\r\n\r\n\r\nInput: (2 -> 4 -> 3) + (5 -> 6 -> 4)\r\nOutput: 7 -> 0 -> 8",
        "level": 2,
        "paid_only": false,
        "question_id": 2,
        "slug": "add-two-numbers",
        "tags": [
            "Linked List",
            "Math"
        ],
        "title": "Add Two Numbers",
        "url": "https://leetcode.com/problems/add-two-numbers/description/"
    },
    "3": {
        "description": "Given a string, find the length of the longest substring without repeating characters.\r\n\r\nExamples:\r\n\r\nGiven \"abcabcbb\", the answer is \"abc\", which the length is 3.\r\n\r\nGiven \"bbbbb\", the answer is \"b\", with the length of 1.\r\n\r\nGiven \"pwwkew\", the answer is \"wke\", with the length of 3. Note that the answer must be a substring, \"pwke\" is a subsequence and not a substring.",
        "level": 2,
        "paid_only": false,
        "question_id": 3,
        "slug": "longest-substring-without-repeating-characters",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "String"
        ],
        "title": "Longest Substring Without Repeating Characters",
        "url": "https://leetcode.com/problems/longest-substring-without-repeating-characters/description/"
    },
    "4": {
        "description": "There are two sorted arrays nums1 and nums2 of size m and n respectively.\r\n\r\nFind the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).\r\n\r\nExample 1:\r\n\r\nnums1 = [1, 3]\r\nnums2 = [2]\r\n\r\nThe median is 2.0\r\n\r\n\r\n\r\nExample 2:\r\n\r\nnums1 = [1, 2]\r\nnums2 = [3, 4]\r\n\r\nThe median is (2 + 3)/2 = 2.5",
        "level": 3,
        "paid_only": false,
        "question_id": 4,
        "slug": "median-of-two-sorted-arrays",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer"
        ],
        "title": "Median of Two Sorted Arrays",
        "url": "https://leetcode.com/problems/median-of-two-sorted-arrays/description/"
    },
    "5": {
        "description": "Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.\r\n\r\nExample:\r\n\r\nInput: \"babad\"\r\n\r\nOutput: \"bab\"\r\n\r\nNote: \"aba\" is also a valid answer.\r\n\r\n\r\n\r\nExample:\r\n\r\nInput: \"cbbd\"\r\n\r\nOutput: \"bb\"",
        "level": 2,
        "paid_only": false,
        "question_id": 5,
        "slug": "longest-palindromic-substring",
        "tags": [
            "String"
        ],
        "title": "Longest Palindromic Substring",
        "url": "https://leetcode.com/problems/longest-palindromic-substring/description/"
    },
    "6": {
        "description": "The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\r\n\r\nP   A   H   N\r\nA P L S I I G\r\nY   I   R\r\n\r\n\r\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\r\n\r\n\r\nWrite the code that will take a string and make this conversion given a number of rows:\r\n\r\nstring convert(string text, int nRows);\r\n\r\nconvert(\"PAYPALISHIRING\", 3) should return \"PAHNAPLSIIGYIR\".",
        "level": 2,
        "paid_only": false,
        "question_id": 6,
        "slug": "zigzag-conversion",
        "tags": [
            "String"
        ],
        "title": "ZigZag Conversion",
        "url": "https://leetcode.com/problems/zigzag-conversion/description/"
    },
    "7": {
        "description": "Given a 32-bit signed integer, reverse digits of an integer.\r\n\r\nExample 1:\r\n\r\nInput: 123\r\nOutput:  321\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: -123\r\nOutput: -321\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: 120\r\nOutput: 21\r\n\r\n\r\n\r\nNote:\r\nAssume we are dealing with an environment which could only hold integers within the 32-bit signed integer range. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.",
        "level": 1,
        "paid_only": false,
        "question_id": 7,
        "slug": "reverse-integer",
        "tags": [
            "Math"
        ],
        "title": "Reverse Integer",
        "url": "https://leetcode.com/problems/reverse-integer/description/"
    },
    "8": {
        "description": "Implement atoi to convert a string to an integer.\r\n\r\nHint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.\r\n\r\n\r\nNotes: \r\nIt is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front. \r\n\r\n\r\nUpdate (2015-02-10):\r\nThe signature of the C++ function had been updated. If you still see your function signature accepts a const char * argument, please click the reload button  to reset your code definition.\r\n\r\n\r\nspoilers alert... click to show requirements for atoi.\r\n\r\nRequirements for atoi:\r\n\r\nThe function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.\r\n\r\nThe string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.\r\n\r\nIf the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.\r\n\r\nIf no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.",
        "level": 2,
        "paid_only": false,
        "question_id": 8,
        "slug": "string-to-integer-atoi",
        "tags": [
            "Math",
            "String"
        ],
        "title": "String to Integer (atoi)",
        "url": "https://leetcode.com/problems/string-to-integer-atoi/description/"
    },
    "9": {
        "description": "Determine whether an integer is a palindrome. Do this without extra space.\r\n\r\nclick to show spoilers.\r\n\r\nSome hints:\r\n\r\nCould negative integers be palindromes? (ie, -1)\r\n\r\nIf you are thinking of converting the integer to string, note the restriction of using extra space.\r\n\r\nYou could also try reversing an integer. However, if you have solved the problem \"Reverse Integer\", you know that the reversed integer might overflow. How would you handle such case?\r\n\r\nThere is a more generic way of solving this problem.",
        "level": 1,
        "paid_only": false,
        "question_id": 9,
        "slug": "palindrome-number",
        "tags": [
            "Math"
        ],
        "title": "Palindrome Number",
        "url": "https://leetcode.com/problems/palindrome-number/description/"
    },
    "10": {
        "description": "Implement regular expression matching with support for '.' and '*'.\r\n\r\n\r\n'.' Matches any single character.\r\n'*' Matches zero or more of the preceding element.\r\n\r\nThe matching should cover the entire input string (not partial).\r\n\r\nThe function prototype should be:\r\nbool isMatch(const char *s, const char *p)\r\n\r\nSome examples:\r\nisMatch(\"aa\",\"a\") → false\r\nisMatch(\"aa\",\"aa\") → true\r\nisMatch(\"aaa\",\"aa\") → false\r\nisMatch(\"aa\", \"a*\") → true\r\nisMatch(\"aa\", \".*\") → true\r\nisMatch(\"ab\", \".*\") → true\r\nisMatch(\"aab\", \"c*a*b\") → true",
        "level": 3,
        "paid_only": false,
        "question_id": 10,
        "slug": "regular-expression-matching",
        "tags": [
            "String",
            "Dynamic Programming",
            "Backtracking"
        ],
        "title": "Regular Expression Matching",
        "url": "https://leetcode.com/problems/regular-expression-matching/description/"
    },
    "11": {
        "description": "Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\r\n\r\nNote: You may not slant the container and n is at least 2.",
        "level": 2,
        "paid_only": false,
        "question_id": 11,
        "slug": "container-with-most-water",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "Container With Most Water",
        "url": "https://leetcode.com/problems/container-with-most-water/description/"
    },
    "12": {
        "description": "Given an integer, convert it to a roman numeral.\r\n\r\n\r\nInput is guaranteed to be within the range from 1 to 3999.",
        "level": 2,
        "paid_only": false,
        "question_id": 12,
        "slug": "integer-to-roman",
        "tags": [
            "Math",
            "String"
        ],
        "title": "Integer to Roman",
        "url": "https://leetcode.com/problems/integer-to-roman/description/"
    },
    "13": {
        "description": "Given a roman numeral, convert it to an integer.\r\n\r\nInput is guaranteed to be within the range from 1 to 3999.",
        "level": 1,
        "paid_only": false,
        "question_id": 13,
        "slug": "roman-to-integer",
        "tags": [
            "Math",
            "String"
        ],
        "title": "Roman to Integer",
        "url": "https://leetcode.com/problems/roman-to-integer/description/"
    },
    "14": {
        "description": "Write a function to find the longest common prefix string amongst an array of strings.",
        "level": 1,
        "paid_only": false,
        "question_id": 14,
        "slug": "longest-common-prefix",
        "tags": [
            "String"
        ],
        "title": "Longest Common Prefix",
        "url": "https://leetcode.com/problems/longest-common-prefix/description/"
    },
    "15": {
        "description": "Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\r\n\r\nNote: The solution set must not contain duplicate triplets.\r\n\r\n\r\nFor example, given array S = [-1, 0, 1, 2, -1, -4],\r\n\r\nA solution set is:\r\n[\r\n  [-1, 0, 1],\r\n  [-1, -1, 2]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 15,
        "slug": "3sum",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "3Sum",
        "url": "https://leetcode.com/problems/3sum/description/"
    },
    "16": {
        "description": "Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.\r\n\r\n\r\n    For example, given array S = {-1 2 1 -4}, and target = 1.\r\n\r\n    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).",
        "level": 2,
        "paid_only": false,
        "question_id": 16,
        "slug": "3sum-closest",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "3Sum Closest",
        "url": "https://leetcode.com/problems/3sum-closest/description/"
    },
    "17": {
        "description": "Given a digit string, return all possible letter combinations that the number could represent.\r\n\r\n\r\n\r\nA mapping of digit to letters (just like on the telephone buttons) is given below.\r\n\r\n\r\n\r\nInput:Digit string \"23\"\r\nOutput: [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"].\r\n\r\n\r\n\r\nNote:\r\nAlthough the above answer is in lexicographical order, your answer could be in any order you want.",
        "level": 2,
        "paid_only": false,
        "question_id": 17,
        "slug": "letter-combinations-of-a-phone-number",
        "tags": [
            "String",
            "Backtracking"
        ],
        "title": "Letter Combinations of a Phone Number",
        "url": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/description/"
    },
    "18": {
        "description": "Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.\r\n\r\nNote: The solution set must not contain duplicate quadruplets.\r\n\r\n\r\n\r\nFor example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.\r\n\r\nA solution set is:\r\n[\r\n  [-1,  0, 0, 1],\r\n  [-2, -1, 1, 2],\r\n  [-2,  0, 0, 2]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 18,
        "slug": "4sum",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers"
        ],
        "title": "4Sum",
        "url": "https://leetcode.com/problems/4sum/description/"
    },
    "19": {
        "description": "Given a linked list, remove the nth node from the end of list and return its head.\r\n\r\n\r\nFor example,\r\n\r\n\r\n   Given linked list: 1->2->3->4->5, and n = 2.\r\n\r\n   After removing the second node from the end, the linked list becomes 1->2->3->5.\r\n\r\n\r\n\r\nNote:\r\nGiven n will always be valid.\r\nTry to do this in one pass.",
        "level": 2,
        "paid_only": false,
        "question_id": 19,
        "slug": "remove-nth-node-from-end-of-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "title": "Remove Nth Node From End of List",
        "url": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/"
    },
    "20": {
        "description": "Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\r\n\r\nThe brackets must close in the correct order, \"()\" and \"()[]{}\" are all valid but \"(]\" and \"([)]\" are not.",
        "level": 1,
        "paid_only": false,
        "question_id": 20,
        "slug": "valid-parentheses",
        "tags": [
            "String",
            "Stack"
        ],
        "title": "Valid Parentheses",
        "url": "https://leetcode.com/problems/valid-parentheses/description/"
    },
    "21": {
        "description": "Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.",
        "level": 1,
        "paid_only": false,
        "question_id": 21,
        "slug": "merge-two-sorted-lists",
        "tags": [
            "Linked List"
        ],
        "title": "Merge Two Sorted Lists",
        "url": "https://leetcode.com/problems/merge-two-sorted-lists/description/"
    },
    "22": {
        "description": "Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\r\n\r\n\r\n\r\nFor example, given n = 3, a solution set is:\r\n\r\n\r\n[\r\n  \"((()))\",\r\n  \"(()())\",\r\n  \"(())()\",\r\n  \"()(())\",\r\n  \"()()()\"\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 22,
        "slug": "generate-parentheses",
        "tags": [
            "String",
            "Backtracking"
        ],
        "title": "Generate Parentheses",
        "url": "https://leetcode.com/problems/generate-parentheses/description/"
    },
    "23": {
        "description": "Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.",
        "level": 3,
        "paid_only": false,
        "question_id": 23,
        "slug": "merge-k-sorted-lists",
        "tags": [
            "Linked List",
            "Divide and Conquer",
            "Heap"
        ],
        "title": "Merge k Sorted Lists",
        "url": "https://leetcode.com/problems/merge-k-sorted-lists/description/"
    },
    "24": {
        "description": "Given a linked list, swap every two adjacent nodes and return its head.\r\n\r\n\r\n\r\nFor example,\r\nGiven 1->2->3->4, you should return the list as 2->1->4->3.\r\n\r\n\r\n\r\nYour algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.",
        "level": 2,
        "paid_only": false,
        "question_id": 24,
        "slug": "swap-nodes-in-pairs",
        "tags": [
            "Linked List"
        ],
        "title": "Swap Nodes in Pairs",
        "url": "https://leetcode.com/problems/swap-nodes-in-pairs/description/"
    },
    "25": {
        "description": "Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.\r\n\r\n\r\n\r\nk is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes in the end should remain as it is.\r\n\r\nYou may not alter the values in the nodes, only nodes itself may be changed.\r\n\r\nOnly constant memory is allowed.\r\n\r\n\r\nFor example,\r\nGiven this linked list: 1->2->3->4->5\r\n\r\n\r\n\r\nFor k = 2, you should return: 2->1->4->3->5\r\n\r\n\r\n\r\nFor k = 3, you should return: 3->2->1->4->5",
        "level": 3,
        "paid_only": false,
        "question_id": 25,
        "slug": "reverse-nodes-in-k-group",
        "tags": [
            "Linked List"
        ],
        "title": "Reverse Nodes in k-Group",
        "url": "https://leetcode.com/problems/reverse-nodes-in-k-group/description/"
    },
    "26": {
        "description": "Given a sorted array, remove the duplicates in-place such that each element appear only once and return the new length.\r\n\r\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\r\n\r\n\r\nExample:\r\n\r\nGiven nums = [1,1,2],\r\n\r\nYour function should return length = 2, with the first two elements of nums being 1 and 2 respectively.\r\nIt doesn't matter what you leave beyond the new length.",
        "level": 1,
        "paid_only": false,
        "question_id": 26,
        "slug": "remove-duplicates-from-sorted-array",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "Remove Duplicates from Sorted Array",
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/description/"
    },
    "27": {
        "description": "Given an array and a value, remove all instances of that value in-place and return the new length.\r\n\r\n\r\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\r\n\r\nThe order of elements can be changed. It doesn't matter what you leave beyond the new length.\r\n\r\n\r\nExample:\r\n\r\nGiven nums = [3,2,2,3], val = 3,\r\n\r\nYour function should return length = 2, with the first two elements of nums being 2.",
        "level": 1,
        "paid_only": false,
        "question_id": 27,
        "slug": "remove-element",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "Remove Element",
        "url": "https://leetcode.com/problems/remove-element/description/"
    },
    "28": {
        "description": "Implement strStr().\r\n\r\n\r\n\r\nReturn the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\r\n\r\n\r\nExample 1:\r\n\r\nInput: haystack = \"hello\", needle = \"ll\"\r\nOutput: 2\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: haystack = \"aaaaa\", needle = \"bba\"\r\nOutput: -1",
        "level": 1,
        "paid_only": false,
        "question_id": 28,
        "slug": "implement-strstr",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "title": "Implement strStr()",
        "url": "https://leetcode.com/problems/implement-strstr/description/"
    },
    "29": {
        "description": "Divide two integers without using multiplication, division and mod operator.\r\n\r\n\r\nIf it is overflow, return MAX_INT.",
        "level": 2,
        "paid_only": false,
        "question_id": 29,
        "slug": "divide-two-integers",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "title": "Divide Two Integers",
        "url": "https://leetcode.com/problems/divide-two-integers/description/"
    },
    "30": {
        "description": "You are given a string, s, and a list of words, words, that are all of the same length. Find all starting indices of substring(s) in s that is a concatenation of each word in words exactly once and without any intervening characters.\r\n\r\n\r\n\r\nFor example, given:\r\ns: \"barfoothefoobarman\"\r\nwords: [\"foo\", \"bar\"]\r\n\r\n\r\n\r\nYou should return the indices: [0,9].\r\n(order does not matter).",
        "level": 3,
        "paid_only": false,
        "question_id": 30,
        "slug": "substring-with-concatenation-of-all-words",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "String"
        ],
        "title": "Substring with Concatenation of All Words",
        "url": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/description/"
    },
    "31": {
        "description": "Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\r\n\r\n\r\nIf such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).\r\n\r\n\r\nThe replacement must be in-place, do not allocate extra memory.\r\n\r\n\r\nHere are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.\r\n1,2,3 → 1,3,2\r\n3,2,1 → 1,2,3\r\n1,1,5 → 1,5,1",
        "level": 2,
        "paid_only": false,
        "question_id": 31,
        "slug": "next-permutation",
        "tags": [
            "Array"
        ],
        "title": "Next Permutation",
        "url": "https://leetcode.com/problems/next-permutation/description/"
    },
    "32": {
        "description": "Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.\r\n\r\n\r\nFor \"(()\", the longest valid parentheses substring is \"()\", which has length = 2.\r\n\r\n\r\nAnother example is \")()())\", where the longest valid parentheses substring is \"()()\", which has length = 4.",
        "level": 3,
        "paid_only": false,
        "question_id": 32,
        "slug": "longest-valid-parentheses",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "title": "Longest Valid Parentheses",
        "url": "https://leetcode.com/problems/longest-valid-parentheses/description/"
    },
    "33": {
        "description": "Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\r\n\r\nYou are given a target value to search. If found in the array return its index, otherwise return -1.\r\n\r\nYou may assume no duplicate exists in the array.",
        "level": 2,
        "paid_only": false,
        "question_id": 33,
        "slug": "search-in-rotated-sorted-array",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "title": "Search in Rotated Sorted Array",
        "url": "https://leetcode.com/problems/search-in-rotated-sorted-array/description/"
    },
    "34": {
        "description": "Given an array of integers sorted in ascending order, find the starting and ending position of a given target value.\r\n\r\nYour algorithm's runtime complexity must be in the order of O(log n).\r\n\r\nIf the target is not found in the array, return [-1, -1].\r\n\r\n\r\nFor example,\r\nGiven [5, 7, 7, 8, 8, 10] and target value 8,\r\nreturn [3, 4].",
        "level": 2,
        "paid_only": false,
        "question_id": 34,
        "slug": "search-for-a-range",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "title": "Search for a Range",
        "url": "https://leetcode.com/problems/search-for-a-range/description/"
    },
    "35": {
        "description": "Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\r\n\r\nYou may assume no duplicates in the array.\r\n\r\nExample 1:\r\n\r\nInput: [1,3,5,6], 5\r\nOutput: 2\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,3,5,6], 2\r\nOutput: 1\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [1,3,5,6], 7\r\nOutput: 4\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,3,5,6], 0\r\nOutput: 0",
        "level": 1,
        "paid_only": false,
        "question_id": 35,
        "slug": "search-insert-position",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "title": "Search Insert Position",
        "url": "https://leetcode.com/problems/search-insert-position/description/"
    },
    "36": {
        "description": "Determine if a Sudoku is valid, according to: Sudoku Puzzles - The Rules.\r\n\r\nThe Sudoku board could be partially filled, where empty cells are filled with the character '.'.\r\n\r\n\r\n\r\nA partially filled sudoku which is valid.\r\n\r\n\r\nNote:\r\nA valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.",
        "level": 2,
        "paid_only": false,
        "question_id": 36,
        "slug": "valid-sudoku",
        "tags": [
            "Hash Table"
        ],
        "title": "Valid Sudoku",
        "url": "https://leetcode.com/problems/valid-sudoku/description/"
    },
    "37": {
        "description": "Write a program to solve a Sudoku puzzle by filling the empty cells.\r\n\r\nEmpty cells are indicated by the character '.'.\r\n\r\nYou may assume that there will be only one unique solution.\r\n\r\n\r\n\r\nA sudoku puzzle...\r\n\r\n\r\n\r\n\r\n...and its solution numbers marked in red.",
        "level": 3,
        "paid_only": false,
        "question_id": 37,
        "slug": "sudoku-solver",
        "tags": [
            "Hash Table",
            "Backtracking"
        ],
        "title": "Sudoku Solver",
        "url": "https://leetcode.com/problems/sudoku-solver/description/"
    },
    "38": {
        "description": "The count-and-say sequence is the sequence of integers with the first five terms as following:\r\n\r\n1.     1\r\n2.     11\r\n3.     21\r\n4.     1211\r\n5.     111221\r\n\r\n\r\n\r\n1 is read off as \"one 1\" or 11.\r\n11 is read off as \"two 1s\" or 21.\r\n21 is read off as \"one 2, then one 1\" or 1211.\r\n\r\n\r\n\r\nGiven an integer n, generate the nth term of the count-and-say sequence.\r\n\r\n\r\n\r\nNote: Each term of the sequence of integers will be represented as a string.\r\n\r\n\r\nExample 1:\r\n\r\nInput: 1\r\nOutput: \"1\"\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 4\r\nOutput: \"1211\"",
        "level": 1,
        "paid_only": false,
        "question_id": 38,
        "slug": "count-and-say",
        "tags": [
            "String"
        ],
        "title": "Count and Say",
        "url": "https://leetcode.com/problems/count-and-say/description/"
    },
    "39": {
        "description": "Given a set of candidate numbers (C) (without duplicates) and a target number (T), find all unique combinations in C where the candidate numbers sums to T. \r\n\r\n\r\nThe same repeated number may be chosen from C unlimited number of times.\r\n\r\n\r\nNote:\r\n\r\nAll numbers (including target) will be positive integers.\r\nThe solution set must not contain duplicate combinations.\r\n\r\n\r\n\r\n\r\nFor example, given candidate set [2, 3, 6, 7] and target 7, \r\nA solution set is: \r\n\r\n[\r\n  [7],\r\n  [2, 2, 3]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 39,
        "slug": "combination-sum",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "title": "Combination Sum",
        "url": "https://leetcode.com/problems/combination-sum/description/"
    },
    "40": {
        "description": "Given a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.\r\n\r\n\r\nEach number in C may only be used once in the combination.\r\n\r\nNote:\r\n\r\nAll numbers (including target) will be positive integers.\r\nThe solution set must not contain duplicate combinations.\r\n\r\n\r\n\r\n\r\nFor example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8, \r\nA solution set is: \r\n\r\n[\r\n  [1, 7],\r\n  [1, 2, 5],\r\n  [2, 6],\r\n  [1, 1, 6]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 40,
        "slug": "combination-sum-ii",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "title": "Combination Sum II",
        "url": "https://leetcode.com/problems/combination-sum-ii/description/"
    },
    "41": {
        "description": "Given an unsorted integer array, find the first missing positive integer.\r\n\r\n\r\n\r\nFor example,\r\nGiven [1,2,0] return 3,\r\nand [3,4,-1,1] return 2.\r\n\r\n\r\n\r\nYour algorithm should run in O(n) time and uses constant space.",
        "level": 3,
        "paid_only": false,
        "question_id": 41,
        "slug": "first-missing-positive",
        "tags": [
            "Array"
        ],
        "title": "First Missing Positive",
        "url": "https://leetcode.com/problems/first-missing-positive/description/"
    },
    "42": {
        "description": "Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining. \r\n\r\n\r\n\r\nFor example, \r\nGiven [0,1,0,2,1,0,1,3,2,1,2,1], return 6.\r\n\r\n\r\n\r\n\r\nThe above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!",
        "level": 3,
        "paid_only": false,
        "question_id": 42,
        "slug": "trapping-rain-water",
        "tags": [
            "Array",
            "Two Pointers",
            "Stack"
        ],
        "title": "Trapping Rain Water",
        "url": "https://leetcode.com/problems/trapping-rain-water/description/"
    },
    "43": {
        "description": "Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2.\r\n\r\nNote:\r\n\r\nThe length of both num1 and num2 is < 110.\r\nBoth num1 and num2 contains only digits 0-9.\r\nBoth num1 and num2 does not contain any leading zero.\r\nYou must not use any built-in BigInteger library or convert the inputs to integer directly.",
        "level": 2,
        "paid_only": false,
        "question_id": 43,
        "slug": "multiply-strings",
        "tags": [
            "Math",
            "String"
        ],
        "title": "Multiply Strings",
        "url": "https://leetcode.com/problems/multiply-strings/description/"
    },
    "44": {
        "description": "Implement wildcard pattern matching with support for '?' and '*'.\r\n\r\n\r\n'?' Matches any single character.\r\n'*' Matches any sequence of characters (including the empty sequence).\r\n\r\nThe matching should cover the entire input string (not partial).\r\n\r\nThe function prototype should be:\r\nbool isMatch(const char *s, const char *p)\r\n\r\nSome examples:\r\nisMatch(\"aa\",\"a\") → false\r\nisMatch(\"aa\",\"aa\") → true\r\nisMatch(\"aaa\",\"aa\") → false\r\nisMatch(\"aa\", \"*\") → true\r\nisMatch(\"aa\", \"a*\") → true\r\nisMatch(\"ab\", \"?*\") → true\r\nisMatch(\"aab\", \"c*a*b\") → false",
        "level": 3,
        "paid_only": false,
        "question_id": 44,
        "slug": "wildcard-matching",
        "tags": [
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Greedy"
        ],
        "title": "Wildcard Matching",
        "url": "https://leetcode.com/problems/wildcard-matching/description/"
    },
    "45": {
        "description": "Given an array of non-negative integers, you are initially positioned at the first index of the array.\r\n\r\n\r\nEach element in the array represents your maximum jump length at that position. \r\n\r\n\r\nYour goal is to reach the last index in the minimum number of jumps.\r\n\r\n\r\n\r\nFor example:\r\nGiven array A = [2,3,1,1,4]\r\n\r\n\r\nThe minimum number of jumps to reach the last index is 2. (Jump 1 step from index 0 to 1, then 3 steps to the last index.)\r\n\r\n\r\n\r\nNote:\r\nYou can assume that you can always reach the last index.",
        "level": 3,
        "paid_only": false,
        "question_id": 45,
        "slug": "jump-game-ii",
        "tags": [
            "Array",
            "Greedy"
        ],
        "title": "Jump Game II",
        "url": "https://leetcode.com/problems/jump-game-ii/description/"
    },
    "46": {
        "description": "Given a collection of distinct numbers, return all possible permutations.\r\n\r\n\r\n\r\nFor example,\r\n[1,2,3] have the following permutations:\r\n\r\n[\r\n  [1,2,3],\r\n  [1,3,2],\r\n  [2,1,3],\r\n  [2,3,1],\r\n  [3,1,2],\r\n  [3,2,1]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 46,
        "slug": "permutations",
        "tags": [
            "Backtracking"
        ],
        "title": "Permutations",
        "url": "https://leetcode.com/problems/permutations/description/"
    },
    "47": {
        "description": "Given a collection of numbers that might contain duplicates, return all possible unique permutations.\r\n\r\n\r\n\r\nFor example,\r\n[1,1,2] have the following unique permutations:\r\n\r\n[\r\n  [1,1,2],\r\n  [1,2,1],\r\n  [2,1,1]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 47,
        "slug": "permutations-ii",
        "tags": [
            "Backtracking"
        ],
        "title": "Permutations II",
        "url": "https://leetcode.com/problems/permutations-ii/description/"
    },
    "48": {
        "description": "You are given an n x n 2D matrix representing an image.\r\n\r\nRotate the image by 90 degrees (clockwise).\r\n\r\nNote:\r\nYou have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.\r\n\r\n\r\nExample 1:\r\n\r\nGiven input matrix = \r\n[\r\n  [1,2,3],\r\n  [4,5,6],\r\n  [7,8,9]\r\n],\r\n\r\nrotate the input matrix in-place such that it becomes:\r\n[\r\n  [7,4,1],\r\n  [8,5,2],\r\n  [9,6,3]\r\n]\r\n\r\n\r\n\r\nExample 2:\r\n\r\nGiven input matrix =\r\n[\r\n  [ 5, 1, 9,11],\r\n  [ 2, 4, 8,10],\r\n  [13, 3, 6, 7],\r\n  [15,14,12,16]\r\n], \r\n\r\nrotate the input matrix in-place such that it becomes:\r\n[\r\n  [15,13, 2, 5],\r\n  [14, 3, 4, 1],\r\n  [12, 6, 8, 9],\r\n  [16, 7,10,11]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 48,
        "slug": "rotate-image",
        "tags": [
            "Array"
        ],
        "title": "Rotate Image",
        "url": "https://leetcode.com/problems/rotate-image/description/"
    },
    "49": {
        "description": "Given an array of strings, group anagrams together.\r\n\r\n\r\nFor example, given: [\"eat\", \"tea\", \"tan\", \"ate\", \"nat\", \"bat\"], \r\nReturn:\r\n\r\n[\r\n  [\"ate\", \"eat\",\"tea\"],\r\n  [\"nat\",\"tan\"],\r\n  [\"bat\"]\r\n]\r\n\r\nNote: All inputs will be in lower-case.",
        "level": 2,
        "paid_only": false,
        "question_id": 49,
        "slug": "group-anagrams",
        "tags": [
            "Hash Table",
            "String"
        ],
        "title": "Group Anagrams",
        "url": "https://leetcode.com/problems/group-anagrams/description/"
    },
    "50": {
        "description": "Implement pow(x, n).\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: 2.00000, 10\r\nOutput: 1024.00000\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 2.10000, 3\r\nOutput: 9.26100",
        "level": 2,
        "paid_only": false,
        "question_id": 50,
        "slug": "powx-n",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "title": "Pow(x, n)",
        "url": "https://leetcode.com/problems/powx-n/description/"
    },
    "51": {
        "description": "The n-queens puzzle is the problem of placing n queens on an n×n chessboard such that no two queens attack each other.\r\n\r\n\r\n\r\nGiven an integer n, return all distinct solutions to the n-queens puzzle.\r\n\r\nEach solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space respectively.\r\n\r\nFor example,\r\nThere exist two distinct solutions to the 4-queens puzzle:\r\n\r\n[\r\n [\".Q..\",  // Solution 1\r\n  \"...Q\",\r\n  \"Q...\",\r\n  \"..Q.\"],\r\n\r\n [\"..Q.\",  // Solution 2\r\n  \"Q...\",\r\n  \"...Q\",\r\n  \".Q..\"]\r\n]",
        "level": 3,
        "paid_only": false,
        "question_id": 51,
        "slug": "n-queens",
        "tags": [
            "Backtracking"
        ],
        "title": "N-Queens",
        "url": "https://leetcode.com/problems/n-queens/description/"
    },
    "52": {
        "description": "Follow up for N-Queens problem.\r\n\r\nNow, instead outputting board configurations, return the total number of distinct solutions.",
        "level": 3,
        "paid_only": false,
        "question_id": 52,
        "slug": "n-queens-ii",
        "tags": [
            "Backtracking"
        ],
        "title": "N-Queens II",
        "url": "https://leetcode.com/problems/n-queens-ii/description/"
    },
    "53": {
        "description": "Find the contiguous subarray within an array (containing at least one number) which has the largest sum.\r\n\r\n\r\nFor example, given the array [-2,1,-3,4,-1,2,1,-5,4],\r\nthe contiguous subarray [4,-1,2,1] has the largest sum = 6.\r\n\r\n\r\nclick to show more practice.\r\n\r\nMore practice:\r\n\r\nIf you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.",
        "level": 1,
        "paid_only": false,
        "question_id": 53,
        "slug": "maximum-subarray",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming"
        ],
        "title": "Maximum Subarray",
        "url": "https://leetcode.com/problems/maximum-subarray/description/"
    },
    "54": {
        "description": "Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.\r\n\r\n\r\n\r\nFor example,\r\nGiven the following matrix:\r\n\r\n\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\n\r\n\r\nYou should return [1,2,3,6,9,8,7,4,5].",
        "level": 2,
        "paid_only": false,
        "question_id": 54,
        "slug": "spiral-matrix",
        "tags": [
            "Array"
        ],
        "title": "Spiral Matrix",
        "url": "https://leetcode.com/problems/spiral-matrix/description/"
    },
    "55": {
        "description": "Given an array of non-negative integers, you are initially positioned at the first index of the array.\r\n\r\n\r\nEach element in the array represents your maximum jump length at that position. \r\n\r\n\r\nDetermine if you are able to reach the last index.\r\n\r\n\r\n\r\nFor example:\r\nA = [2,3,1,1,4], return true.\r\n\r\n\r\nA = [3,2,1,0,4], return false.",
        "level": 2,
        "paid_only": false,
        "question_id": 55,
        "slug": "jump-game",
        "tags": [
            "Array",
            "Greedy"
        ],
        "title": "Jump Game",
        "url": "https://leetcode.com/problems/jump-game/description/"
    },
    "56": {
        "description": "Given a collection of intervals, merge all overlapping intervals.\r\n\r\n\r\nFor example,\r\nGiven [1,3],[2,6],[8,10],[15,18],\r\nreturn [1,6],[8,10],[15,18].",
        "level": 2,
        "paid_only": false,
        "question_id": 56,
        "slug": "merge-intervals",
        "tags": [
            "Array",
            "Sort"
        ],
        "title": "Merge Intervals",
        "url": "https://leetcode.com/problems/merge-intervals/description/"
    },
    "57": {
        "description": "Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\r\n\r\nYou may assume that the intervals were initially sorted according to their start times.\r\n\r\n\r\nExample 1:\r\nGiven intervals [1,3],[6,9], insert and merge [2,5] in as [1,5],[6,9].\r\n\r\n\r\n\r\nExample 2:\r\nGiven [1,2],[3,5],[6,7],[8,10],[12,16], insert and merge [4,9] in as [1,2],[3,10],[12,16].\r\n\r\n\r\n\r\nThis is because the new interval [4,9] overlaps with [3,5],[6,7],[8,10].",
        "level": 3,
        "paid_only": false,
        "question_id": 57,
        "slug": "insert-interval",
        "tags": [
            "Array",
            "Sort"
        ],
        "title": "Insert Interval",
        "url": "https://leetcode.com/problems/insert-interval/description/"
    },
    "58": {
        "description": "Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string.\r\n\r\nIf the last word does not exist, return 0.\r\n\r\nNote: A word is defined as a character sequence consists of non-space characters only.\r\n\r\nExample:\r\n\r\nInput: \"Hello World\"\r\nOutput: 5",
        "level": 1,
        "paid_only": false,
        "question_id": 58,
        "slug": "length-of-last-word",
        "tags": [
            "String"
        ],
        "title": "Length of Last Word",
        "url": "https://leetcode.com/problems/length-of-last-word/description/"
    },
    "59": {
        "description": "Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.\r\n\r\n\r\nFor example,\r\nGiven n = 3,\r\n\r\nYou should return the following matrix:\r\n\r\n[\r\n [ 1, 2, 3 ],\r\n [ 8, 9, 4 ],\r\n [ 7, 6, 5 ]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 59,
        "slug": "spiral-matrix-ii",
        "tags": [
            "Array"
        ],
        "title": "Spiral Matrix II",
        "url": "https://leetcode.com/problems/spiral-matrix-ii/description/"
    },
    "60": {
        "description": "The set [1,2,3,…,n] contains a total of n! unique permutations.\r\n\r\nBy listing and labeling all of the permutations in order,\r\nWe get the following sequence (ie, for n = 3):\r\n\r\n\"123\"\r\n\"132\"\r\n\"213\"\r\n\"231\"\r\n\"312\"\r\n\"321\"\r\n\r\n\r\n\r\nGiven n and k, return the kth permutation sequence.\r\n\r\nNote: Given n will be between 1 and 9 inclusive.",
        "level": 2,
        "paid_only": false,
        "question_id": 60,
        "slug": "permutation-sequence",
        "tags": [
            "Math",
            "Backtracking"
        ],
        "title": "Permutation Sequence",
        "url": "https://leetcode.com/problems/permutation-sequence/description/"
    },
    "61": {
        "description": "Given a list, rotate the list to the right by k places, where k is non-negative.\r\n\r\n\r\n\r\nExample:\r\n\r\nGiven 1->2->3->4->5->NULL and k = 2,\r\n\r\nreturn 4->5->1->2->3->NULL.",
        "level": 2,
        "paid_only": false,
        "question_id": 61,
        "slug": "rotate-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "title": "Rotate List",
        "url": "https://leetcode.com/problems/rotate-list/description/"
    },
    "62": {
        "description": "A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\r\n\r\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\r\n\r\nHow many possible unique paths are there?\r\n\r\n\r\n\r\nAbove is a 3 x 7 grid. How many possible unique paths are there?\r\n\r\n\r\nNote: m and n will be at most 100.",
        "level": 2,
        "paid_only": false,
        "question_id": 62,
        "slug": "unique-paths",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "title": "Unique Paths",
        "url": "https://leetcode.com/problems/unique-paths/description/"
    },
    "63": {
        "description": "Follow up for \"Unique Paths\":\r\n\r\nNow consider if some obstacles are added to the grids. How many unique paths would there be?\r\n\r\nAn obstacle and empty space is marked as 1 and 0 respectively in the grid.\r\n\r\nFor example,\r\nThere is one obstacle in the middle of a 3x3 grid as illustrated below.\r\n\r\n[\r\n  [0,0,0],\r\n  [0,1,0],\r\n  [0,0,0]\r\n]\r\n\r\nThe total number of unique paths is 2.\r\n\r\nNote: m and n will be at most 100.",
        "level": 2,
        "paid_only": false,
        "question_id": 63,
        "slug": "unique-paths-ii",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "title": "Unique Paths II",
        "url": "https://leetcode.com/problems/unique-paths-ii/description/"
    },
    "64": {
        "description": "Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.\r\n\r\nNote: You can only move either down or right at any point in time.\r\n\r\nExample 1:\r\n\r\n[[1,3,1],\r\n [1,5,1],\r\n [4,2,1]]\r\n\r\nGiven the above grid map, return 7. Because the path 1→3→1→1→1 minimizes the sum.",
        "level": 2,
        "paid_only": false,
        "question_id": 64,
        "slug": "minimum-path-sum",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "title": "Minimum Path Sum",
        "url": "https://leetcode.com/problems/minimum-path-sum/description/"
    },
    "65": {
        "description": "Validate if a given string is numeric.\r\n\r\n\r\nSome examples:\r\n\"0\" => true\r\n\"   0.1  \" => true\r\n\"abc\" => false\r\n\"1 a\" => false\r\n\"2e10\" => true\r\n\r\n\r\nNote: It is intended for the problem statement to be ambiguous. You should gather all requirements up front before implementing one.\r\n\r\n\r\n\r\nUpdate (2015-02-10):\r\nThe signature of the C++ function had been updated. If you still see your function signature accepts a const char * argument, please click the reload button  to reset your code definition.",
        "level": 3,
        "paid_only": false,
        "question_id": 65,
        "slug": "valid-number",
        "tags": [
            "Math",
            "String"
        ],
        "title": "Valid Number",
        "url": "https://leetcode.com/problems/valid-number/description/"
    },
    "66": {
        "description": "Given a non-negative integer represented as a non-empty array of digits, plus one to the integer.\r\n\r\nYou may assume the integer do not contain any leading zero, except the number 0 itself.\r\n\r\nThe digits are stored such that the most significant digit is at the head of the list.",
        "level": 1,
        "paid_only": false,
        "question_id": 66,
        "slug": "plus-one",
        "tags": [
            "Array",
            "Math"
        ],
        "title": "Plus One",
        "url": "https://leetcode.com/problems/plus-one/description/"
    },
    "67": {
        "description": "Given two binary strings, return their sum (also a binary string).\r\n\r\n\r\n\r\nFor example,\r\na = \"11\"\r\nb = \"1\"\r\nReturn \"100\".",
        "level": 1,
        "paid_only": false,
        "question_id": 67,
        "slug": "add-binary",
        "tags": [
            "Math",
            "String"
        ],
        "title": "Add Binary",
        "url": "https://leetcode.com/problems/add-binary/description/"
    },
    "68": {
        "description": "Given an array of words and a length L, format the text such that each line has exactly L characters and is fully (left and right) justified.\r\n \r\n\r\n\r\nYou should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ' ' when necessary so that each line has exactly L characters.\r\n\r\n\r\n\r\nExtra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.\r\n\r\n\r\n\r\nFor the last line of text, it should be left justified and no extra space is inserted between words.\r\n\r\n\r\n\r\nFor example,\r\nwords: [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"]\r\nL: 16.\r\n\r\n\r\n\r\nReturn the formatted lines as:\r\n\r\n[\r\n   \"This    is    an\",\r\n   \"example  of text\",\r\n   \"justification.  \"\r\n]\r\n\r\n\r\n\r\n\r\nNote: Each word is guaranteed not to exceed L in length.\r\n\r\n\r\n\r\nclick to show corner cases.\r\n\r\nCorner Cases:\r\n\r\n\r\nA line other than the last line might contain only one word. What should you do in this case?\r\nIn this case, that line should be left-justified.",
        "level": 3,
        "paid_only": false,
        "question_id": 68,
        "slug": "text-justification",
        "tags": [
            "String"
        ],
        "title": "Text Justification",
        "url": "https://leetcode.com/problems/text-justification/description/"
    },
    "69": {
        "description": "Implement int sqrt(int x).\r\n\r\nCompute and return the square root of x.\r\n\r\nx is guaranteed to be a non-negative integer.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: 4\r\nOutput: 2\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 8\r\nOutput: 2\r\nExplanation: The square root of 8 is 2.82842..., and since we want to return an integer, the decimal part will be truncated.",
        "level": 1,
        "paid_only": false,
        "question_id": 69,
        "slug": "sqrtx",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "title": "Sqrt(x)",
        "url": "https://leetcode.com/problems/sqrtx/description/"
    },
    "70": {
        "description": "You are climbing a stair case. It takes n steps to reach to the top.\r\n\r\nEach time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\r\n\r\n\r\nNote: Given n will be a positive integer.\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: 2\r\nOutput:  2\r\nExplanation:  There are two ways to climb to the top.\r\n\r\n1. 1 step + 1 step\r\n2. 2 steps\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 3\r\nOutput:  3\r\nExplanation:  There are three ways to climb to the top.\r\n\r\n1. 1 step + 1 step + 1 step\r\n2. 1 step + 2 steps\r\n3. 2 steps + 1 step",
        "level": 1,
        "paid_only": false,
        "question_id": 70,
        "slug": "climbing-stairs",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Climbing Stairs",
        "url": "https://leetcode.com/problems/climbing-stairs/description/"
    },
    "71": {
        "description": "Given an absolute path for a file (Unix-style), simplify it.\r\n\r\nFor example,\r\npath = \"/home/\", => \"/home\"\r\npath = \"/a/./b/../../c/\", => \"/c\"\r\n\r\n\r\nclick to show corner cases.\r\n\r\nCorner Cases:\r\n\r\n\r\n\r\nDid you consider the case where path = \"/../\"?\r\nIn this case, you should return \"/\".\r\nAnother corner case is the path might contain multiple slashes '/' together, such as \"/home//foo/\".\r\nIn this case, you should ignore redundant slashes and return \"/home/foo\".",
        "level": 2,
        "paid_only": false,
        "question_id": 71,
        "slug": "simplify-path",
        "tags": [
            "String",
            "Stack"
        ],
        "title": "Simplify Path",
        "url": "https://leetcode.com/problems/simplify-path/description/"
    },
    "72": {
        "description": "Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)\r\n\r\n\r\n\r\nYou have the following 3 operations permitted on a word:\r\n\r\n\r\n\r\na) Insert a character\r\nb) Delete a character\r\nc) Replace a character",
        "level": 3,
        "paid_only": false,
        "question_id": 72,
        "slug": "edit-distance",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "title": "Edit Distance",
        "url": "https://leetcode.com/problems/edit-distance/description/"
    },
    "73": {
        "description": "Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.\r\n\r\n\r\nclick to show follow up.\r\n\r\nFollow up:\r\n\r\n\r\nDid you use extra space?\r\nA straight forward solution using O(mn) space is probably a bad idea.\r\nA simple improvement uses O(m + n) space, but still not the best solution.\r\nCould you devise a constant space solution?",
        "level": 2,
        "paid_only": false,
        "question_id": 73,
        "slug": "set-matrix-zeroes",
        "tags": [
            "Array"
        ],
        "title": "Set Matrix Zeroes",
        "url": "https://leetcode.com/problems/set-matrix-zeroes/description/"
    },
    "74": {
        "description": "Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\r\n\r\n\r\n\r\nIntegers in each row are sorted from left to right.\r\nThe first integer of each row is greater than the last integer of the previous row.\r\n\r\n\r\n\r\n\r\nFor example,\r\n\r\nConsider the following matrix:\r\n\r\n\r\n[\r\n  [1,   3,  5,  7],\r\n  [10, 11, 16, 20],\r\n  [23, 30, 34, 50]\r\n]\r\n\r\n\r\nGiven target = 3, return true.",
        "level": 2,
        "paid_only": false,
        "question_id": 74,
        "slug": "search-a-2d-matrix",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "title": "Search a 2D Matrix",
        "url": "https://leetcode.com/problems/search-a-2d-matrix/description/"
    },
    "75": {
        "description": "Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.\r\n\r\n\r\n\r\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\r\n\r\n\r\n\r\nNote:\r\nYou are not suppose to use the library's sort function for this problem.\r\n\r\n\r\nclick to show follow up.\r\n\r\n\r\nFollow up:\r\nA rather straight forward solution is a two-pass algorithm using counting sort.\r\nFirst, iterate the array counting number of 0's, 1's, and 2's, then overwrite array with total number of 0's, then 1's and followed by 2's.\r\nCould you come up with an one-pass algorithm using only constant space?",
        "level": 2,
        "paid_only": false,
        "question_id": 75,
        "slug": "sort-colors",
        "tags": [
            "Array",
            "Two Pointers",
            "Sort"
        ],
        "title": "Sort Colors",
        "url": "https://leetcode.com/problems/sort-colors/description/"
    },
    "76": {
        "description": "Given a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).\r\n\r\n\r\n\r\nFor example,\r\nS = \"ADOBECODEBANC\"\r\nT = \"ABC\"\r\n\r\n\r\nMinimum window is \"BANC\".\r\n\r\n\r\n\r\nNote:\r\nIf there is no such window in S that covers all characters in T, return the empty string \"\".\r\n\r\n\r\nIf there are multiple such windows, you are guaranteed that there will always be only one unique minimum window in S.",
        "level": 3,
        "paid_only": false,
        "question_id": 76,
        "slug": "minimum-window-substring",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "String"
        ],
        "title": "Minimum Window Substring",
        "url": "https://leetcode.com/problems/minimum-window-substring/description/"
    },
    "77": {
        "description": "Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.\r\n\r\n\r\nFor example,\r\nIf n = 4 and k = 2, a solution is:\r\n\r\n\r\n\r\n[\r\n  [2,4],\r\n  [3,4],\r\n  [2,3],\r\n  [1,2],\r\n  [1,3],\r\n  [1,4],\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 77,
        "slug": "combinations",
        "tags": [
            "Backtracking"
        ],
        "title": "Combinations",
        "url": "https://leetcode.com/problems/combinations/description/"
    },
    "78": {
        "description": "Given a set of distinct integers, nums, return all possible subsets (the power set).\r\n\r\nNote: The solution set must not contain duplicate subsets.\r\n\r\n\r\nFor example,\r\nIf nums = [1,2,3], a solution is:\r\n\r\n\r\n\r\n[\r\n  [3],\r\n  [1],\r\n  [2],\r\n  [1,2,3],\r\n  [1,3],\r\n  [2,3],\r\n  [1,2],\r\n  []\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 78,
        "slug": "subsets",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation"
        ],
        "title": "Subsets",
        "url": "https://leetcode.com/problems/subsets/description/"
    },
    "79": {
        "description": "Given a 2D board and a word, find if the word exists in the grid.\r\n\r\n\r\nThe word can be constructed from letters of sequentially adjacent cell, where \"adjacent\" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.\r\n\r\n\r\n\r\nFor example,\r\nGiven board = \r\n\r\n[\r\n  ['A','B','C','E'],\r\n  ['S','F','C','S'],\r\n  ['A','D','E','E']\r\n]\r\n\r\n\r\nword = \"ABCCED\", -> returns true,\r\nword = \"SEE\", -> returns true,\r\nword = \"ABCB\", -> returns false.",
        "level": 2,
        "paid_only": false,
        "question_id": 79,
        "slug": "word-search",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "title": "Word Search",
        "url": "https://leetcode.com/problems/word-search/description/"
    },
    "80": {
        "description": "Follow up for \"Remove Duplicates\":\r\nWhat if duplicates are allowed at most twice?\r\n\r\n\r\nFor example,\r\nGiven sorted array nums = [1,1,1,2,2,3],\r\n\r\n\r\nYour function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesn't matter what you leave beyond the new length.",
        "level": 2,
        "paid_only": false,
        "question_id": 80,
        "slug": "remove-duplicates-from-sorted-array-ii",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "Remove Duplicates from Sorted Array II",
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/description/"
    },
    "81": {
        "description": "Follow up for \"Search in Rotated Sorted Array\":\r\nWhat if duplicates are allowed?\r\n\r\nWould this affect the run-time complexity? How and why?\r\n\r\n\r\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\r\n\r\nWrite a function to determine if a given target is in the array.\r\n\r\nThe array may contain duplicates.",
        "level": 2,
        "paid_only": false,
        "question_id": 81,
        "slug": "search-in-rotated-sorted-array-ii",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "title": "Search in Rotated Sorted Array II",
        "url": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/description/"
    },
    "82": {
        "description": "Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.\r\n\r\n\r\nFor example,\r\nGiven 1->2->3->3->4->4->5, return 1->2->5.\r\nGiven 1->1->1->2->3, return 2->3.",
        "level": 2,
        "paid_only": false,
        "question_id": 82,
        "slug": "remove-duplicates-from-sorted-list-ii",
        "tags": [
            "Linked List"
        ],
        "title": "Remove Duplicates from Sorted List II",
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/description/"
    },
    "83": {
        "description": "Given a sorted linked list, delete all duplicates such that each element appear only once.\r\n\r\n\r\nFor example,\r\nGiven 1->1->2, return 1->2.\r\nGiven 1->1->2->3->3, return 1->2->3.",
        "level": 1,
        "paid_only": false,
        "question_id": 83,
        "slug": "remove-duplicates-from-sorted-list",
        "tags": [
            "Linked List"
        ],
        "title": "Remove Duplicates from Sorted List",
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/description/"
    },
    "84": {
        "description": "Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\r\n\r\n\r\n\r\n\r\nAbove is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].\r\n\r\n\r\n\r\n\r\nThe largest rectangle is shown in the shaded area, which has area = 10 unit.\r\n\r\n\r\n\r\nFor example,\r\nGiven heights = [2,1,5,6,2,3],\r\nreturn 10.",
        "level": 3,
        "paid_only": false,
        "question_id": 84,
        "slug": "largest-rectangle-in-histogram",
        "tags": [
            "Array",
            "Stack"
        ],
        "title": "Largest Rectangle in Histogram",
        "url": "https://leetcode.com/problems/largest-rectangle-in-histogram/description/"
    },
    "85": {
        "description": "Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\r\n\r\n\r\nFor example, given the following matrix:\r\n\r\n1 0 1 0 0\r\n1 0 1 1 1\r\n1 1 1 1 1\r\n1 0 0 1 0\r\n\r\nReturn 6.",
        "level": 3,
        "paid_only": false,
        "question_id": 85,
        "slug": "maximal-rectangle",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Stack"
        ],
        "title": "Maximal Rectangle",
        "url": "https://leetcode.com/problems/maximal-rectangle/description/"
    },
    "86": {
        "description": "Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.\r\n\r\n\r\nYou should preserve the original relative order of the nodes in each of the two partitions.\r\n\r\n\r\nFor example,\r\nGiven 1->4->3->2->5->2 and x = 3,\r\nreturn 1->2->2->4->3->5.",
        "level": 2,
        "paid_only": false,
        "question_id": 86,
        "slug": "partition-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "title": "Partition List",
        "url": "https://leetcode.com/problems/partition-list/description/"
    },
    "87": {
        "description": "Given a string s1, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.\r\n\r\n\r\nBelow is one possible representation of s1 = \"great\":\r\n\r\n\r\n    great\r\n   /    \\\r\n  gr    eat\r\n / \\    /  \\\r\ng   r  e   at\r\n           / \\\r\n          a   t\r\n\r\n\r\nTo scramble the string, we may choose any non-leaf node and swap its two children.\r\n\r\n\r\nFor example, if we choose the node \"gr\" and swap its two children, it produces a scrambled string \"rgeat\".\r\n\r\n\r\n    rgeat\r\n   /    \\\r\n  rg    eat\r\n / \\    /  \\\r\nr   g  e   at\r\n           / \\\r\n          a   t\r\n\r\n\r\nWe say that \"rgeat\" is a scrambled string of \"great\".\r\n\r\n\r\nSimilarly, if we continue to swap the children of nodes \"eat\" and \"at\", it produces a scrambled string \"rgtae\".\r\n\r\n\r\n    rgtae\r\n   /    \\\r\n  rg    tae\r\n / \\    /  \\\r\nr   g  ta  e\r\n       / \\\r\n      t   a\r\n\r\n\r\nWe say that \"rgtae\" is a scrambled string of \"great\".\r\n\r\n\r\nGiven two strings s1 and s2 of the same length, determine if s2 is a scrambled string of s1.",
        "level": 3,
        "paid_only": false,
        "question_id": 87,
        "slug": "scramble-string",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "title": "Scramble String",
        "url": "https://leetcode.com/problems/scramble-string/description/"
    },
    "88": {
        "description": "Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.\r\n\r\n\r\nNote:\r\nYou may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively.",
        "level": 1,
        "paid_only": false,
        "question_id": 88,
        "slug": "merge-sorted-array",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "Merge Sorted Array",
        "url": "https://leetcode.com/problems/merge-sorted-array/description/"
    },
    "89": {
        "description": "The gray code is a binary numeral system where two successive values differ in only one bit.\r\n\r\nGiven a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.\r\n\r\nFor example, given n = 2, return [0,1,3,2]. Its gray code sequence is:\r\n\r\n00 - 0\r\n01 - 1\r\n11 - 3\r\n10 - 2\r\n\r\n\r\nNote:\r\nFor a given n, a gray code sequence is not uniquely defined.\r\n\r\nFor example, [0,2,3,1] is also a valid gray code sequence according to the above definition.\r\n\r\nFor now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.",
        "level": 2,
        "paid_only": false,
        "question_id": 89,
        "slug": "gray-code",
        "tags": [
            "Backtracking"
        ],
        "title": "Gray Code",
        "url": "https://leetcode.com/problems/gray-code/description/"
    },
    "90": {
        "description": "Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\r\n\r\nNote: The solution set must not contain duplicate subsets.\r\n\r\n\r\nFor example,\r\nIf nums = [1,2,2], a solution is:\r\n\r\n\r\n\r\n[\r\n  [2],\r\n  [1],\r\n  [1,2,2],\r\n  [2,2],\r\n  [1,2],\r\n  []\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 90,
        "slug": "subsets-ii",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "title": "Subsets II",
        "url": "https://leetcode.com/problems/subsets-ii/description/"
    },
    "91": {
        "description": "A message containing letters from A-Z is being encoded to numbers using the following mapping:\r\n\r\n\r\n\r\n'A' -> 1\r\n'B' -> 2\r\n...\r\n'Z' -> 26\r\n\r\n\r\n\r\nGiven an encoded message containing digits, determine the total number of ways to decode it.\r\n\r\n\r\n\r\nFor example,\r\nGiven encoded message \"12\",\r\nit could be decoded as \"AB\" (1 2) or \"L\" (12).\r\n\r\n\r\n\r\nThe number of ways decoding \"12\" is 2.",
        "level": 2,
        "paid_only": false,
        "question_id": 91,
        "slug": "decode-ways",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "title": "Decode Ways",
        "url": "https://leetcode.com/problems/decode-ways/description/"
    },
    "92": {
        "description": "Reverse a linked list from position m to n. Do it in-place and in one-pass.\r\n\r\n\r\n\r\nFor example:\r\nGiven 1->2->3->4->5->NULL, m = 2 and n = 4,\r\n\r\n\r\nreturn 1->4->3->2->5->NULL.\r\n\r\n\r\nNote:\r\nGiven m, n satisfy the following condition:\r\n1 ≤ m ≤ n ≤ length of list.",
        "level": 2,
        "paid_only": false,
        "question_id": 92,
        "slug": "reverse-linked-list-ii",
        "tags": [
            "Linked List"
        ],
        "title": "Reverse Linked List II",
        "url": "https://leetcode.com/problems/reverse-linked-list-ii/description/"
    },
    "93": {
        "description": "Given a string containing only digits, restore it by returning all possible valid IP address combinations.\r\n\r\n\r\nFor example:\r\nGiven \"25525511135\",\r\n\r\n\r\nreturn [\"255.255.11.135\", \"255.255.111.35\"]. (Order does not matter)",
        "level": 2,
        "paid_only": false,
        "question_id": 93,
        "slug": "restore-ip-addresses",
        "tags": [
            "String",
            "Backtracking"
        ],
        "title": "Restore IP Addresses",
        "url": "https://leetcode.com/problems/restore-ip-addresses/description/"
    },
    "94": {
        "description": "Given a binary tree, return the inorder traversal of its nodes' values.\r\n\r\n\r\nFor example:\r\nGiven binary tree [1,null,2,3],\r\n\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n\r\n\r\n\r\nreturn [1,3,2].\r\n\r\n\r\nNote: Recursive solution is trivial, could you do it iteratively?",
        "level": 2,
        "paid_only": false,
        "question_id": 94,
        "slug": "binary-tree-inorder-traversal",
        "tags": [
            "Hash Table",
            "Stack",
            "Tree"
        ],
        "title": "Binary Tree Inorder Traversal",
        "url": "https://leetcode.com/problems/binary-tree-inorder-traversal/description/"
    },
    "95": {
        "description": "Given an integer n, generate all structurally unique BST's (binary search trees) that store values 1...n.\r\n\r\n\r\nFor example,\r\nGiven n = 3, your program should return all 5 unique BST's shown below.\r\n\r\n\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3",
        "level": 2,
        "paid_only": false,
        "question_id": 95,
        "slug": "unique-binary-search-trees-ii",
        "tags": [
            "Dynamic Programming",
            "Tree"
        ],
        "title": "Unique Binary Search Trees II",
        "url": "https://leetcode.com/problems/unique-binary-search-trees-ii/description/"
    },
    "96": {
        "description": "Given n, how many structurally unique BST's (binary search trees) that store values 1...n?\r\n\r\n\r\nFor example,\r\nGiven n = 3, there are a total of 5 unique BST's.\r\n\r\n\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3",
        "level": 2,
        "paid_only": false,
        "question_id": 96,
        "slug": "unique-binary-search-trees",
        "tags": [
            "Dynamic Programming",
            "Tree"
        ],
        "title": "Unique Binary Search Trees",
        "url": "https://leetcode.com/problems/unique-binary-search-trees/description/"
    },
    "97": {
        "description": "Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.\r\n\r\n\r\n\r\nFor example,\r\nGiven:\r\ns1 = \"aabcc\",\r\ns2 = \"dbbca\",\r\n\r\n\r\nWhen s3 = \"aadbbcbcac\", return true.\r\nWhen s3 = \"aadbbbaccc\", return false.",
        "level": 3,
        "paid_only": false,
        "question_id": 97,
        "slug": "interleaving-string",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "title": "Interleaving String",
        "url": "https://leetcode.com/problems/interleaving-string/description/"
    },
    "98": {
        "description": "Given a binary tree, determine if it is a valid binary search tree (BST).\r\n\r\n\r\n\r\nAssume a BST is defined as follows:\r\n\r\nThe left subtree of a node contains only nodes with keys less than the node's key.\r\nThe right subtree of a node contains only nodes with keys greater than the node's key.\r\nBoth the left and right subtrees must also be binary search trees.\r\n\r\n\r\n\r\nExample 1:\r\n\r\n    2\r\n   / \\\r\n  1   3\r\n\r\nBinary tree [2,1,3], return true.\r\n\r\n\r\nExample 2:\r\n\r\n    1\r\n   / \\\r\n  2   3\r\n\r\nBinary tree [1,2,3], return false.",
        "level": 2,
        "paid_only": false,
        "question_id": 98,
        "slug": "validate-binary-search-tree",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Validate Binary Search Tree",
        "url": "https://leetcode.com/problems/validate-binary-search-tree/description/"
    },
    "99": {
        "description": "Two elements of a binary search tree (BST) are swapped by mistake.\r\n\r\nRecover the tree without changing its structure.\r\n\r\n\r\nNote:\r\nA solution using O(n) space is pretty straight forward. Could you devise a constant space solution?",
        "level": 3,
        "paid_only": false,
        "question_id": 99,
        "slug": "recover-binary-search-tree",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Recover Binary Search Tree",
        "url": "https://leetcode.com/problems/recover-binary-search-tree/description/"
    },
    "100": {
        "description": "Given two binary trees, write a function to check if they are the same or not.\r\n\r\n\r\nTwo binary trees are considered the same if they are structurally identical and the nodes have the same value.\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:     1         1\r\n          / \\       / \\\r\n         2   3     2   3\r\n\r\n        [1,2,3],   [1,2,3]\r\n\r\nOutput: true\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:     1         1\r\n          /           \\\r\n         2             2\r\n\r\n        [1,2],     [1,null,2]\r\n\r\nOutput: false\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput:     1         1\r\n          / \\       / \\\r\n         2   1     1   2\r\n\r\n        [1,2,1],   [1,1,2]\r\n\r\nOutput: false",
        "level": 1,
        "paid_only": false,
        "question_id": 100,
        "slug": "same-tree",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Same Tree",
        "url": "https://leetcode.com/problems/same-tree/description/"
    },
    "101": {
        "description": "Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).\r\n\r\n\r\nFor example, this binary tree [1,2,2,3,4,4,3] is symmetric:\r\n\r\n    1\r\n   / \\\r\n  2   2\r\n / \\ / \\\r\n3  4 4  3\r\n\r\n\r\n\r\nBut the following [1,2,2,null,3,null,3]  is not:\r\n\r\n    1\r\n   / \\\r\n  2   2\r\n   \\   \\\r\n   3    3\r\n\r\n\r\n\r\n\r\nNote:\r\nBonus points if you could solve it both recursively and iteratively.",
        "level": 1,
        "paid_only": false,
        "question_id": 101,
        "slug": "symmetric-tree",
        "tags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Symmetric Tree",
        "url": "https://leetcode.com/problems/symmetric-tree/description/"
    },
    "102": {
        "description": "Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\r\n\r\n\r\nFor example:\r\nGiven binary tree [3,9,20,null,null,15,7],\r\n\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\n\r\n\r\nreturn its level order traversal as:\r\n\r\n[\r\n  [3],\r\n  [9,20],\r\n  [15,7]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 102,
        "slug": "binary-tree-level-order-traversal",
        "tags": [
            "Tree",
            "Breadth-first Search"
        ],
        "title": "Binary Tree Level Order Traversal",
        "url": "https://leetcode.com/problems/binary-tree-level-order-traversal/description/"
    },
    "103": {
        "description": "Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).\r\n\r\n\r\nFor example:\r\nGiven binary tree [3,9,20,null,null,15,7],\r\n\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\n\r\n\r\nreturn its zigzag level order traversal as:\r\n\r\n[\r\n  [3],\r\n  [20,9],\r\n  [15,7]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 103,
        "slug": "binary-tree-zigzag-level-order-traversal",
        "tags": [
            "Stack",
            "Tree",
            "Breadth-first Search"
        ],
        "title": "Binary Tree Zigzag Level Order Traversal",
        "url": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/description/"
    },
    "104": {
        "description": "Given a binary tree, find its maximum depth.\r\n\r\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.",
        "level": 1,
        "paid_only": false,
        "question_id": 104,
        "slug": "maximum-depth-of-binary-tree",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Maximum Depth of Binary Tree",
        "url": "https://leetcode.com/problems/maximum-depth-of-binary-tree/description/"
    },
    "105": {
        "description": "Given preorder and inorder traversal of a tree, construct the binary tree.\r\n\r\nNote:\r\nYou may assume that duplicates do not exist in the tree.",
        "level": 2,
        "paid_only": false,
        "question_id": 105,
        "slug": "construct-binary-tree-from-preorder-and-inorder-traversal",
        "tags": [
            "Array",
            "Tree",
            "Depth-first Search"
        ],
        "title": "Construct Binary Tree from Preorder and Inorder Traversal",
        "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/description/"
    },
    "106": {
        "description": "Given inorder and postorder traversal of a tree, construct the binary tree.\r\n\r\nNote:\r\nYou may assume that duplicates do not exist in the tree.",
        "level": 2,
        "paid_only": false,
        "question_id": 106,
        "slug": "construct-binary-tree-from-inorder-and-postorder-traversal",
        "tags": [
            "Array",
            "Tree",
            "Depth-first Search"
        ],
        "title": "Construct Binary Tree from Inorder and Postorder Traversal",
        "url": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/description/"
    },
    "107": {
        "description": "Given a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).\r\n\r\n\r\nFor example:\r\nGiven binary tree [3,9,20,null,null,15,7],\r\n\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\n\r\n\r\nreturn its bottom-up level order traversal as:\r\n\r\n[\r\n  [15,7],\r\n  [9,20],\r\n  [3]\r\n]",
        "level": 1,
        "paid_only": false,
        "question_id": 107,
        "slug": "binary-tree-level-order-traversal-ii",
        "tags": [
            "Tree",
            "Breadth-first Search"
        ],
        "title": "Binary Tree Level Order Traversal II",
        "url": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/description/"
    },
    "108": {
        "description": "Given an array where elements are sorted in ascending order, convert it to a height balanced BST.",
        "level": 1,
        "paid_only": false,
        "question_id": 108,
        "slug": "convert-sorted-array-to-binary-search-tree",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Convert Sorted Array to Binary Search Tree",
        "url": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description/"
    },
    "109": {
        "description": "Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.",
        "level": 2,
        "paid_only": false,
        "question_id": 109,
        "slug": "convert-sorted-list-to-binary-search-tree",
        "tags": [
            "Linked List",
            "Depth-first Search"
        ],
        "title": "Convert Sorted List to Binary Search Tree",
        "url": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/description/"
    },
    "110": {
        "description": "Given a binary tree, determine if it is height-balanced.\r\n\r\n\r\n\r\nFor this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.",
        "level": 1,
        "paid_only": false,
        "question_id": 110,
        "slug": "balanced-binary-tree",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Balanced Binary Tree",
        "url": "https://leetcode.com/problems/balanced-binary-tree/description/"
    },
    "111": {
        "description": "Given a binary tree, find its minimum depth.\r\n\r\nThe minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.",
        "level": 1,
        "paid_only": false,
        "question_id": 111,
        "slug": "minimum-depth-of-binary-tree",
        "tags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Minimum Depth of Binary Tree",
        "url": "https://leetcode.com/problems/minimum-depth-of-binary-tree/description/"
    },
    "112": {
        "description": "Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.\r\n\r\n\r\nFor example:\r\nGiven the below binary tree and sum = 22,\r\n\r\n              5\r\n             / \\\r\n            4   8\r\n           /   / \\\r\n          11  13  4\r\n         /  \\      \\\r\n        7    2      1\r\n\r\n\r\n\r\nreturn true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.",
        "level": 1,
        "paid_only": false,
        "question_id": 112,
        "slug": "path-sum",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Path Sum",
        "url": "https://leetcode.com/problems/path-sum/description/"
    },
    "113": {
        "description": "Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.\r\n\r\n\r\nFor example:\r\nGiven the below binary tree and sum = 22,\r\n\r\n              5\r\n             / \\\r\n            4   8\r\n           /   / \\\r\n          11  13  4\r\n         /  \\    / \\\r\n        7    2  5   1\r\n\r\n\r\n\r\nreturn\r\n\r\n[\r\n   [5,4,11,2],\r\n   [5,8,4,5]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 113,
        "slug": "path-sum-ii",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Path Sum II",
        "url": "https://leetcode.com/problems/path-sum-ii/description/"
    },
    "114": {
        "description": "Given a binary tree, flatten it to a linked list in-place.\r\n\r\n\r\n\r\nFor example,\r\nGiven\r\n\r\n         1\r\n        / \\\r\n       2   5\r\n      / \\   \\\r\n     3   4   6\r\n\r\n\r\n\r\nThe flattened tree should look like:\r\n\r\n   1\r\n    \\\r\n     2\r\n      \\\r\n       3\r\n        \\\r\n         4\r\n          \\\r\n           5\r\n            \\\r\n             6\r\n\r\n\r\nclick to show hints.\r\n\r\nHints:\r\nIf you notice carefully in the flattened tree, each node's right child points to the next node of a pre-order traversal.",
        "level": 2,
        "paid_only": false,
        "question_id": 114,
        "slug": "flatten-binary-tree-to-linked-list",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Flatten Binary Tree to Linked List",
        "url": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/description/"
    },
    "115": {
        "description": "Given a string S and a string T, count the number of distinct subsequences of S which equals T.\r\n\r\n\r\n\r\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ACE\" is a subsequence of \"ABCDE\" while \"AEC\" is not).\r\n\r\n\r\n\r\nHere is an example:\r\nS = \"rabbbit\", T = \"rabbit\"\r\n\r\n\r\nReturn 3.",
        "level": 3,
        "paid_only": false,
        "question_id": 115,
        "slug": "distinct-subsequences",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "title": "Distinct Subsequences",
        "url": "https://leetcode.com/problems/distinct-subsequences/description/"
    },
    "116": {
        "description": "Given a binary tree\r\n\r\n    struct TreeLinkNode {\r\n      TreeLinkNode *left;\r\n      TreeLinkNode *right;\r\n      TreeLinkNode *next;\r\n    }\r\n\r\n\r\n\r\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.\r\n\r\nInitially, all next pointers are set to NULL.\r\n\r\n\r\nNote:\r\n\r\nYou may only use constant extra space.\r\nYou may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).\r\n\r\n\r\n\r\n\r\nFor example,\r\nGiven the following perfect binary tree,\r\n\r\n         1\r\n       /  \\\r\n      2    3\r\n     / \\  / \\\r\n    4  5  6  7\r\n\r\n\r\n\r\nAfter calling your function, the tree should look like:\r\n\r\n         1 -> NULL\r\n       /  \\\r\n      2 -> 3 -> NULL\r\n     / \\  / \\\r\n    4->5->6->7 -> NULL",
        "level": 2,
        "paid_only": false,
        "question_id": 116,
        "slug": "populating-next-right-pointers-in-each-node",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Populating Next Right Pointers in Each Node",
        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/"
    },
    "117": {
        "description": "Follow up for problem \"Populating Next Right Pointers in Each Node\".\r\nWhat if the given tree could be any binary tree? Would your previous solution still work?\r\n\r\nNote:\r\nYou may only use constant extra space.\r\n\r\n\r\nFor example,\r\nGiven the following binary tree,\r\n\r\n         1\r\n       /  \\\r\n      2    3\r\n     / \\    \\\r\n    4   5    7\r\n\r\n\r\n\r\nAfter calling your function, the tree should look like:\r\n\r\n         1 -> NULL\r\n       /  \\\r\n      2 -> 3 -> NULL\r\n     / \\    \\\r\n    4-> 5 -> 7 -> NULL",
        "level": 2,
        "paid_only": false,
        "question_id": 117,
        "slug": "populating-next-right-pointers-in-each-node-ii",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Populating Next Right Pointers in Each Node II",
        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/"
    },
    "118": {
        "description": "Given numRows, generate the first numRows of Pascal's triangle.\r\n\r\n\r\nFor example, given numRows = 5,\r\nReturn\r\n\r\n[\r\n     [1],\r\n    [1,1],\r\n   [1,2,1],\r\n  [1,3,3,1],\r\n [1,4,6,4,1]\r\n]",
        "level": 1,
        "paid_only": false,
        "question_id": 118,
        "slug": "pascals-triangle",
        "tags": [
            "Array"
        ],
        "title": "Pascal's Triangle",
        "url": "https://leetcode.com/problems/pascals-triangle/description/"
    },
    "119": {
        "description": "Given an index k, return the kth row of the Pascal's triangle.\r\n\r\n\r\nFor example, given k = 3,\r\nReturn [1,3,3,1].\r\n\r\n\r\n\r\nNote:\r\nCould you optimize your algorithm to use only O(k) extra space?",
        "level": 1,
        "paid_only": false,
        "question_id": 119,
        "slug": "pascals-triangle-ii",
        "tags": [
            "Array"
        ],
        "title": "Pascal's Triangle II",
        "url": "https://leetcode.com/problems/pascals-triangle-ii/description/"
    },
    "120": {
        "description": "Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.\r\n\r\n\r\nFor example, given the following triangle\r\n\r\n[\r\n     [2],\r\n    [3,4],\r\n   [6,5,7],\r\n  [4,1,8,3]\r\n]\r\n\r\n\r\n\r\nThe minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).\r\n\r\n\r\n\r\nNote:\r\nBonus point if you are able to do this using only O(n) extra space, where n is the total number of rows in the triangle.",
        "level": 2,
        "paid_only": false,
        "question_id": 120,
        "slug": "triangle",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "title": "Triangle",
        "url": "https://leetcode.com/problems/triangle/description/"
    },
    "121": {
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nIf you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.\r\n\r\nExample 1:\r\n\r\nInput: [7, 1, 5, 3, 6, 4]\r\nOutput: 5\r\n\r\nmax. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than buying price)\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [7, 6, 4, 3, 1]\r\nOutput: 0\r\n\r\nIn this case, no transaction is done, i.e. max profit = 0.",
        "level": 1,
        "paid_only": false,
        "question_id": 121,
        "slug": "best-time-to-buy-and-sell-stock",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "title": "Best Time to Buy and Sell Stock",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/"
    },
    "122": {
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).",
        "level": 1,
        "paid_only": false,
        "question_id": 122,
        "slug": "best-time-to-buy-and-sell-stock-ii",
        "tags": [
            "Array",
            "Greedy"
        ],
        "title": "Best Time to Buy and Sell Stock II",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/"
    },
    "123": {
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete at most two transactions.\r\n\r\nNote:\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).",
        "level": 3,
        "paid_only": false,
        "question_id": 123,
        "slug": "best-time-to-buy-and-sell-stock-iii",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "title": "Best Time to Buy and Sell Stock III",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/"
    },
    "124": {
        "description": "Given a binary tree, find the maximum path sum.\r\n\r\n\r\nFor this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain at least one node and does not need to go through the root.\r\n\r\n\r\nFor example:\r\nGiven the below binary tree,\r\n\r\n       1\r\n      / \\\r\n     2   3\r\n\r\n\r\n\r\nReturn 6.",
        "level": 3,
        "paid_only": false,
        "question_id": 124,
        "slug": "binary-tree-maximum-path-sum",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Binary Tree Maximum Path Sum",
        "url": "https://leetcode.com/problems/binary-tree-maximum-path-sum/description/"
    },
    "125": {
        "description": "Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\r\n\r\n\r\n\r\nFor example,\r\n\"A man, a plan, a canal: Panama\" is a palindrome.\r\n\"race a car\" is not a palindrome.\r\n\r\n\r\n\r\nNote:\r\nHave you consider that the string might be empty? This is a good question to ask during an interview.\r\n\r\nFor the purpose of this problem, we define empty string as valid palindrome.",
        "level": 1,
        "paid_only": false,
        "question_id": 125,
        "slug": "valid-palindrome",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "title": "Valid Palindrome",
        "url": "https://leetcode.com/problems/valid-palindrome/description/"
    },
    "126": {
        "description": "Given two words (beginWord and endWord), and a dictionary's word list, find all shortest transformation sequence(s) from beginWord to endWord, such that:\r\n\r\n\r\nOnly one letter can be changed at a time\r\nEach transformed word must exist in the word list. Note that beginWord is not a transformed word.\r\n\r\n\r\n\r\nFor example,\r\n\r\n\r\nGiven:\r\nbeginWord = \"hit\"\r\nendWord = \"cog\"\r\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\r\n\r\n\r\nReturn\r\n\r\n  [\r\n    [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\r\n    [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\r\n  ]\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nReturn an empty list if there is no such transformation sequence.\r\nAll words have the same length.\r\nAll words contain only lowercase alphabetic characters.\r\nYou may assume no duplicates in the word list.\r\nYou may assume beginWord and endWord are non-empty and are not the same.\r\n\r\n\r\n\r\n\r\nUPDATE (2017/1/20):\r\nThe wordList parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.",
        "level": 3,
        "paid_only": false,
        "question_id": 126,
        "slug": "word-ladder-ii",
        "tags": [
            "Array",
            "String",
            "Backtracking",
            "Breadth-first Search"
        ],
        "title": "Word Ladder II",
        "url": "https://leetcode.com/problems/word-ladder-ii/description/"
    },
    "127": {
        "description": "Given two words (beginWord and endWord), and a dictionary's word list, find the length of shortest transformation sequence from beginWord to endWord, such that:\r\n\r\n\r\nOnly one letter can be changed at a time.\r\nEach transformed word must exist in the word list. Note that beginWord is not a transformed word.\r\n\r\n\r\n\r\nFor example,\r\n\r\n\r\nGiven:\r\nbeginWord = \"hit\"\r\nendWord = \"cog\"\r\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\r\n\r\n\r\nAs one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\r\nreturn its length 5.\r\n\r\n\r\n\r\nNote:\r\n\r\nReturn 0 if there is no such transformation sequence.\r\nAll words have the same length.\r\nAll words contain only lowercase alphabetic characters.\r\nYou may assume no duplicates in the word list.\r\nYou may assume beginWord and endWord are non-empty and are not the same.\r\n\r\n\r\n\r\n\r\nUPDATE (2017/1/20):\r\nThe wordList parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.",
        "level": 2,
        "paid_only": false,
        "question_id": 127,
        "slug": "word-ladder",
        "tags": [],
        "title": "Word Ladder",
        "url": "https://leetcode.com/problems/word-ladder/description/"
    },
    "128": {
        "description": "Given an unsorted array of integers, find the length of the longest consecutive elements sequence.\r\n\r\n\r\nFor example,\r\nGiven [100, 4, 200, 1, 3, 2],\r\nThe longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.\r\n\r\n\r\nYour algorithm should run in O(n) complexity.",
        "level": 3,
        "paid_only": false,
        "question_id": 128,
        "slug": "longest-consecutive-sequence",
        "tags": [
            "Array",
            "Union Find"
        ],
        "title": "Longest Consecutive Sequence",
        "url": "https://leetcode.com/problems/longest-consecutive-sequence/description/"
    },
    "129": {
        "description": "Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.\r\nAn example is the root-to-leaf path 1->2->3 which represents the number 123.\r\n\r\nFind the total sum of all root-to-leaf numbers.\r\n\r\nFor example,\r\n\r\n    1\r\n   / \\\r\n  2   3\r\n\r\n\r\n\r\nThe root-to-leaf path 1->2 represents the number 12.\r\nThe root-to-leaf path 1->3 represents the number 13.\r\n\r\n\r\nReturn the sum = 12 + 13 = 25.",
        "level": 2,
        "paid_only": false,
        "question_id": 129,
        "slug": "sum-root-to-leaf-numbers",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Sum Root to Leaf Numbers",
        "url": "https://leetcode.com/problems/sum-root-to-leaf-numbers/description/"
    },
    "130": {
        "description": "Given a 2D board containing 'X' and 'O' (the letter O), capture all regions surrounded by 'X'.\r\n\r\nA region is captured by flipping all 'O's into 'X's in that surrounded region.\r\n\r\n\r\n\r\nFor example,\r\n\r\nX X X X\r\nX O O X\r\nX X O X\r\nX O X X\r\n\r\n\r\n\r\n\r\nAfter running your function, the board should be:\r\n\r\nX X X X\r\nX X X X\r\nX X X X\r\nX O X X",
        "level": 2,
        "paid_only": false,
        "question_id": 130,
        "slug": "surrounded-regions",
        "tags": [
            "Breadth-first Search",
            "Union Find"
        ],
        "title": "Surrounded Regions",
        "url": "https://leetcode.com/problems/surrounded-regions/description/"
    },
    "131": {
        "description": "Given a string s, partition s such that every substring of the partition is a palindrome.\r\n\r\n\r\nReturn all possible palindrome partitioning of s.\r\n\r\n\r\nFor example, given s = \"aab\",\r\n\r\nReturn\r\n\r\n[\r\n  [\"aa\",\"b\"],\r\n  [\"a\",\"a\",\"b\"]\r\n]",
        "level": 2,
        "paid_only": false,
        "question_id": 131,
        "slug": "palindrome-partitioning",
        "tags": [
            "Backtracking"
        ],
        "title": "Palindrome Partitioning",
        "url": "https://leetcode.com/problems/palindrome-partitioning/description/"
    },
    "132": {
        "description": "Given a string s, partition s such that every substring of the partition is a palindrome.\r\n\r\n\r\nReturn the minimum cuts needed for a palindrome partitioning of s.\r\n\r\n\r\nFor example, given s = \"aab\",\r\nReturn 1 since the palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut.",
        "level": 3,
        "paid_only": false,
        "question_id": 132,
        "slug": "palindrome-partitioning-ii",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Palindrome Partitioning II",
        "url": "https://leetcode.com/problems/palindrome-partitioning-ii/description/"
    },
    "133": {
        "description": "Clone an undirected graph. Each node in the graph contains a label and a list of its neighbors.\r\n\r\n\r\n\r\n\r\nOJ's undirected graph serialization:\r\n\r\n\r\nNodes are labeled uniquely.\r\n\r\n\r\nWe use # as a separator for each node, and , as a separator for node label and each neighbor of the node.\r\n\r\n\r\n\r\n\r\nAs an example, consider the serialized graph {0,1,2#1,2#2,2}.\r\n\r\n\r\n\r\nThe graph has a total of three nodes, and therefore contains three parts as separated by #.\r\n\r\nFirst node is labeled as 0. Connect node 0 to both nodes 1 and 2.\r\nSecond node is labeled as 1. Connect node 1 to node 2.\r\nThird node is labeled as 2. Connect node 2 to node 2 (itself), thus forming a self-cycle.\r\n\r\n\r\n\r\n\r\nVisually, the graph looks like the following:\r\n\r\n       1\r\n      / \\\r\n     /   \\\r\n    0 --- 2\r\n         / \\\r\n         \\_/",
        "level": 2,
        "paid_only": false,
        "question_id": 133,
        "slug": "clone-graph",
        "tags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Graph"
        ],
        "title": "Clone Graph",
        "url": "https://leetcode.com/problems/clone-graph/description/"
    },
    "134": {
        "description": "There are N gas stations along a circular route, where the amount of gas at station i is gas[i].\r\n\r\n\r\n\r\nYou have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.\r\n\r\n\r\n\r\nReturn the starting gas station's index if you can travel around the circuit once, otherwise return -1.\r\n\r\n\r\n\r\nNote:\r\nThe solution is guaranteed to be unique.",
        "level": 2,
        "paid_only": false,
        "question_id": 134,
        "slug": "gas-station",
        "tags": [
            "Greedy"
        ],
        "title": "Gas Station",
        "url": "https://leetcode.com/problems/gas-station/description/"
    },
    "135": {
        "description": "There are N children standing in a line. Each child is assigned a rating value. \r\n\r\n\r\nYou are giving candies to these children subjected to the following requirements:\r\n\r\n\r\nEach child must have at least one candy.\r\nChildren with a higher rating get more candies than their neighbors.\r\n\r\n\r\nWhat is the minimum candies you must give?",
        "level": 3,
        "paid_only": false,
        "question_id": 135,
        "slug": "candy",
        "tags": [
            "Greedy"
        ],
        "title": "Candy",
        "url": "https://leetcode.com/problems/candy/description/"
    },
    "136": {
        "description": "Given an array of integers, every element appears twice except for one. Find that single one.\r\n\r\n\r\nNote:\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?",
        "level": 1,
        "paid_only": false,
        "question_id": 136,
        "slug": "single-number",
        "tags": [
            "Hash Table",
            "Bit Manipulation"
        ],
        "title": "Single Number",
        "url": "https://leetcode.com/problems/single-number/description/"
    },
    "137": {
        "description": "Given an array of integers, every element appears three times except for one, which appears exactly once. Find that single one.\r\n\r\n\r\n\r\nNote:\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?",
        "level": 2,
        "paid_only": false,
        "question_id": 137,
        "slug": "single-number-ii",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Single Number II",
        "url": "https://leetcode.com/problems/single-number-ii/description/"
    },
    "138": {
        "description": "A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.\r\n\r\n\r\n\r\nReturn a deep copy of the list.",
        "level": 2,
        "paid_only": false,
        "question_id": 138,
        "slug": "copy-list-with-random-pointer",
        "tags": [
            "Hash Table",
            "Linked List"
        ],
        "title": "Copy List with Random Pointer",
        "url": "https://leetcode.com/problems/copy-list-with-random-pointer/description/"
    },
    "139": {
        "description": "Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.\r\n\r\n\r\nFor example, given\r\ns = \"leetcode\",\r\ndict = [\"leet\", \"code\"].\r\n\r\n\r\n\r\nReturn true because \"leetcode\" can be segmented as \"leet code\".\r\n\r\n\r\n\r\nUPDATE (2017/1/4):\r\nThe wordDict parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.",
        "level": 2,
        "paid_only": false,
        "question_id": 139,
        "slug": "word-break",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Word Break",
        "url": "https://leetcode.com/problems/word-break/description/"
    },
    "140": {
        "description": "Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, add spaces in s to construct a sentence where each word is a valid dictionary word. You may assume the dictionary does not contain duplicate words.\r\n\r\n\r\n\r\nReturn all such possible sentences.\r\n\r\n\r\n\r\nFor example, given\r\ns = \"catsanddog\",\r\ndict = [\"cat\", \"cats\", \"and\", \"sand\", \"dog\"].\r\n\r\n\r\n\r\nA solution is [\"cats and dog\", \"cat sand dog\"].\r\n\r\n\r\n\r\nUPDATE (2017/1/4):\r\nThe wordDict parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.",
        "level": 3,
        "paid_only": false,
        "question_id": 140,
        "slug": "word-break-ii",
        "tags": [
            "Dynamic Programming",
            "Backtracking"
        ],
        "title": "Word Break II",
        "url": "https://leetcode.com/problems/word-break-ii/description/"
    },
    "141": {
        "description": "Given a linked list, determine if it has a cycle in it.\r\n\r\n\r\n\r\nFollow up:\r\nCan you solve it without using extra space?",
        "level": 1,
        "paid_only": false,
        "question_id": 141,
        "slug": "linked-list-cycle",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "title": "Linked List Cycle",
        "url": "https://leetcode.com/problems/linked-list-cycle/description/"
    },
    "142": {
        "description": "Given a linked list, return the node where the cycle begins. If there is no cycle, return null.\r\n\r\n\r\n\r\nNote: Do not modify the linked list.\r\n\r\n\r\nFollow up:\r\nCan you solve it without using extra space?",
        "level": 2,
        "paid_only": false,
        "question_id": 142,
        "slug": "linked-list-cycle-ii",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "title": "Linked List Cycle II",
        "url": "https://leetcode.com/problems/linked-list-cycle-ii/description/"
    },
    "143": {
        "description": "Given a singly linked list L: L0→L1→…→Ln-1→Ln,\r\nreorder it to: L0→Ln→L1→Ln-1→L2→Ln-2→…\r\n\r\n\r\nYou must do this in-place without altering the nodes' values.\r\n\r\n\r\nFor example,\r\nGiven {1,2,3,4}, reorder it to {1,4,2,3}.",
        "level": 2,
        "paid_only": false,
        "question_id": 143,
        "slug": "reorder-list",
        "tags": [
            "Linked List"
        ],
        "title": "Reorder List",
        "url": "https://leetcode.com/problems/reorder-list/description/"
    },
    "144": {
        "description": "Given a binary tree, return the preorder traversal of its nodes' values.\r\n\r\n\r\nFor example:\r\nGiven binary tree [1,null,2,3],\r\n\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n\r\n\r\n\r\nreturn [1,2,3].\r\n\r\n\r\nNote: Recursive solution is trivial, could you do it iteratively?",
        "level": 2,
        "paid_only": false,
        "question_id": 144,
        "slug": "binary-tree-preorder-traversal",
        "tags": [
            "Stack",
            "Tree"
        ],
        "title": "Binary Tree Preorder Traversal",
        "url": "https://leetcode.com/problems/binary-tree-preorder-traversal/description/"
    },
    "145": {
        "description": "Given a binary tree, return the postorder traversal of its nodes' values.\r\n\r\n\r\nFor example:\r\nGiven binary tree {1,#,2,3},\r\n\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n\r\n\r\n\r\nreturn [3,2,1].\r\n\r\n\r\nNote: Recursive solution is trivial, could you do it iteratively?",
        "level": 3,
        "paid_only": false,
        "question_id": 145,
        "slug": "binary-tree-postorder-traversal",
        "tags": [
            "Stack",
            "Tree"
        ],
        "title": "Binary Tree Postorder Traversal",
        "url": "https://leetcode.com/problems/binary-tree-postorder-traversal/description/"
    },
    "146": {
        "description": "Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and put.\r\n\r\n\r\n\r\nget(key) - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.\r\nput(key, value) - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.\r\n\r\n\r\nFollow up:\r\nCould you do both operations in O(1) time complexity?\r\n\r\nExample:\r\n\r\nLRUCache cache = new LRUCache( 2 /* capacity */ );\r\n\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\ncache.get(1);       // returns 1\r\ncache.put(3, 3);    // evicts key 2\r\ncache.get(2);       // returns -1 (not found)\r\ncache.put(4, 4);    // evicts key 1\r\ncache.get(1);       // returns -1 (not found)\r\ncache.get(3);       // returns 3\r\ncache.get(4);       // returns 4",
        "level": 3,
        "paid_only": false,
        "question_id": 146,
        "slug": "lru-cache",
        "tags": [
            "Design"
        ],
        "title": "LRU Cache",
        "url": "https://leetcode.com/problems/lru-cache/description/"
    },
    "147": {
        "description": "Sort a linked list using insertion sort.",
        "level": 2,
        "paid_only": false,
        "question_id": 147,
        "slug": "insertion-sort-list",
        "tags": [
            "Linked List",
            "Sort"
        ],
        "title": "Insertion Sort List",
        "url": "https://leetcode.com/problems/insertion-sort-list/description/"
    },
    "148": {
        "description": "Sort a linked list in O(n log n) time using constant space complexity.",
        "level": 2,
        "paid_only": false,
        "question_id": 148,
        "slug": "sort-list",
        "tags": [
            "Linked List",
            "Sort"
        ],
        "title": "Sort List",
        "url": "https://leetcode.com/problems/sort-list/description/"
    },
    "149": {
        "description": "Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.",
        "level": 3,
        "paid_only": false,
        "question_id": 149,
        "slug": "max-points-on-a-line",
        "tags": [
            "Hash Table",
            "Math"
        ],
        "title": "Max Points on a Line",
        "url": "https://leetcode.com/problems/max-points-on-a-line/description/"
    },
    "150": {
        "description": "Evaluate the value of an arithmetic expression in Reverse Polish Notation.\r\n\r\n\r\n\r\nValid operators are +, -, *, /. Each operand may be an integer or another expression.\r\n\r\n\r\n\r\nSome examples:\r\n\r\n  [\"2\", \"1\", \"+\", \"3\", \"*\"] -> ((2 + 1) * 3) -> 9\r\n  [\"4\", \"13\", \"5\", \"/\", \"+\"] -> (4 + (13 / 5)) -> 6",
        "level": 2,
        "paid_only": false,
        "question_id": 150,
        "slug": "evaluate-reverse-polish-notation",
        "tags": [
            "Stack"
        ],
        "title": "Evaluate Reverse Polish Notation",
        "url": "https://leetcode.com/problems/evaluate-reverse-polish-notation/description/"
    },
    "151": {
        "description": "Given an input string, reverse the string word by word.\r\n\r\n\r\n\r\nFor example,\r\nGiven s = \"the sky is blue\",\r\nreturn \"blue is sky the\".\r\n\r\n\r\n\r\nUpdate (2015-02-12):\r\nFor C programmers: Try to solve it in-place in O(1) space.\r\n\r\n\r\nclick to show clarification.\r\n\r\nClarification:\r\n\r\n\r\n\r\nWhat constitutes a word?\r\nA sequence of non-space characters constitutes a word.\r\nCould the input string contain leading or trailing spaces?\r\nYes. However, your reversed string should not contain leading or trailing spaces.\r\nHow about multiple spaces between two words?\r\nReduce them to a single space in the reversed string.",
        "level": 2,
        "paid_only": false,
        "question_id": 151,
        "slug": "reverse-words-in-a-string",
        "tags": [
            "String"
        ],
        "title": "Reverse Words in a String",
        "url": "https://leetcode.com/problems/reverse-words-in-a-string/description/"
    },
    "152": {
        "description": "Find the contiguous subarray within an array (containing at least one number) which has the largest product.\r\n\r\n\r\n\r\nFor example, given the array [2,3,-2,4],\r\nthe contiguous subarray [2,3] has the largest product = 6.",
        "level": 2,
        "paid_only": false,
        "question_id": 152,
        "slug": "maximum-product-subarray",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "title": "Maximum Product Subarray",
        "url": "https://leetcode.com/problems/maximum-product-subarray/description/"
    },
    "153": {
        "description": "Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\r\n\r\nFind the minimum element.\r\n\r\nYou may assume no duplicate exists in the array.",
        "level": 2,
        "paid_only": false,
        "question_id": 153,
        "slug": "find-minimum-in-rotated-sorted-array",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "title": "Find Minimum in Rotated Sorted Array",
        "url": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/"
    },
    "154": {
        "description": "Follow up for \"Find Minimum in Rotated Sorted Array\":\r\nWhat if duplicates are allowed?\r\n\r\nWould this affect the run-time complexity? How and why?\r\n\r\n\r\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\r\n\r\nFind the minimum element.\r\n\r\nThe array may contain duplicates.",
        "level": 3,
        "paid_only": false,
        "question_id": 154,
        "slug": "find-minimum-in-rotated-sorted-array-ii",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "title": "Find Minimum in Rotated Sorted Array II",
        "url": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/description/"
    },
    "155": {
        "description": "Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.\r\n\r\n\r\npush(x) -- Push element x onto stack.\r\n\r\n\r\npop() -- Removes the element on top of the stack.\r\n\r\n\r\ntop() -- Get the top element.\r\n\r\n\r\ngetMin() -- Retrieve the minimum element in the stack.\r\n\r\n\r\n\r\n\r\nExample:\r\n\r\nMinStack minStack = new MinStack();\r\nminStack.push(-2);\r\nminStack.push(0);\r\nminStack.push(-3);\r\nminStack.getMin();   --> Returns -3.\r\nminStack.pop();\r\nminStack.top();      --> Returns 0.\r\nminStack.getMin();   --> Returns -2.",
        "level": 1,
        "paid_only": false,
        "question_id": 155,
        "slug": "min-stack",
        "tags": [
            "Stack",
            "Design"
        ],
        "title": "Min Stack",
        "url": "https://leetcode.com/problems/min-stack/description/"
    },
    "156": {
        "description": "Given a binary tree where all the right nodes are either leaf nodes with a\nsibling (a left node that shares the same parent node) or empty, flip it\nupside down and turn it into a tree where the original right nodes turned into\nleft leaf nodes. Return the new root.\n\nFor example:\n\nGiven a binary tree {1,2,3,4,5},\n\n    1\n\n   / \\\n\n  2   3\n\n / \\\n\n4   5\n\nreturn the root of the binary tree [4,5,2,#,#,3,1].\n\n   4\n\n  / \\\n\n 5   2\n\n    / \\\n\n   3   1",
        "level": 2,
        "paid_only": true,
        "question_id": 156,
        "slug": "binary-tree-upside-down",
        "tags": [],
        "title": "Binary Tree Upside Down",
        "url": "https://leetcode.com/problems/binary-tree-upside-down/description/"
    },
    "157": {
        "description": "The API: int read4(char *buf) reads 4 characters at a time from a file.\nThe return value is the actual number of characters read. For example, it\nreturns 3 if there is only 3 characters left in the file.\nBy using the read4 API, implement the function int read(char *buf, int n) that\nreads n characters from the file.\nNote:\nThe read function will only be called once for each test case.",
        "level": 1,
        "paid_only": true,
        "question_id": 157,
        "slug": "read-n-characters-given-read4",
        "tags": [],
        "title": "Read N Characters Given Read4",
        "url": "https://leetcode.com/problems/read-n-characters-given-read4/description/"
    },
    "158": {
        "description": "The API: int read4(char *buf) reads 4 characters at a time from a file.\n\nThe return value is the actual number of characters read. For example, it\nreturns 3 if there is only 3 characters left in the file.\n\nBy using the read4 API, implement the function int read(char *buf, int n) that\nreads n characters from the file.\n\nNote:\nThe read function may be called multiple times.",
        "level": 3,
        "paid_only": true,
        "question_id": 158,
        "slug": "read-n-characters-given-read4-ii-call-multiple-times",
        "tags": [],
        "title": "Read N Characters Given Read4 II - Call multiple times",
        "url": "https://leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times/description/"
    },
    "159": {
        "description": "Given a string S, find the length of the longest substring T that contains at\nmost two distinct characters.\nFor example,\nGiven S = \"eceba\",\nT is \"ece\" which its length is 3.",
        "level": 3,
        "paid_only": true,
        "question_id": 159,
        "slug": "longest-substring-with-at-most-two-distinct-characters",
        "tags": [],
        "title": "Longest Substring with At Most Two Distinct Characters",
        "url": "https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/description/"
    },
    "160": {
        "description": "Write a program to find the node at which the intersection of two singly linked lists begins.\r\n\r\nFor example, the following two linked lists: \r\n\r\nA:          a1 → a2\r\n                   ↘\r\n                     c1 → c2 → c3\r\n                   ↗            \r\nB:     b1 → b2 → b3\r\n\r\nbegin to intersect at node c1.\r\n\r\nNotes:\r\n\r\nIf the two linked lists have no intersection at all, return null.\r\nThe linked lists must retain their original structure after the function returns. \r\nYou may assume there are no cycles anywhere in the entire linked structure.\r\nYour code should preferably run in O(n) time and use only O(1) memory.\r\n\r\n\r\n\r\nCredits:Special thanks to @stellari for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 160,
        "slug": "intersection-of-two-linked-lists",
        "tags": [
            "Linked List"
        ],
        "title": "Intersection of Two Linked Lists",
        "url": "https://leetcode.com/problems/intersection-of-two-linked-lists/description/"
    },
    "161": {
        "description": "Given two strings S and T, determine if they are both one edit distance apart.",
        "level": 2,
        "paid_only": true,
        "question_id": 161,
        "slug": "one-edit-distance",
        "tags": [],
        "title": "One Edit Distance",
        "url": "https://leetcode.com/problems/one-edit-distance/description/"
    },
    "162": {
        "description": "A peak element is an element that is greater than its neighbors.\r\n\r\nGiven an input array where num[i] ≠ num[i+1], find a peak element and return its index.\r\n\r\nThe array may contain multiple peaks, in that case return the index to any one of the peaks is fine.\r\n\r\nYou may imagine that num[-1] = num[n] = -∞.\r\n\r\nFor example, in array [1, 2, 3, 1], 3 is a peak element and your function should return the index number 2.\r\n\r\nclick to show spoilers.\r\n\r\nNote:\r\nYour solution should be in logarithmic complexity.\r\n\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 162,
        "slug": "find-peak-element",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "title": "Find Peak Element",
        "url": "https://leetcode.com/problems/find-peak-element/description/"
    },
    "163": {
        "description": "Given a sorted integer array where the range of elements are [0, 99]\ninclusive, return its missing ranges.\nFor example, given [0, 1, 3, 50, 75], return [\"2\", \"4->49\", \"51->74\",\n\"76->99\"]",
        "level": 2,
        "paid_only": true,
        "question_id": 163,
        "slug": "missing-ranges",
        "tags": [],
        "title": "Missing Ranges",
        "url": "https://leetcode.com/problems/missing-ranges/description/"
    },
    "164": {
        "description": "Given an unsorted array, find the maximum difference between the successive elements in its sorted form.\r\n\r\nTry to solve it in linear time/space.\r\n\r\nReturn 0 if the array contains less than 2 elements.\r\n\r\nYou may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.\r\n\r\nCredits:Special thanks to @porker2008 for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 164,
        "slug": "maximum-gap",
        "tags": [
            "Sort"
        ],
        "title": "Maximum Gap",
        "url": "https://leetcode.com/problems/maximum-gap/description/"
    },
    "165": {
        "description": "Compare two version numbers version1 and version2.\r\nIf version1 > version2 return 1, if version1 < version2 return -1, otherwise return 0.\r\n\r\nYou may assume that the version strings are non-empty and contain only digits and the . character.\r\nThe . character does not represent a decimal point and is used to separate number sequences.\r\nFor instance, 2.5 is not \"two and a half\" or \"half way to version three\", it is the fifth second-level revision of the second first-level revision.\r\n\r\nHere is an example of version numbers ordering:\r\n0.1 < 1.1 < 1.2 < 13.37\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 165,
        "slug": "compare-version-numbers",
        "tags": [
            "String"
        ],
        "title": "Compare Version Numbers",
        "url": "https://leetcode.com/problems/compare-version-numbers/description/"
    },
    "166": {
        "description": "Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.\r\n\r\nIf the fractional part is repeating, enclose the repeating part in parentheses.\r\n\r\nFor example,\r\n\r\nGiven numerator = 1, denominator = 2, return \"0.5\".\r\nGiven numerator = 2, denominator = 1, return \"2\".\r\nGiven numerator = 2, denominator = 3, return \"0.(6)\".\r\n\r\n\r\n\r\nCredits:Special thanks to @Shangrila for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 166,
        "slug": "fraction-to-recurring-decimal",
        "tags": [
            "Hash Table",
            "Math"
        ],
        "title": "Fraction to Recurring Decimal",
        "url": "https://leetcode.com/problems/fraction-to-recurring-decimal/description/"
    },
    "167": {
        "description": "Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.\r\n\r\nThe function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.\r\n\r\nYou may assume that each input would have exactly one solution and you may not use the same element twice.\r\n\r\n\r\nInput: numbers={2, 7, 11, 15}, target=9\r\nOutput: index1=1, index2=2",
        "level": 1,
        "paid_only": false,
        "question_id": 167,
        "slug": "two-sum-ii-input-array-is-sorted",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "title": "Two Sum II - Input array is sorted",
        "url": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/description/"
    },
    "168": {
        "description": "Given a positive integer, return its corresponding column title as appear in an Excel sheet.\r\n\r\nFor example:\r\n\r\n    1 -> A\r\n    2 -> B\r\n    3 -> C\r\n    ...\r\n    26 -> Z\r\n    27 -> AA\r\n    28 -> AB \r\n\r\nCredits:Special thanks to @ifanchu for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 168,
        "slug": "excel-sheet-column-title",
        "tags": [
            "Math"
        ],
        "title": "Excel Sheet Column Title",
        "url": "https://leetcode.com/problems/excel-sheet-column-title/description/"
    },
    "169": {
        "description": "Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.\r\n\r\nYou may assume that the array is non-empty and the majority element always exist in the array.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 169,
        "slug": "majority-element",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Bit Manipulation"
        ],
        "title": "Majority Element",
        "url": "https://leetcode.com/problems/majority-element/description/"
    },
    "170": {
        "description": "Design and implement a TwoSum class. It should support the following\noperations:add and find.\n\nadd - Add the number to an internal data structure.\nfind - Find if there exists any pair of numbers which sum is equal to the\nvalue.\n\nFor example,\nadd(1); add(3); add(5);\nfind(4) -> true\nfind(7) -> false",
        "level": 1,
        "paid_only": true,
        "question_id": 170,
        "slug": "two-sum-iii-data-structure-design",
        "tags": [],
        "title": "Two Sum III - Data structure design",
        "url": "https://leetcode.com/problems/two-sum-iii-data-structure-design/description/"
    },
    "171": {
        "description": "Related to question Excel Sheet Column Title\r\nGiven a column title as appear in an Excel sheet, return its corresponding column number.\r\n\r\nFor example:\r\n    A -> 1\r\n    B -> 2\r\n    C -> 3\r\n    ...\r\n    Z -> 26\r\n    AA -> 27\r\n    AB -> 28 \r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 171,
        "slug": "excel-sheet-column-number",
        "tags": [
            "Math"
        ],
        "title": "Excel Sheet Column Number",
        "url": "https://leetcode.com/problems/excel-sheet-column-number/description/"
    },
    "172": {
        "description": "Given an integer n, return the number of trailing zeroes in n!.\r\n\r\nNote: Your solution should be in logarithmic time complexity.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 172,
        "slug": "factorial-trailing-zeroes",
        "tags": [
            "Math"
        ],
        "title": "Factorial Trailing Zeroes",
        "url": "https://leetcode.com/problems/factorial-trailing-zeroes/description/"
    },
    "173": {
        "description": "Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.\r\n\r\nCalling next() will return the next smallest number in the BST.\r\n\r\nNote: next() and hasNext() should run in average O(1) time and uses O(h) memory, where h is the height of the tree. \r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 173,
        "slug": "binary-search-tree-iterator",
        "tags": [
            "Stack",
            "Tree",
            "Design"
        ],
        "title": "Binary Search Tree Iterator",
        "url": "https://leetcode.com/problems/binary-search-tree-iterator/description/"
    },
    "174": {
        "description": "table.dungeon, .dungeon th, .dungeon td {\r\n  border:3px solid black;\r\n}\r\n\r\n .dungeon th, .dungeon td {\r\n    text-align: center;\r\n    height: 70px;\r\n    width: 70px;\r\n}\r\n\r\n\r\nThe demons had captured the princess (P) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (K) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess. \r\nThe knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately. \r\nSome of the rooms are guarded by demons, so the knight loses health (negative integers) upon entering these rooms; \r\nother rooms are either empty (0's) or contain magic orbs that increase the knight's health (positive integers).\r\nIn order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step. \r\n\r\n\r\nWrite a function to determine the knight's minimum initial health so that he is able to rescue the princess.\r\nFor example, given the dungeon below, the initial health of the knight must be at least 7 if he follows the optimal path RIGHT-> RIGHT -> DOWN -> DOWN.\r\n\r\n\r\n \r\n-2 (K) \r\n-3 \r\n3 \r\n \r\n \r\n-5 \r\n-10 \r\n1 \r\n \r\n \r\n10 \r\n30 \r\n-5 (P) \r\n \r\n\r\n\r\n\r\n\r\nNotes:\r\n\r\nThe knight's health has no upper bound.\r\nAny room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.  \r\n\r\n\r\n\r\nCredits:Special thanks to @stellari for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 174,
        "slug": "dungeon-game",
        "tags": [
            "Binary Search",
            "Dynamic Programming"
        ],
        "title": "Dungeon Game",
        "url": "https://leetcode.com/problems/dungeon-game/description/"
    },
    "175": {
        "description": "Table: Person\r\n\r\n\r\n+-------------+---------+\r\n| Column Name | Type    |\r\n+-------------+---------+\r\n| PersonId    | int     |\r\n| FirstName   | varchar |\r\n| LastName    | varchar |\r\n+-------------+---------+\r\nPersonId is the primary key column for this table.\r\n\r\n\r\n\r\nTable: Address\r\n\r\n+-------------+---------+\r\n| Column Name | Type    |\r\n+-------------+---------+\r\n| AddressId   | int     |\r\n| PersonId    | int     |\r\n| City        | varchar |\r\n| State       | varchar |\r\n+-------------+---------+\r\nAddressId is the primary key column for this table.\r\n\r\n\r\n\r\n\r\nWrite a SQL query for a report that provides the following information for \r\neach person in the Person table, regardless if there is an address for each \r\nof those people:\r\n\r\n\r\n\r\nFirstName, LastName, City, State",
        "level": 1,
        "paid_only": false,
        "question_id": 175,
        "slug": "combine-two-tables",
        "tags": [],
        "title": "Combine Two Tables",
        "url": "https://leetcode.com/problems/combine-two-tables/description/"
    },
    "176": {
        "description": "Write a SQL query to get the second highest salary from the Employee table.\r\n\r\n\r\n\r\n+----+--------+\r\n| Id | Salary |\r\n+----+--------+\r\n| 1  | 100    |\r\n| 2  | 200    |\r\n| 3  | 300    |\r\n+----+--------+\r\n\r\n\r\nFor example, given the above Employee table, the query should return 200 as the second highest salary. If there is no second highest salary, then the query should return null.\r\n\r\n\r\n+---------------------+\r\n| SecondHighestSalary |\r\n+---------------------+\r\n| 200                 |\r\n+---------------------+",
        "level": 1,
        "paid_only": false,
        "question_id": 176,
        "slug": "second-highest-salary",
        "tags": [],
        "title": "Second Highest Salary",
        "url": "https://leetcode.com/problems/second-highest-salary/description/"
    },
    "177": {
        "description": "Write a SQL query to get the nth highest salary from the Employee table.\r\n\r\n\r\n\r\n+----+--------+\r\n| Id | Salary |\r\n+----+--------+\r\n| 1  | 100    |\r\n| 2  | 200    |\r\n| 3  | 300    |\r\n+----+--------+\r\n\r\n\r\nFor example, given the above Employee table, the nth highest salary where n = 2 is 200. If there is no nth highest salary, then the query should return null.\r\n\r\n\r\n+------------------------+\r\n| getNthHighestSalary(2) |\r\n+------------------------+\r\n| 200                    |\r\n+------------------------+",
        "level": 2,
        "paid_only": false,
        "question_id": 177,
        "slug": "nth-highest-salary",
        "tags": [],
        "title": "Nth Highest Salary",
        "url": "https://leetcode.com/problems/nth-highest-salary/description/"
    },
    "178": {
        "description": "Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no \"holes\" between ranks.\r\n\r\n\r\n\r\n+----+-------+\r\n| Id | Score |\r\n+----+-------+\r\n| 1  | 3.50  |\r\n| 2  | 3.65  |\r\n| 3  | 4.00  |\r\n| 4  | 3.85  |\r\n| 5  | 4.00  |\r\n| 6  | 3.65  |\r\n+----+-------+\r\n\r\n\r\nFor example, given the above Scores table, your query should generate the following report (order by highest score):\r\n\r\n\r\n+-------+------+\r\n| Score | Rank |\r\n+-------+------+\r\n| 4.00  | 1    |\r\n| 4.00  | 1    |\r\n| 3.85  | 2    |\r\n| 3.65  | 3    |\r\n| 3.65  | 3    |\r\n| 3.50  | 4    |\r\n+-------+------+",
        "level": 2,
        "paid_only": false,
        "question_id": 178,
        "slug": "rank-scores",
        "tags": [],
        "title": "Rank Scores",
        "url": "https://leetcode.com/problems/rank-scores/description/"
    },
    "179": {
        "description": "Given a list of non negative integers, arrange them such that they form the largest number.\r\n\r\nFor example, given [3, 30, 34, 5, 9], the largest formed number is 9534330.\r\n\r\nNote: The result may be very large, so you need to return a string instead of an integer.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 179,
        "slug": "largest-number",
        "tags": [
            "Sort"
        ],
        "title": "Largest Number",
        "url": "https://leetcode.com/problems/largest-number/description/"
    },
    "180": {
        "description": "Write a SQL query to find all numbers that appear at least three times consecutively.\r\n\r\n\r\n+----+-----+\r\n| Id | Num |\r\n+----+-----+\r\n| 1  |  1  |\r\n| 2  |  1  |\r\n| 3  |  1  |\r\n| 4  |  2  |\r\n| 5  |  1  |\r\n| 6  |  2  |\r\n| 7  |  2  |\r\n+----+-----+\r\n\r\n\r\nFor example, given the above Logs table, 1 is the only number that appears consecutively for at least three times.\r\n\r\n\r\n+-----------------+\r\n| ConsecutiveNums |\r\n+-----------------+\r\n| 1               |\r\n+-----------------+",
        "level": 2,
        "paid_only": false,
        "question_id": 180,
        "slug": "consecutive-numbers",
        "tags": [],
        "title": "Consecutive Numbers",
        "url": "https://leetcode.com/problems/consecutive-numbers/description/"
    },
    "181": {
        "description": "The Employee table holds all employees including their managers. Every employee has an Id, and there is also a column for the manager Id.\r\n\r\n\r\n+----+-------+--------+-----------+\r\n| Id | Name  | Salary | ManagerId |\r\n+----+-------+--------+-----------+\r\n| 1  | Joe   | 70000  | 3         |\r\n| 2  | Henry | 80000  | 4         |\r\n| 3  | Sam   | 60000  | NULL      |\r\n| 4  | Max   | 90000  | NULL      |\r\n+----+-------+--------+-----------+\r\n\r\n\r\nGiven the Employee table, write a SQL query that finds out employees who earn more than their managers. For the above table, Joe is the only employee who earns more than his manager.\r\n\r\n\r\n+----------+\r\n| Employee |\r\n+----------+\r\n| Joe      |\r\n+----------+",
        "level": 1,
        "paid_only": false,
        "question_id": 181,
        "slug": "employees-earning-more-than-their-managers",
        "tags": [],
        "title": "Employees Earning More Than Their Managers",
        "url": "https://leetcode.com/problems/employees-earning-more-than-their-managers/description/"
    },
    "182": {
        "description": "Write a SQL query to find all duplicate emails in a table named Person.\r\n\r\n\r\n+----+---------+\r\n| Id | Email   |\r\n+----+---------+\r\n| 1  | a@b.com |\r\n| 2  | c@d.com |\r\n| 3  | a@b.com |\r\n+----+---------+\r\n\r\n\r\nFor example, your query should return the following for the above table:\r\n\r\n+---------+\r\n| Email   |\r\n+---------+\r\n| a@b.com |\r\n+---------+\r\n\r\n\r\nNote: All emails are in lowercase.",
        "level": 1,
        "paid_only": false,
        "question_id": 182,
        "slug": "duplicate-emails",
        "tags": [],
        "title": "Duplicate Emails",
        "url": "https://leetcode.com/problems/duplicate-emails/description/"
    },
    "183": {
        "description": "Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\r\n\r\n\r\nTable: Customers.\r\n\r\n+----+-------+\r\n| Id | Name  |\r\n+----+-------+\r\n| 1  | Joe   |\r\n| 2  | Henry |\r\n| 3  | Sam   |\r\n| 4  | Max   |\r\n+----+-------+\r\n\r\n\r\n\r\nTable: Orders.\r\n\r\n+----+------------+\r\n| Id | CustomerId |\r\n+----+------------+\r\n| 1  | 3          |\r\n| 2  | 1          |\r\n+----+------------+\r\n\r\n\r\nUsing the above tables as example, return the following:\r\n\r\n+-----------+\r\n| Customers |\r\n+-----------+\r\n| Henry     |\r\n| Max       |\r\n+-----------+",
        "level": 1,
        "paid_only": false,
        "question_id": 183,
        "slug": "customers-who-never-order",
        "tags": [],
        "title": "Customers Who Never Order",
        "url": "https://leetcode.com/problems/customers-who-never-order/description/"
    },
    "184": {
        "description": "The Employee table holds all employees. Every employee has an Id, a salary, and there is also a column for the department Id.\r\n\r\n\r\n+----+-------+--------+--------------+\r\n| Id | Name  | Salary | DepartmentId |\r\n+----+-------+--------+--------------+\r\n| 1  | Joe   | 70000  | 1            |\r\n| 2  | Henry | 80000  | 2            |\r\n| 3  | Sam   | 60000  | 2            |\r\n| 4  | Max   | 90000  | 1            |\r\n+----+-------+--------+--------------+\r\n\r\n\r\n\r\nThe Department table holds all departments of the company.\r\n\r\n+----+----------+\r\n| Id | Name     |\r\n+----+----------+\r\n| 1  | IT       |\r\n| 2  | Sales    |\r\n+----+----------+\r\n\r\n\r\nWrite a SQL query to find employees who have the highest salary in each of the departments. For the above tables, Max has the highest salary in the IT department and Henry has the highest salary in the Sales department.\r\n\r\n\r\n+------------+----------+--------+\r\n| Department | Employee | Salary |\r\n+------------+----------+--------+\r\n| IT         | Max      | 90000  |\r\n| Sales      | Henry    | 80000  |\r\n+------------+----------+--------+",
        "level": 2,
        "paid_only": false,
        "question_id": 184,
        "slug": "department-highest-salary",
        "tags": [],
        "title": "Department Highest Salary",
        "url": "https://leetcode.com/problems/department-highest-salary/description/"
    },
    "185": {
        "description": "The Employee table holds all employees. Every employee has an Id, and there is also a column for the department Id.\r\n\r\n\r\n+----+-------+--------+--------------+\r\n| Id | Name  | Salary | DepartmentId |\r\n+----+-------+--------+--------------+\r\n| 1  | Joe   | 70000  | 1            |\r\n| 2  | Henry | 80000  | 2            |\r\n| 3  | Sam   | 60000  | 2            |\r\n| 4  | Max   | 90000  | 1            |\r\n| 5  | Janet | 69000  | 1            |\r\n| 6  | Randy | 85000  | 1            |\r\n+----+-------+--------+--------------+\r\n\r\n\r\n\r\nThe Department table holds all departments of the company.\r\n\r\n+----+----------+\r\n| Id | Name     |\r\n+----+----------+\r\n| 1  | IT       |\r\n| 2  | Sales    |\r\n+----+----------+\r\n\r\n\r\nWrite a SQL query to find employees who earn the top three salaries in each of the department. For the above tables, your SQL query should return the following rows.\r\n\r\n\r\n+------------+----------+--------+\r\n| Department | Employee | Salary |\r\n+------------+----------+--------+\r\n| IT         | Max      | 90000  |\r\n| IT         | Randy    | 85000  |\r\n| IT         | Joe      | 70000  |\r\n| Sales      | Henry    | 80000  |\r\n| Sales      | Sam      | 60000  |\r\n+------------+----------+--------+",
        "level": 3,
        "paid_only": false,
        "question_id": 185,
        "slug": "department-top-three-salaries",
        "tags": [],
        "title": "Department Top Three Salaries",
        "url": "https://leetcode.com/problems/department-top-three-salaries/description/"
    },
    "186": {
        "description": "Given an input string, reverse the string word by word. A word is defined as a\nsequence of non-space characters.\nThe input string does not contain leading or trailing spaces and the words are\nalways separated by a single space.\nFor example,\nGiven s = \"the sky is blue\",\nreturn \"blue is sky the\".\nCould you do it in-place without allocating extra space?",
        "level": 2,
        "paid_only": true,
        "question_id": 186,
        "slug": "reverse-words-in-a-string-ii",
        "tags": [],
        "title": "Reverse Words in a String II",
        "url": "https://leetcode.com/problems/reverse-words-in-a-string-ii/description/"
    },
    "187": {
        "description": "All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: \"ACGAATTCCG\". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.\r\n\r\nWrite a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.\r\n\r\n\r\nFor example,\r\n\r\nGiven s = \"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\",\r\n\r\nReturn:\r\n[\"AAAAACCCCC\", \"CCCCCAAAAA\"].",
        "level": 2,
        "paid_only": false,
        "question_id": 187,
        "slug": "repeated-dna-sequences",
        "tags": [
            "Hash Table",
            "Bit Manipulation"
        ],
        "title": "Repeated DNA Sequences",
        "url": "https://leetcode.com/problems/repeated-dna-sequences/description/"
    },
    "188": {
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete at most k transactions.\r\n\r\nNote:\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 188,
        "slug": "best-time-to-buy-and-sell-stock-iv",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Best Time to Buy and Sell Stock IV",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/description/"
    },
    "189": {
        "description": "Rotate an array of n elements to the right by k steps.\r\nFor example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4]. \r\n\r\nNote:\r\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.\r\n\r\n\r\n[show hint]\r\nHint:\r\nCould you do it in-place with O(1) extra space?\r\n\r\n\r\nRelated problem: Reverse Words in a String II\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 189,
        "slug": "rotate-array",
        "tags": [
            "Array"
        ],
        "title": "Rotate Array",
        "url": "https://leetcode.com/problems/rotate-array/description/"
    },
    "190": {
        "description": "Reverse bits of a given 32 bits unsigned integer.\r\n\r\nFor example, given input 43261596 (represented in binary as 00000010100101000001111010011100), return 964176192 (represented in binary as 00111001011110000010100101000000).\r\n\r\n\r\nFollow up:\r\nIf this function is called many times, how would you optimize it?\r\n\r\n\r\nRelated problem: Reverse Integer\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 190,
        "slug": "reverse-bits",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Reverse Bits",
        "url": "https://leetcode.com/problems/reverse-bits/description/"
    },
    "191": {
        "description": "Write a function that takes an unsigned integer and returns the number of ’1' bits it has (also known as the Hamming weight).\r\n\r\nFor example, the 32-bit integer ’11' has binary representation 00000000000000000000000000001011, so the function should return 3.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 191,
        "slug": "number-of-1-bits",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Number of 1 Bits",
        "url": "https://leetcode.com/problems/number-of-1-bits/description/"
    },
    "192": {
        "description": "Write a bash script to calculate the frequency of each word in a text file words.txt.\r\n\r\nFor simplicity sake, you may assume:\r\n\r\nwords.txt contains only lowercase characters and space ' ' characters.\r\nEach word must consist of lowercase characters only.\r\nWords are separated by one or more whitespace characters.\r\n\r\n\r\n\r\nFor example, assume that words.txt has the following content:\r\nthe day is sunny the the\r\nthe sunny is is\r\n\r\n\r\nYour script should output the following, sorted by descending frequency:\r\n\r\nthe 4\r\nis 3\r\nsunny 2\r\nday 1\r\n\r\n\r\n\r\nNote:\r\nDon't worry about handling ties, it is guaranteed that each word's frequency count is unique.\r\n\r\n\r\n[show hint]\r\nHint:\r\nCould you write it in one-line using Unix pipes?",
        "level": 2,
        "paid_only": false,
        "question_id": 192,
        "slug": "word-frequency",
        "tags": [],
        "title": "Word Frequency",
        "url": "https://leetcode.com/problems/word-frequency/description/"
    },
    "193": {
        "description": "Given a text file file.txt that contains list of phone numbers (one per line), write a one liner bash script to print all valid phone numbers.\r\n\r\nYou may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)\r\n\r\nYou may also assume each line in the text file must not contain leading or trailing white spaces.\r\n\r\nFor example, assume that file.txt has the following content:\r\n\r\n987-123-4567\r\n123 456 7890\r\n(123) 456-7890\r\n\r\n\r\nYour script should output the following valid phone numbers:\r\n\r\n987-123-4567\r\n(123) 456-7890",
        "level": 1,
        "paid_only": false,
        "question_id": 193,
        "slug": "valid-phone-numbers",
        "tags": [],
        "title": "Valid Phone Numbers",
        "url": "https://leetcode.com/problems/valid-phone-numbers/description/"
    },
    "194": {
        "description": "Given a text file file.txt, transpose its content.\r\n\r\nYou may assume that each row has the same number of columns and each field is separated by the ' ' character.\r\n\r\n\r\nFor example, if file.txt has the following content:\r\n\r\nname age\r\nalice 21\r\nryan 30\r\n\r\n\r\n\r\n\r\nOutput the following:\r\n\r\nname alice ryan\r\nage 21 30",
        "level": 2,
        "paid_only": false,
        "question_id": 194,
        "slug": "transpose-file",
        "tags": [],
        "title": "Transpose File",
        "url": "https://leetcode.com/problems/transpose-file/description/"
    },
    "195": {
        "description": "How would you print just the 10th line of a file?\r\n\r\nFor example, assume that file.txt has the following content:\r\n\r\nLine 1\r\nLine 2\r\nLine 3\r\nLine 4\r\nLine 5\r\nLine 6\r\nLine 7\r\nLine 8\r\nLine 9\r\nLine 10\r\n\r\n\r\nYour script should output the tenth line, which is:\r\n\r\nLine 10\r\n\r\n\r\n[show hint]\r\nHint:\r\n1. If the file contains less than 10 lines, what should you output?\r\n2. There's at least three different solutions. Try to explore all possibilities.",
        "level": 1,
        "paid_only": false,
        "question_id": 195,
        "slug": "tenth-line",
        "tags": [],
        "title": "Tenth Line",
        "url": "https://leetcode.com/problems/tenth-line/description/"
    },
    "196": {
        "description": "Write a SQL query to delete all duplicate email entries in a table named Person, keeping only unique emails based on its smallest Id.\r\n\r\n\r\n+----+------------------+\r\n| Id | Email            |\r\n+----+------------------+\r\n| 1  | john@example.com |\r\n| 2  | bob@example.com  |\r\n| 3  | john@example.com |\r\n+----+------------------+\r\nId is the primary key column for this table.\r\n\r\n\r\nFor example, after running your query, the above Person table should have the following rows:\r\n\r\n+----+------------------+\r\n| Id | Email            |\r\n+----+------------------+\r\n| 1  | john@example.com |\r\n| 2  | bob@example.com  |\r\n+----+------------------+",
        "level": 1,
        "paid_only": false,
        "question_id": 196,
        "slug": "delete-duplicate-emails",
        "tags": [],
        "title": "Delete Duplicate Emails",
        "url": "https://leetcode.com/problems/delete-duplicate-emails/description/"
    },
    "197": {
        "description": "Given a Weather table, write a SQL query to find all dates' Ids with higher temperature compared to its previous (yesterday's) dates.\r\n\r\n\r\n+---------+------------+------------------+\r\n| Id(INT) | Date(DATE) | Temperature(INT) |\r\n+---------+------------+------------------+\r\n|       1 | 2015-01-01 |               10 |\r\n|       2 | 2015-01-02 |               25 |\r\n|       3 | 2015-01-03 |               20 |\r\n|       4 | 2015-01-04 |               30 |\r\n+---------+------------+------------------+\r\n\r\n\r\nFor example, return the following Ids for the above Weather table:\r\n\r\n+----+\r\n| Id |\r\n+----+\r\n|  2 |\r\n|  4 |\r\n+----+",
        "level": 1,
        "paid_only": false,
        "question_id": 197,
        "slug": "rising-temperature",
        "tags": [],
        "title": "Rising Temperature",
        "url": "https://leetcode.com/problems/rising-temperature/description/"
    },
    "198": {
        "description": "You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.\r\n\r\nGiven a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.\r\n\r\nCredits:Special thanks to @ifanchu for adding this problem and creating all test cases. Also thanks to @ts for adding additional test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 198,
        "slug": "house-robber",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "House Robber",
        "url": "https://leetcode.com/problems/house-robber/description/"
    },
    "199": {
        "description": "Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.\r\n\r\n\r\nFor example:\r\nGiven the following binary tree,\r\n\r\n   1            <---\r\n /   \\\r\n2     3         <---\r\n \\     \\\r\n  5     4       <---\r\n\r\n\r\n\r\nYou should return [1, 3, 4].\r\n\r\n\r\nCredits:Special thanks to @amrsaqr for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 199,
        "slug": "binary-tree-right-side-view",
        "tags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Binary Tree Right Side View",
        "url": "https://leetcode.com/problems/binary-tree-right-side-view/description/"
    },
    "200": {
        "description": "Given a 2d grid map of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.\r\n\r\nExample 1:\r\n11110110101100000000\r\nAnswer: 1\r\nExample 2:\r\n11000110000010000011\r\nAnswer: 3\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 200,
        "slug": "number-of-islands",
        "tags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Union Find"
        ],
        "title": "Number of Islands",
        "url": "https://leetcode.com/problems/number-of-islands/description/"
    },
    "201": {
        "description": "Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive.\r\n\r\n\r\nFor example, given the range [5, 7], you should return 4.\r\n\r\n\r\nCredits:Special thanks to @amrsaqr for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 201,
        "slug": "bitwise-and-of-numbers-range",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Bitwise AND of Numbers Range",
        "url": "https://leetcode.com/problems/bitwise-and-of-numbers-range/description/"
    },
    "202": {
        "description": "Write an algorithm to determine if a number is \"happy\".\r\n\r\nA happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.\r\n\r\nExample: 19 is a happy number\r\n\r\n\r\n12 + 92 = 82\r\n82 + 22 = 68\r\n62 + 82 = 100\r\n12 + 02 + 02 = 1\r\n\r\n\r\nCredits:Special thanks to @mithmatt and @ts for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 202,
        "slug": "happy-number",
        "tags": [
            "Hash Table",
            "Math"
        ],
        "title": "Happy Number",
        "url": "https://leetcode.com/problems/happy-number/description/"
    },
    "203": {
        "description": "Remove all elements from a linked list of integers that have value val.\r\n\r\nExample\r\nGiven: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6,  val = 6\r\nReturn: 1 --> 2 --> 3 --> 4 --> 5\r\n\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 203,
        "slug": "remove-linked-list-elements",
        "tags": [
            "Linked List"
        ],
        "title": "Remove Linked List Elements",
        "url": "https://leetcode.com/problems/remove-linked-list-elements/description/"
    },
    "204": {
        "description": "Description:\r\nCount the number of prime numbers less than a non-negative number, n.\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 204,
        "slug": "count-primes",
        "tags": [
            "Hash Table",
            "Math"
        ],
        "title": "Count Primes",
        "url": "https://leetcode.com/problems/count-primes/description/"
    },
    "205": {
        "description": "Given two strings s and t, determine if they are isomorphic.\r\n\r\nTwo strings are isomorphic if the characters in s can be replaced to get t.\r\n\r\nAll occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.\r\n\r\nFor example,\r\nGiven \"egg\", \"add\", return true.\r\n\r\nGiven \"foo\", \"bar\", return false.\r\n\r\nGiven \"paper\", \"title\", return true.\r\n\r\nNote:\r\nYou may assume both s and t have the same length.",
        "level": 1,
        "paid_only": false,
        "question_id": 205,
        "slug": "isomorphic-strings",
        "tags": [
            "Hash Table"
        ],
        "title": "Isomorphic Strings",
        "url": "https://leetcode.com/problems/isomorphic-strings/description/"
    },
    "206": {
        "description": "Reverse a singly linked list.\r\n\r\nclick to show more hints.\r\n\r\nHint:\r\nA linked list can be reversed either iteratively or recursively. Could you implement both?",
        "level": 1,
        "paid_only": false,
        "question_id": 206,
        "slug": "reverse-linked-list",
        "tags": [
            "Linked List"
        ],
        "title": "Reverse Linked List",
        "url": "https://leetcode.com/problems/reverse-linked-list/description/"
    },
    "207": {
        "description": "There are a total of n courses you have to take, labeled from 0 to n - 1.\r\n\r\nSome courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]\r\n\r\n\r\nGiven the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?\r\n\r\n\r\nFor example:\r\n2, [[1,0]]\r\nThere are a total of 2 courses to take. To take course 1 you should have finished course 0. So it is possible.\r\n\r\n2, [[1,0],[0,1]]\r\nThere are a total of 2 courses to take. To take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.\r\n\r\nNote:\r\n\r\nThe input prerequisites is a graph represented by a list of edges, not adjacency matrices. Read more about how a graph is represented.\r\nYou may assume that there are no duplicate edges in the input prerequisites.\r\n\r\n\r\n\r\nclick to show more hints.\r\n\r\nHints:\r\n\r\nThis problem is equivalent to finding if a cycle exists in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.\r\nTopological Sort via DFS - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.\r\nTopological sort could also be done via BFS.",
        "level": 2,
        "paid_only": false,
        "question_id": 207,
        "slug": "course-schedule",
        "tags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Graph",
            "Topological Sort"
        ],
        "title": "Course Schedule",
        "url": "https://leetcode.com/problems/course-schedule/description/"
    },
    "208": {
        "description": "Implement a trie with insert, search, and startsWith methods.\r\n\r\n\r\n\r\nNote:\r\nYou may assume that all inputs are consist of lowercase letters a-z.",
        "level": 2,
        "paid_only": false,
        "question_id": 208,
        "slug": "implement-trie-prefix-tree",
        "tags": [
            "Design",
            "Trie"
        ],
        "title": "Implement Trie (Prefix Tree)",
        "url": "https://leetcode.com/problems/implement-trie-prefix-tree/description/"
    },
    "209": {
        "description": "Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum ≥ s. If there isn't one, return 0 instead.\r\n\r\n\r\nFor example, given the array [2,3,1,2,4,3] and s = 7,\r\nthe subarray [4,3] has the minimal length under the problem constraint.\r\n\r\n\r\nclick to show more practice.\r\n\r\nMore practice:\r\n\r\nIf you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log n).\r\n\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 209,
        "slug": "minimum-size-subarray-sum",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "title": "Minimum Size Subarray Sum",
        "url": "https://leetcode.com/problems/minimum-size-subarray-sum/description/"
    },
    "210": {
        "description": "There are a total of n courses you have to take, labeled from 0 to n - 1.\r\n\r\nSome courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]\r\n\r\n\r\nGiven the total number of courses and a list of prerequisite pairs, return the ordering of courses you should take to finish all courses.\r\n\r\nThere may be multiple correct orders, you just need to return one of them. If it is impossible to finish all courses, return an empty array.\r\n\r\n\r\nFor example:\r\n2, [[1,0]]\r\nThere are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is [0,1]\r\n\r\n4, [[1,0],[2,0],[3,1],[3,2]]\r\nThere are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0. So one correct course order is [0,1,2,3]. Another correct ordering is[0,2,1,3].\r\n\r\nNote:\r\n\r\nThe input prerequisites is a graph represented by a list of edges, not adjacency matrices. Read more about how a graph is represented.\r\nYou may assume that there are no duplicate edges in the input prerequisites.\r\n\r\n\r\n\r\nclick to show more hints.\r\n\r\nHints:\r\n\r\nThis problem is equivalent to finding the topological order in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.\r\nTopological Sort via DFS - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.\r\nTopological sort could also be done via BFS.",
        "level": 2,
        "paid_only": false,
        "question_id": 210,
        "slug": "course-schedule-ii",
        "tags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Graph",
            "Topological Sort"
        ],
        "title": "Course Schedule II",
        "url": "https://leetcode.com/problems/course-schedule-ii/description/"
    },
    "211": {
        "description": "Design a data structure that supports the following two operations:\r\n\r\n\r\nvoid addWord(word)\r\nbool search(word)\r\n\r\n\r\n\r\nsearch(word) can search a literal word or a regular expression string containing only letters a-z or .. A . means it can represent any one letter.\r\n\r\n\r\nFor example:\r\n\r\naddWord(\"bad\")\r\naddWord(\"dad\")\r\naddWord(\"mad\")\r\nsearch(\"pad\") -> false\r\nsearch(\"bad\") -> true\r\nsearch(\".ad\") -> true\r\nsearch(\"b..\") -> true\r\n\r\n\r\n\r\nNote:\r\nYou may assume that all words are consist of lowercase letters a-z.\r\n\r\n\r\nclick to show hint.\r\n\r\nYou should be familiar with how a Trie works. If not, please work on this problem: Implement Trie (Prefix Tree) first.",
        "level": 2,
        "paid_only": false,
        "question_id": 211,
        "slug": "add-and-search-word-data-structure-design",
        "tags": [
            "Backtracking",
            "Design",
            "Trie"
        ],
        "title": "Add and Search Word - Data structure design",
        "url": "https://leetcode.com/problems/add-and-search-word-data-structure-design/description/"
    },
    "212": {
        "description": "Given a 2D board and a list of words from the dictionary, find all words in the board.\r\n\r\n\r\nEach word must be constructed from letters of sequentially adjacent cell, where \"adjacent\" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.\r\n\r\n\r\n\r\nFor example,\r\nGiven words = [\"oath\",\"pea\",\"eat\",\"rain\"] and board = \r\n\r\n[\r\n  ['o','a','a','n'],\r\n  ['e','t','a','e'],\r\n  ['i','h','k','r'],\r\n  ['i','f','l','v']\r\n]\r\n\r\n\r\nReturn [\"eat\",\"oath\"].\r\n\r\n\r\n\r\nNote:\r\nYou may assume that all inputs are consist of lowercase letters a-z.\r\n\r\n\r\nclick to show hint.\r\n\r\nYou would need to optimize your backtracking to pass the larger test. Could you stop backtracking earlier?\r\n\r\nIf the current candidate does not exist in all words' prefix, you could stop backtracking immediately. What kind of data structure could answer such query efficiently? Does a hash table work? Why or why not? How about a Trie? If you would like to learn how to implement a basic trie, please work on this problem: Implement Trie (Prefix Tree) first.",
        "level": 3,
        "paid_only": false,
        "question_id": 212,
        "slug": "word-search-ii",
        "tags": [
            "Backtracking",
            "Trie"
        ],
        "title": "Word Search II",
        "url": "https://leetcode.com/problems/word-search-ii/description/"
    },
    "213": {
        "description": "Note: This is an extension of House Robber.\r\n\r\nAfter robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street. \r\n\r\nGiven a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 213,
        "slug": "house-robber-ii",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "House Robber II",
        "url": "https://leetcode.com/problems/house-robber-ii/description/"
    },
    "214": {
        "description": "Given a string S, you are allowed to convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.\r\n\r\n\r\nFor example: \r\nGiven \"aacecaaa\", return \"aaacecaaa\".\r\nGiven \"abcd\", return \"dcbabcd\".\r\n\r\nCredits:Special thanks to @ifanchu for adding this problem and creating all test cases. Thanks to @Freezen for additional test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 214,
        "slug": "shortest-palindrome",
        "tags": [
            "String"
        ],
        "title": "Shortest Palindrome",
        "url": "https://leetcode.com/problems/shortest-palindrome/description/"
    },
    "215": {
        "description": "Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.\r\n\r\nFor example,\r\nGiven [3,2,1,5,6,4] and k = 2, return 5.\r\n\r\n\r\nNote: \r\nYou may assume k is always valid, 1 ≤ k ≤ array's length.\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 215,
        "slug": "kth-largest-element-in-an-array",
        "tags": [
            "Divide and Conquer",
            "Heap"
        ],
        "title": "Kth Largest Element in an Array",
        "url": "https://leetcode.com/problems/kth-largest-element-in-an-array/description/"
    },
    "216": {
        "description": "Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.\r\n\r\n\r\n\r\n Example 1:\r\nInput:  k = 3,  n = 7\r\nOutput: \r\n\r\n[[1,2,4]]\r\n\r\n\r\n Example 2:\r\nInput:  k = 3,  n = 9\r\nOutput: \r\n\r\n[[1,2,6], [1,3,5], [2,3,4]]\r\n\r\n\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 216,
        "slug": "combination-sum-iii",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "title": "Combination Sum III",
        "url": "https://leetcode.com/problems/combination-sum-iii/description/"
    },
    "217": {
        "description": "Given an array of integers, find if the array contains any duplicates. Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.",
        "level": 1,
        "paid_only": false,
        "question_id": 217,
        "slug": "contains-duplicate",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "title": "Contains Duplicate",
        "url": "https://leetcode.com/problems/contains-duplicate/description/"
    },
    "218": {
        "description": "A city's skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Now suppose you are given the locations and height of all the buildings as shown on a cityscape photo (Figure A), write a program to output the skyline formed by these buildings collectively (Figure B).\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\nThe geometric information of each building is represented by a triplet of integers [Li, Ri, Hi], where Li and Ri are the x coordinates of the left and right edge of the ith building, respectively, and Hi is its height. It is guaranteed that 0 ≤ Li, Ri ≤ INT_MAX, 0 < Hi ≤ INT_MAX, and Ri - Li > 0. You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0.\r\n\r\nFor instance, the dimensions of all buildings in Figure A are recorded as: [ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] .\r\n\r\nThe output is a list of \"key points\" (red dots in Figure B) in the format of [ [x1,y1], [x2, y2], [x3, y3], ... ] that uniquely defines a skyline. A key point is the left endpoint of a horizontal line segment. Note that the last key point, where the rightmost building ends, is merely used to mark the termination of the skyline, and always has zero height. Also, the ground in between any two adjacent buildings should be considered part of the skyline contour.\r\n\r\nFor instance, the skyline in Figure B should be represented as:[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ].\r\n\r\nNotes:\r\n\r\n The number of buildings in any input list is guaranteed to be in the range [0, 10000].\r\n The input list is already sorted in ascending order by the left x position Li. \r\n The output list must be sorted by the x position. \r\n There must be no consecutive horizontal lines of equal height in the output skyline. For instance, [...[2 3], [4 5], [7 5], [11 5], [12 7]...] is not acceptable; the three lines of height 5 should be merged into one in the final output as such: [...[2 3], [4 5], [12 7], ...]\r\n\r\n\r\n\r\nCredits:Special thanks to @stellari for adding this problem, creating these two awesome images and all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 218,
        "slug": "the-skyline-problem",
        "tags": [
            "Divide and Conquer",
            "Heap",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "title": "The Skyline Problem",
        "url": "https://leetcode.com/problems/the-skyline-problem/description/"
    },
    "219": {
        "description": "Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.",
        "level": 1,
        "paid_only": false,
        "question_id": 219,
        "slug": "contains-duplicate-ii",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "title": "Contains Duplicate II",
        "url": "https://leetcode.com/problems/contains-duplicate-ii/description/"
    },
    "220": {
        "description": "Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.",
        "level": 2,
        "paid_only": false,
        "question_id": 220,
        "slug": "contains-duplicate-iii",
        "tags": [
            "Binary Search Tree"
        ],
        "title": "Contains Duplicate III",
        "url": "https://leetcode.com/problems/contains-duplicate-iii/description/"
    },
    "221": {
        "description": "Given a 2D binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.\r\n\r\n\r\nFor example, given the following matrix:\r\n\r\n1 0 1 0 0\r\n1 0 1 1 1\r\n1 1 1 1 1\r\n1 0 0 1 0\r\n\r\nReturn 4.\r\n\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 221,
        "slug": "maximal-square",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Maximal Square",
        "url": "https://leetcode.com/problems/maximal-square/description/"
    },
    "222": {
        "description": "Given a complete binary tree, count the number of nodes.\r\n\r\nDefinition of a complete binary tree from Wikipedia:\r\nIn a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.",
        "level": 2,
        "paid_only": false,
        "question_id": 222,
        "slug": "count-complete-tree-nodes",
        "tags": [
            "Binary Search",
            "Tree"
        ],
        "title": "Count Complete Tree Nodes",
        "url": "https://leetcode.com/problems/count-complete-tree-nodes/description/"
    },
    "223": {
        "description": "Find the total area covered by two rectilinear rectangles in a 2D plane.\r\nEach rectangle is defined by its bottom left corner and top right corner as shown in the figure.\r\n\r\n\r\n\r\n\r\nAssume that the total area is never beyond the maximum possible value of int.\r\n\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem, creating the above image and all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 223,
        "slug": "rectangle-area",
        "tags": [
            "Math"
        ],
        "title": "Rectangle Area",
        "url": "https://leetcode.com/problems/rectangle-area/description/"
    },
    "224": {
        "description": "Implement a basic calculator to evaluate a simple expression string.\r\n\r\nThe expression string may contain open ( and closing parentheses ), the plus + or minus sign -, non-negative integers and empty spaces  .\r\n\r\nYou may assume that the given expression is always valid.\r\n\r\nSome examples:\r\n\r\n\"1 + 1\" = 2\r\n\" 2-1 + 2 \" = 3\r\n\"(1+(4+5+2)-3)+(6+8)\" = 23\r\n\r\n\r\n\r\n\r\nNote: Do not use the eval built-in library function.",
        "level": 3,
        "paid_only": false,
        "question_id": 224,
        "slug": "basic-calculator",
        "tags": [
            "Math",
            "Stack"
        ],
        "title": "Basic Calculator",
        "url": "https://leetcode.com/problems/basic-calculator/description/"
    },
    "225": {
        "description": "Implement the following operations of a stack using queues.\r\n\r\n\r\npush(x) -- Push element x onto stack.\r\n\r\n\r\npop() -- Removes the element on top of the stack.\r\n\r\n\r\ntop() -- Get the top element.\r\n\r\n\r\nempty() -- Return whether the stack is empty.\r\n\r\n\r\nNotes:\r\n\r\nYou must use only standard operations of a queue -- which means only push to back, peek/pop from front, size, and is empty operations are valid.\r\nDepending on your language, queue may not be supported natively. You may simulate a queue by using a list or deque (double-ended queue), as long as you use only standard operations of a queue.\r\nYou may assume that all operations are valid (for example, no pop or top operations will be called on an empty stack).\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 225,
        "slug": "implement-stack-using-queues",
        "tags": [
            "Stack",
            "Design"
        ],
        "title": "Implement Stack using Queues",
        "url": "https://leetcode.com/problems/implement-stack-using-queues/description/"
    },
    "226": {
        "description": "Invert a binary tree.\r\n     4\r\n   /   \\\r\n  2     7\r\n / \\   / \\\r\n1   3 6   9\r\n\r\nto\r\n     4\r\n   /   \\\r\n  7     2\r\n / \\   / \\\r\n9   6 3   1\r\n\r\nTrivia:\r\nThis problem was inspired by this original tweet by Max Howell:\r\nGoogle: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off.",
        "level": 1,
        "paid_only": false,
        "question_id": 226,
        "slug": "invert-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Invert Binary Tree",
        "url": "https://leetcode.com/problems/invert-binary-tree/description/"
    },
    "227": {
        "description": "Implement a basic calculator to evaluate a simple expression string.\r\n\r\nThe expression string contains only non-negative integers, +, -, *, / operators and empty spaces  . The integer division should truncate toward zero.\r\n\r\nYou may assume that the given expression is always valid.\r\n\r\nSome examples:\r\n\r\n\"3+2*2\" = 7\r\n\" 3/2 \" = 1\r\n\" 3+5 / 2 \" = 5\r\n\r\n\r\n\r\n\r\nNote: Do not use the eval built-in library function.\r\n\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 227,
        "slug": "basic-calculator-ii",
        "tags": [
            "String"
        ],
        "title": "Basic Calculator II",
        "url": "https://leetcode.com/problems/basic-calculator-ii/description/"
    },
    "228": {
        "description": "Given a sorted integer array without duplicates, return the summary of its ranges.\r\n\r\nExample 1:\r\n\r\nInput: [0,1,2,4,5,7]\r\nOutput: [\"0->2\",\"4->5\",\"7\"]\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [0,2,3,4,6,8,9]\r\nOutput: [\"0\",\"2->4\",\"6\",\"8->9\"]\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 228,
        "slug": "summary-ranges",
        "tags": [
            "Array"
        ],
        "title": "Summary Ranges",
        "url": "https://leetcode.com/problems/summary-ranges/description/"
    },
    "229": {
        "description": "Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times. The algorithm should run in linear time and in O(1) space.",
        "level": 2,
        "paid_only": false,
        "question_id": 229,
        "slug": "majority-element-ii",
        "tags": [
            "Array"
        ],
        "title": "Majority Element II",
        "url": "https://leetcode.com/problems/majority-element-ii/description/"
    },
    "230": {
        "description": "Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.\r\n\r\nNote: \r\nYou may assume k is always valid, 1 ≤ k ≤ BST's total elements.\r\n\r\nFollow up:\r\nWhat if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 230,
        "slug": "kth-smallest-element-in-a-bst",
        "tags": [
            "Binary Search",
            "Tree"
        ],
        "title": "Kth Smallest Element in a BST",
        "url": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/description/"
    },
    "231": {
        "description": "Given an integer, write a function to determine if it is a power of two.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 231,
        "slug": "power-of-two",
        "tags": [
            "Math",
            "Bit Manipulation"
        ],
        "title": "Power of Two",
        "url": "https://leetcode.com/problems/power-of-two/description/"
    },
    "232": {
        "description": "Implement the following operations of a queue using stacks.\r\n\r\n\r\npush(x) -- Push element x to the back of queue.\r\n\r\n\r\npop() -- Removes the element from in front of queue.\r\n\r\n\r\npeek() -- Get the front element.\r\n\r\n\r\nempty() -- Return whether the queue is empty.\r\n\r\n\r\nNotes:\r\n\r\nYou must use only standard operations of a stack -- which means only push to top, peek/pop from top, size, and is empty operations are valid.\r\nDepending on your language, stack may not be supported natively. You may simulate a stack by using a list or deque (double-ended queue), as long as you use only standard operations of a stack.\r\nYou may assume that all operations are valid (for example, no pop or peek operations will be called on an empty queue).",
        "level": 1,
        "paid_only": false,
        "question_id": 232,
        "slug": "implement-queue-using-stacks",
        "tags": [
            "Stack",
            "Design"
        ],
        "title": "Implement Queue using Stacks",
        "url": "https://leetcode.com/problems/implement-queue-using-stacks/description/"
    },
    "233": {
        "description": "Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\r\n\r\n\r\nFor example: \r\nGiven n = 13,\r\nReturn 6, because digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.",
        "level": 3,
        "paid_only": false,
        "question_id": 233,
        "slug": "number-of-digit-one",
        "tags": [
            "Math"
        ],
        "title": "Number of Digit One",
        "url": "https://leetcode.com/problems/number-of-digit-one/description/"
    },
    "234": {
        "description": "Given a singly linked list, determine if it is a palindrome.\r\n\r\nFollow up:\r\nCould you do it in O(n) time and O(1) space?",
        "level": 1,
        "paid_only": false,
        "question_id": 234,
        "slug": "palindrome-linked-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "title": "Palindrome Linked List",
        "url": "https://leetcode.com/problems/palindrome-linked-list/description/"
    },
    "235": {
        "description": "Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.\r\n\r\n\r\n\r\nAccording to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow a node to be a descendant of itself).”\r\n\r\n\r\n\r\n        _______6______\r\n       /              \\\r\n    ___2__          ___8__\r\n   /      \\        /      \\\r\n   0      _4       7       9\r\n         /  \\\r\n         3   5\r\n\r\n\r\n\r\nFor example, the lowest common ancestor (LCA) of nodes 2 and 8 is 6. Another example is LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition.",
        "level": 1,
        "paid_only": false,
        "question_id": 235,
        "slug": "lowest-common-ancestor-of-a-binary-search-tree",
        "tags": [
            "Tree"
        ],
        "title": "Lowest Common Ancestor of a Binary Search Tree",
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/description/"
    },
    "236": {
        "description": "Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.\r\n\r\n\r\n\r\nAccording to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow a node to be a descendant of itself).”\r\n\r\n\r\n\r\n        _______3______\r\n       /              \\\r\n    ___5__          ___1__\r\n   /      \\        /      \\\r\n   6      _2       0       8\r\n         /  \\\r\n         7   4\r\n\r\n\r\n\r\nFor example, the lowest common ancestor (LCA) of nodes 5 and 1 is 3. Another example is LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.",
        "level": 2,
        "paid_only": false,
        "question_id": 236,
        "slug": "lowest-common-ancestor-of-a-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Lowest Common Ancestor of a Binary Tree",
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/description/"
    },
    "237": {
        "description": "Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.\r\n\r\n\r\n\r\nSupposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3, the linked list should become 1 -> 2 -> 4 after calling your function.",
        "level": 1,
        "paid_only": false,
        "question_id": 237,
        "slug": "delete-node-in-a-linked-list",
        "tags": [
            "Linked List"
        ],
        "title": "Delete Node in a Linked List",
        "url": "https://leetcode.com/problems/delete-node-in-a-linked-list/description/"
    },
    "238": {
        "description": "Given an array of n integers where n > 1, nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\r\n\r\nSolve it without division and in O(n).\r\n\r\nFor example, given [1,2,3,4], return [24,12,8,6].\r\n\r\nFollow up:\r\nCould you solve it with constant space complexity? (Note: The output array does not count as extra space for the purpose of space complexity analysis.)",
        "level": 2,
        "paid_only": false,
        "question_id": 238,
        "slug": "product-of-array-except-self",
        "tags": [
            "Array"
        ],
        "title": "Product of Array Except Self",
        "url": "https://leetcode.com/problems/product-of-array-except-self/description/"
    },
    "239": {
        "description": "Given an array nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.\r\n\r\nFor example,\r\nGiven nums = [1,3,-1,-3,5,3,6,7], and k = 3.\r\n\r\n\r\nWindow position                Max\r\n---------------               -----\r\n[1  3  -1] -3  5  3  6  7       3\r\n 1 [3  -1  -3] 5  3  6  7       3\r\n 1  3 [-1  -3  5] 3  6  7       5\r\n 1  3  -1 [-3  5  3] 6  7       5\r\n 1  3  -1  -3 [5  3  6] 7       6\r\n 1  3  -1  -3  5 [3  6  7]      7\r\n\r\n\r\nTherefore, return the max sliding window as [3,3,5,5,6,7].\r\n\r\nNote: \r\nYou may assume k is always valid, ie: 1 ≤ k ≤ input array's size for non-empty array.\r\n\r\nFollow up:\r\nCould you solve it in linear time?",
        "level": 3,
        "paid_only": false,
        "question_id": 239,
        "slug": "sliding-window-maximum",
        "tags": [
            "Heap"
        ],
        "title": "Sliding Window Maximum",
        "url": "https://leetcode.com/problems/sliding-window-maximum/description/"
    },
    "240": {
        "description": "Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\r\n\r\n\r\n\r\nIntegers in each row are sorted in ascending from left to right.\r\nIntegers in each column are sorted in ascending from top to bottom.\r\n\r\n\r\n\r\n\r\nFor example,\r\n\r\nConsider the following matrix:\r\n\r\n\r\n[\r\n  [1,   4,  7, 11, 15],\r\n  [2,   5,  8, 12, 19],\r\n  [3,   6,  9, 16, 22],\r\n  [10, 13, 14, 17, 24],\r\n  [18, 21, 23, 26, 30]\r\n]\r\n\r\n\r\nGiven target = 5, return true.\r\nGiven target = 20, return false.",
        "level": 2,
        "paid_only": false,
        "question_id": 240,
        "slug": "search-a-2d-matrix-ii",
        "tags": [
            "Binary Search",
            "Divide and Conquer"
        ],
        "title": "Search a 2D Matrix II",
        "url": "https://leetcode.com/problems/search-a-2d-matrix-ii/description/"
    },
    "241": {
        "description": "Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are +, - and *.\r\n\r\nExample 1\r\nInput: \"2-1-1\". \r\n((2-1)-1) = 0\r\n(2-(1-1)) = 2\r\nOutput: [0, 2]\r\n\r\nExample 2\r\nInput: \"2*3-4*5\" \r\n(2*(3-(4*5))) = -34\r\n((2*3)-(4*5)) = -14\r\n((2*(3-4))*5) = -10\r\n(2*((3-4)*5)) = -10\r\n(((2*3)-4)*5) = 10\r\nOutput: [-34, -14, -10, -10, 10] \r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 241,
        "slug": "different-ways-to-add-parentheses",
        "tags": [
            "Divide and Conquer"
        ],
        "title": "Different Ways to Add Parentheses",
        "url": "https://leetcode.com/problems/different-ways-to-add-parentheses/description/"
    },
    "242": {
        "description": "Given two strings s and t, write a function to determine if t is an anagram of s. \r\n\r\nFor example,\r\ns = \"anagram\", t = \"nagaram\", return true.\r\ns = \"rat\", t = \"car\", return false.\r\n\r\n\r\nNote:\r\nYou may assume the string contains only lowercase alphabets.\r\n\r\nFollow up:\r\nWhat if the inputs contain unicode characters? How would you adapt your solution to such case?",
        "level": 1,
        "paid_only": false,
        "question_id": 242,
        "slug": "valid-anagram",
        "tags": [
            "Hash Table",
            "Sort"
        ],
        "title": "Valid Anagram",
        "url": "https://leetcode.com/problems/valid-anagram/description/"
    },
    "243": {
        "description": "Given a list of words and two words _word1_ and _word2_, return the shortest\ndistance between these two words in the list.\n\nFor example,\nAssume that words = `[\"practice\", \"makes\", \"perfect\", \"coding\", \"makes\"]`.\n\nGiven _word1_ = `\"coding\"`, _word2_ = `\"practice\"`, return 3.\nGiven _word1_ = `\"makes\"`, _word2_ = `\"coding\"`, return 1.\n\nNote:\nYou may assume that _word1_ does not equal to _word2_, and _word1_ and _word2_\nare both in the list.",
        "level": 1,
        "paid_only": true,
        "question_id": 243,
        "slug": "shortest-word-distance",
        "tags": [],
        "title": "Shortest Word Distance",
        "url": "https://leetcode.com/problems/shortest-word-distance/description/"
    },
    "244": {
        "description": "This is a follow up of [Shortest Word\nDistance](https://leetcode.com/problems/shortest-word-distance). The only\ndifference is now you are given the list of words and your method will be\ncalled _repeatedly_ many times with different parameters. How would you\noptimize it?\n\nDesign a class which receives a list of words in the constructor, and\nimplements a method that takes two words _word1_ and _word2_ and return the\nshortest distance between these two words in the list.\n\nFor example,\nAssume that words = `[\"practice\", \"makes\", \"perfect\", \"coding\", \"makes\"]`.\n\nGiven _word1_ = `\"coding\"`, _word2_ = `\"practice\"`, return 3.\nGiven _word1_ = `\"makes\"`, _word2_ = `\"coding\"`, return 1.\n\nNote:\nYou may assume that _word1_ does not equal to _word2_, and _word1_ and _word2_\nare both in the list.",
        "level": 2,
        "paid_only": true,
        "question_id": 244,
        "slug": "shortest-word-distance-ii",
        "tags": [],
        "title": "Shortest Word Distance II",
        "url": "https://leetcode.com/problems/shortest-word-distance-ii/description/"
    },
    "245": {
        "description": "This is a follow up of Shortest Word Distance. The only difference is now\nword1 could be the same as word2.\n\nGiven a list of words and two words word1 and word2, return the shortest\ndistance between these two words in the list.\n\nword1 and word2 may be the same and they represent two individual words in the\nlist.\n\nFor example,\nAssume that words = [\"practice\", \"makes\", \"perfect\", \"coding\", \"makes\"].\n\nGiven word1 = \"makes\", word2 = \"coding\", return 1.\nGiven word1 = \"makes\", word2 = \"makes\", return 3.\n\nNote:\nYou may assume word1 and word2 are both in the list.",
        "level": 2,
        "paid_only": true,
        "question_id": 245,
        "slug": "shortest-word-distance-iii",
        "tags": [],
        "title": "Shortest Word Distance III",
        "url": "https://leetcode.com/problems/shortest-word-distance-iii/description/"
    },
    "246": {
        "description": "A strobogrammatic number is a number that looks the same when rotated 180\ndegrees (looked at upside down).\n\nWrite a function to determine if a number is strobogrammatic. The number is\nrepresented as a string.\n\nFor example, the numbers \"69\", \"88\", and \"818\" are all strobogrammatic.",
        "level": 1,
        "paid_only": true,
        "question_id": 246,
        "slug": "strobogrammatic-number",
        "tags": [],
        "title": "Strobogrammatic Number",
        "url": "https://leetcode.com/problems/strobogrammatic-number/description/"
    },
    "247": {
        "description": "A strobogrammatic number is a number that looks the same when rotated 180\ndegrees (looked at upside down).\n\nFind all strobogrammatic numbers that are of length = n.\n\nFor example,\nGiven n = 2, return `[\"11\",\"69\",\"88\",\"96\"]`.\n\nHint:\n\n  1. Try to use recursion and notice that it should recurse with _n_ \\- 2 instead of _n_ \\- 1.",
        "level": 2,
        "paid_only": true,
        "question_id": 247,
        "slug": "strobogrammatic-number-ii",
        "tags": [],
        "title": "Strobogrammatic Number II",
        "url": "https://leetcode.com/problems/strobogrammatic-number-ii/description/"
    },
    "248": {
        "description": "A strobogrammatic number is a number that looks the same when rotated 180\ndegrees (looked at upside down).\n\nWrite a function to count the total strobogrammatic numbers that exist in the\nrange of low <= num <= high.\n\nFor example,\nGiven low = \"50\", high = \"100\", return 3. Because 69, 88, and 96 are three\nstrobogrammatic numbers.\n\nNote:\nBecause the range might be a large number, the _low_ and _high_ numbers are\nrepresented as string.\n\n\n\nShow Tags\n\nShow Similar Problems",
        "level": 3,
        "paid_only": true,
        "question_id": 248,
        "slug": "strobogrammatic-number-iii",
        "tags": [],
        "title": "Strobogrammatic Number III",
        "url": "https://leetcode.com/problems/strobogrammatic-number-iii/description/"
    },
    "249": {
        "description": "Given a string, we can \"shift\" each of its letter to its successive letter,\nfor example: `\"abc\" -> \"bcd\"`. We can keep \"shifting\" which forms the\nsequence:\n\n\n\n    \"abc\" -> \"bcd\" -> ... -> \"xyz\"\n\nGiven a list of strings which contains only lowercase alphabets, group all\nstrings that belong to the same shifting sequence.\n\nFor example, given: `[\"abc\", \"bcd\", \"acef\", \"xyz\", \"az\", \"ba\", \"a\", \"z\"]`,\nReturn:\n\n\n\n    [\r  [\"abc\",\"bcd\",\"xyz\"],\r  [\"az\",\"ba\"],\r  [\"acef\"],\r  [\"a\",\"z\"]\r]\n\n\n\nNote: For the return value, each _inner_ list's elements must follow the\nlexicographic order.",
        "level": 2,
        "paid_only": true,
        "question_id": 249,
        "slug": "group-shifted-strings",
        "tags": [],
        "title": "Group Shifted Strings",
        "url": "https://leetcode.com/problems/group-shifted-strings/description/"
    },
    "250": {
        "description": "Given a binary tree, count the number of uni-value subtrees.\n\nA Uni-value subtree means all nodes of the subtree have the same value.\n\nFor example:\nGiven binary tree,\n\n\n\n                  5\r             / \\\r            1   5\r           / \\   \\\r          5   5   5\r\n\n\n\nreturn `4`.",
        "level": 2,
        "paid_only": true,
        "question_id": 250,
        "slug": "count-univalue-subtrees",
        "tags": [],
        "title": "Count Univalue Subtrees",
        "url": "https://leetcode.com/problems/count-univalue-subtrees/description/"
    },
    "251": {
        "description": "Implement an iterator to flatten a 2d vector.\n\nFor example,\nGiven 2d vector =\n\n\n\n    [\r  [1,2],\r  [3],\r  [4,5,6]\r]\r\n\n\n\nBy calling _next_ repeatedly until _hasNext_ returns false, the order of\nelements returned by _next_ should be: `[1,2,3,4,5,6]`.\n\nHint:\n\n  1. How many variables do you need to keep track?\n  2. Two variables is all you need. Try with `x` and `y`.\n  3. Beware of empty rows. It could be the first few rows.\n  4. To write correct code, think about the [invariant](https://en.wikipedia.org/wiki/Invariant_\\(computer_science\\)) to maintain. What is it?\n  5. The invariant is `x` and `y` must always point to a valid point in the 2d vector. Should you maintain your invariant _ahead of time_ or _right when you need it_?\n  6. Not sure? Think about how you would implement `hasNext()`. Which is more complex?\n  7. Common logic in two different places should be refactored into a common method.\n\nFollow up:\nAs an added challenge, try to code it using only [iterators in\nC++](http://www.cplusplus.com/reference/iterator/iterator/) or [iterators in\nJava](http://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html).",
        "level": 2,
        "paid_only": true,
        "question_id": 251,
        "slug": "flatten-2d-vector",
        "tags": [],
        "title": "Flatten 2D Vector",
        "url": "https://leetcode.com/problems/flatten-2d-vector/description/"
    },
    "252": {
        "description": "Given an array of meeting time intervals consisting of start and end times\n`[[s1,e1],[s2,e2],...]` (si < ei), determine if a person could attend all\nmeetings.\n\nFor example,\nGiven `[[0, 30],[5, 10],[15, 20]]`,\nreturn `false`.",
        "level": 1,
        "paid_only": true,
        "question_id": 252,
        "slug": "meeting-rooms",
        "tags": [],
        "title": "Meeting Rooms",
        "url": "https://leetcode.com/problems/meeting-rooms/description/"
    },
    "253": {
        "description": "Given an array of meeting time intervals consisting of start and end times\n`[[s1,e1],[s2,e2],...]` (si < ei), find the minimum number of conference\nrooms required.\n\nFor example,\nGiven `[[0, 30],[5, 10],[15, 20]]`,\nreturn `2`.",
        "level": 2,
        "paid_only": true,
        "question_id": 253,
        "slug": "meeting-rooms-ii",
        "tags": [],
        "title": "Meeting Rooms II",
        "url": "https://leetcode.com/problems/meeting-rooms-ii/description/"
    },
    "254": {
        "description": "Numbers can be regarded as product of its factors. For example,\n\n\n\n    8 = 2 x 2 x 2;\r  = 2 x 4.\r\n\nWrite a function that takes an integer _n_ and return all possible\ncombinations of its factors.\n\nNote:\n\n  1. Each combination's factors must be sorted ascending, for example: The factors of 2 and 6 is `[2, 6]`, not `[6, 2]`.\n  2. You may assume that _n_ is always positive.\n  3. Factors should be greater than 1 and less than _n_.\n\n\n\nExamples:\ninput: `1`\noutput:\n\n\n\n    []\r\n\ninput: `37`\noutput:\n\n\n\n    []\r\n\ninput: `12`\noutput:\n\n\n\n    [\r  [2, 6],\r  [2, 2, 3],\r  [3, 4]\r]\r\n\ninput: `32`\noutput:\n\n\n\n    [\r  [2, 16],\r  [2, 2, 8],\r  [2, 2, 2, 4],\r  [2, 2, 2, 2, 2],\r  [2, 4, 4],\r  [4, 8]\r]",
        "level": 2,
        "paid_only": true,
        "question_id": 254,
        "slug": "factor-combinations",
        "tags": [],
        "title": "Factor Combinations",
        "url": "https://leetcode.com/problems/factor-combinations/description/"
    },
    "255": {
        "description": "Given an array of numbers, verify whether it is the correct preorder traversal\nsequence of a binary search tree.\n\nYou may assume each number in the sequence is unique.\n\n**Follow up:**\nCould you do it using only constant space complexity?",
        "level": 2,
        "paid_only": true,
        "question_id": 255,
        "slug": "verify-preorder-sequence-in-binary-search-tree",
        "tags": [],
        "title": "Verify Preorder Sequence in Binary Search Tree",
        "url": "https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree/description/"
    },
    "256": {
        "description": "There are a row of _n_ houses, each house can be painted with one of the three\ncolors: red, blue or green. The cost of painting each house with a certain\ncolor is different. You have to paint all the houses such that no two adjacent\nhouses have the same color.\n\nThe cost of painting each house with a certain color is represented by a `_n_\nx _3_` cost matrix. For example, `costs[0][0]` is the cost of painting house 0\nwith color red; `costs[1][2]` is the cost of painting house 1 with color\ngreen, and so on... Find the minimum cost to paint all houses.\n\nNote:\nAll costs are positive integers.",
        "level": 1,
        "paid_only": true,
        "question_id": 256,
        "slug": "paint-house",
        "tags": [],
        "title": "Paint House",
        "url": "https://leetcode.com/problems/paint-house/description/"
    },
    "257": {
        "description": "Given a binary tree, return all root-to-leaf paths.\r\n\r\n\r\nFor example, given the following binary tree:\r\n\r\n\r\n\r\n   1\r\n /   \\\r\n2     3\r\n \\\r\n  5\r\n\r\n\r\n\r\nAll root-to-leaf paths are:\r\n[\"1->2->5\", \"1->3\"]\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 257,
        "slug": "binary-tree-paths",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Binary Tree Paths",
        "url": "https://leetcode.com/problems/binary-tree-paths/description/"
    },
    "258": {
        "description": "Given a non-negative integer num, repeatedly add all its digits until the result has only one digit. \r\n\r\n\r\n\r\nFor example:\r\n\r\n\r\nGiven num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it.\r\n\r\n\r\nFollow up:\r\nCould you do it without any loop/recursion in O(1) runtime?\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 258,
        "slug": "add-digits",
        "tags": [
            "Math"
        ],
        "title": "Add Digits",
        "url": "https://leetcode.com/problems/add-digits/description/"
    },
    "259": {
        "description": "Given an array of _n_ integers _nums_ and a _target_, find the number of index\ntriplets `i, j, k` with `0 <= i < j < k < n` that satisfy the condition\n`nums[i] + nums[j] + nums[k] < target`.\n\nFor example, given _nums_ = `[-2, 0, 1, 3]`, and _target_ = 2.\n\nReturn 2. Because there are two triplets which sums are less than 2:\n\n\n\n    [-2, 0, 1]\r[-2, 0, 3]\r\n\nFollow up:\nCould you solve it in _O_(_n_2) runtime?",
        "level": 2,
        "paid_only": true,
        "question_id": 259,
        "slug": "3sum-smaller",
        "tags": [],
        "title": "3Sum Smaller",
        "url": "https://leetcode.com/problems/3sum-smaller/description/"
    },
    "260": {
        "description": "Given an array of numbers nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once.\r\n\r\n\r\nFor example:\r\n\r\n\r\nGiven nums = [1, 2, 1, 3, 2, 5], return [3, 5].\r\n\r\n\r\nNote:\r\n\r\nThe order of the result is not important. So in the above example, [5, 3] is also correct.\r\nYour algorithm should run in linear runtime complexity. Could you implement it using only constant space complexity?\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 260,
        "slug": "single-number-iii",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Single Number III",
        "url": "https://leetcode.com/problems/single-number-iii/description/"
    },
    "261": {
        "description": "Given `n` nodes labeled from `0` to `n - 1` and a list of undirected edges\n(each edge is a pair of nodes), write a function to check whether these edges\nmake up a valid tree.\n\nFor example:\n\nGiven `n = 5` and `edges = [[0, 1], [0, 2], [0, 3], [1, 4]]`, return `true`.\n\nGiven `n = 5` and `edges = [[0, 1], [1, 2], [2, 3], [1, 3], [1, 4]]`, return\n`false`.\n\nHint:\n\n  1. Given `n = 5` and `edges = [[0, 1], [1, 2], [3, 4]]`, what should your return? Is this case a valid tree?\n  2. According to the [definition of tree on Wikipedia](https://en.wikipedia.org/wiki/Tree_\\(graph_theory\\)): \"a tree is an undirected graph in which any two vertices are connected by _exactly_ one path. In other words, any connected graph without simple cycles is a tree.\"\n\nNote: you can assume that no duplicate edges will appear in `edges`. Since all\nedges are undirected, `[0, 1]` is the same as `[1, 0]` and thus will not\nappear together in `edges`.",
        "level": 2,
        "paid_only": true,
        "question_id": 261,
        "slug": "graph-valid-tree",
        "tags": [],
        "title": "Graph Valid Tree",
        "url": "https://leetcode.com/problems/graph-valid-tree/description/"
    },
    "262": {
        "description": "The Trips table holds all taxi trips. Each trip has a unique Id, while Client_Id and Driver_Id are both foreign keys to the Users_Id at the Users table. Status is an ENUM type of (‘completed’, ‘cancelled_by_driver’, ‘cancelled_by_client’).\r\n\r\n\r\n+----+-----------+-----------+---------+--------------------+----------+\r\n| Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|\r\n+----+-----------+-----------+---------+--------------------+----------+\r\n| 1  |     1     |    10     |    1    |     completed      |2013-10-01|\r\n| 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|\r\n| 3  |     3     |    12     |    6    |     completed      |2013-10-01|\r\n| 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|\r\n| 5  |     1     |    10     |    1    |     completed      |2013-10-02|\r\n| 6  |     2     |    11     |    6    |     completed      |2013-10-02|\r\n| 7  |     3     |    12     |    6    |     completed      |2013-10-02|\r\n| 8  |     2     |    12     |    12   |     completed      |2013-10-03|\r\n| 9  |     3     |    10     |    12   |     completed      |2013-10-03| \r\n| 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|\r\n+----+-----------+-----------+---------+--------------------+----------+\r\n\r\n\r\n\r\nThe Users table holds all users. Each user has an unique Users_Id, and Role is an ENUM type of (‘client’, ‘driver’, ‘partner’).\r\n\r\n+----------+--------+--------+\r\n| Users_Id | Banned |  Role  |\r\n+----------+--------+--------+\r\n|    1     |   No   | client |\r\n|    2     |   Yes  | client |\r\n|    3     |   No   | client |\r\n|    4     |   No   | client |\r\n|    10    |   No   | driver |\r\n|    11    |   No   | driver |\r\n|    12    |   No   | driver |\r\n|    13    |   No   | driver |\r\n+----------+--------+--------+\r\n\r\n\r\nWrite a SQL query to find the cancellation rate of requests made by unbanned clients between Oct 1, 2013 and Oct 3, 2013. For the above tables, your SQL query should return the following rows with the cancellation rate being rounded to two decimal places.\r\n\r\n+------------+-------------------+\r\n|     Day    | Cancellation Rate |\r\n+------------+-------------------+\r\n| 2013-10-01 |       0.33        |\r\n| 2013-10-02 |       0.00        |\r\n| 2013-10-03 |       0.50        |\r\n+------------+-------------------+\r\n\r\n\r\nCredits:Special thanks to @cak1erlizhou for contributing this question, writing the problem description and adding part of the test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 262,
        "slug": "trips-and-users",
        "tags": [],
        "title": "Trips and Users",
        "url": "https://leetcode.com/problems/trips-and-users/description/"
    },
    "263": {
        "description": "Write a program to check whether a given number is an ugly number.\r\n\r\n\r\n\r\nUgly numbers are positive numbers whose prime factors only include 2, 3, 5. For example, 6, 8 are ugly while 14 is not ugly since it includes another prime factor 7.\r\n\r\n\r\n\r\nNote that 1 is typically treated as an ugly number.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 263,
        "slug": "ugly-number",
        "tags": [
            "Math"
        ],
        "title": "Ugly Number",
        "url": "https://leetcode.com/problems/ugly-number/description/"
    },
    "264": {
        "description": "Write a program to find the n-th ugly number.\r\n\r\n\r\n\r\nUgly numbers are positive numbers whose prime factors only include 2, 3, 5. For example, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.\r\n\r\n\r\n\r\nNote that 1 is typically treated as an ugly number, and n does not exceed 1690.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 264,
        "slug": "ugly-number-ii",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Heap"
        ],
        "title": "Ugly Number II",
        "url": "https://leetcode.com/problems/ugly-number-ii/description/"
    },
    "265": {
        "description": "There are a row of _n_ houses, each house can be painted with one of the _k_\ncolors. The cost of painting each house with a certain color is different. You\nhave to paint all the houses such that no two adjacent houses have the same\ncolor.\n\nThe cost of painting each house with a certain color is represented by a `_n_\nx _k_` cost matrix. For example, `costs[0][0]` is the cost of painting house 0\nwith color 0; `costs[1][2]`is the cost of painting house 1 with color 2, and\nso on... Find the minimum cost to paint all houses.\n\nNote:\nAll costs are positive integers.\n\nFollow up:\nCould you solve it in _O_(_nk_) runtime?",
        "level": 3,
        "paid_only": true,
        "question_id": 265,
        "slug": "paint-house-ii",
        "tags": [],
        "title": "Paint House II",
        "url": "https://leetcode.com/problems/paint-house-ii/description/"
    },
    "266": {
        "description": "Given a string, determine if a permutation of the string could form a\npalindrome.\n\nFor example,\n`\"code\"` -> False, `\"aab\"` -> True, `\"carerac\"` -> True.\n\nHint:\n\n  1. Consider the palindromes of odd vs even length. What difference do you notice?\n  2. Count the frequency of each character.\n  3. If each character occurs even number of times, then it must be a palindrome. How about character which occurs odd number of times?",
        "level": 1,
        "paid_only": true,
        "question_id": 266,
        "slug": "palindrome-permutation",
        "tags": [],
        "title": "Palindrome Permutation",
        "url": "https://leetcode.com/problems/palindrome-permutation/description/"
    },
    "267": {
        "description": "Given a string `s`, return all the palindromic permutations (without\nduplicates) of it. Return an empty list if no palindromic permutation could be\nform.\n\nFor example:\n\nGiven `s = \"aabb\"`, return `[\"abba\", \"baab\"]`.\n\nGiven `s = \"abc\"`, return `[]`.\n\nHint:\n\n  1. If a palindromic permutation exists, we just need to generate the first half of the string.\n  2. To generate all distinct permutations of a (half of) string, use a similar approach from: [Permutations II](https://leetcode.com/problems/permutations-ii) or [Next Permutation](https://leetcode.com/problems/next-permutation).",
        "level": 2,
        "paid_only": true,
        "question_id": 267,
        "slug": "palindrome-permutation-ii",
        "tags": [],
        "title": "Palindrome Permutation II",
        "url": "https://leetcode.com/problems/palindrome-permutation-ii/description/"
    },
    "268": {
        "description": "Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.\r\n\r\n\r\nFor example,\r\nGiven nums = [0, 1, 3] return 2.\r\n\r\n\r\n\r\nNote:\r\nYour algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 268,
        "slug": "missing-number",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "title": "Missing Number",
        "url": "https://leetcode.com/problems/missing-number/description/"
    },
    "269": {
        "description": "There is a new alien language which uses the latin alphabet. However, the\norder among letters are unknown to you. You receive a list of words from the\ndictionary, where words are sorted lexicographically by the rules of this new\nlanguage. Derive the order of letters in this language.\n\nFor example,\nGiven the following words in dictionary,\n\n\n\n    [\r  \"wrt\",\r  \"wrf\",\r  \"er\",\r  \"ett\",\r  \"rftt\"\r]\r\n\n\n\nThe correct order is: `\"wertf\"`.\n\nNote:\n\n  1. You may assume all letters are in lowercase.\n  2. If the order is invalid, return an empty string.\n  3. There may be multiple valid order of letters, return any one of them is fine.",
        "level": 3,
        "paid_only": true,
        "question_id": 269,
        "slug": "alien-dictionary",
        "tags": [],
        "title": "Alien Dictionary",
        "url": "https://leetcode.com/problems/alien-dictionary/description/"
    },
    "270": {
        "description": "Given a non-empty binary search tree and a target value, find the value in the\nBST that is closest to the target.\n\nNote:\n\n  * Given target value is a floating point.\n  * You are guaranteed to have only one unique value in the BST that is closest to the target.",
        "level": 1,
        "paid_only": true,
        "question_id": 270,
        "slug": "closest-binary-search-tree-value",
        "tags": [],
        "title": "Closest Binary Search Tree Value",
        "url": "https://leetcode.com/problems/closest-binary-search-tree-value/description/"
    },
    "271": {
        "description": "Design an algorithm to encode a list of strings to a string. The encoded\nstring is then sent over the network and is decoded back to the original list\nof strings.\n\nMachine 1 (sender) has the function:\n\n\n\n    string encode(vector<string> strs) {\r  // ... your code\r  return encoded_string;\r}\n\nMachine 2 (receiver) has the function:\n\n\n\n    vector<string> decode(string s) {\r  //... your code\r  return strs;\r}\n\n\n\nSo Machine 1 does:\n\n\n\n    string encoded_string = encode(strs);\n\n\n\nand Machine 2 does:\n\n\n\n    vector<string> strs2 = decode(encoded_string);\n\n\n\n`strs2` in Machine 2 should be the same as `strs` in Machine 1.\n\nImplement the `encode` and `decode` methods.\n\nNote:\n\n  * The string may contain any possible characters out of 256 valid ascii characters. Your algorithm should be generalized enough to work on any possible characters.\n  * Do not use class member/global/static variables to store states. Your encode and decode algorithms should be stateless.\n  * Do not rely on any library method such as `eval` or serialize methods. You should implement your own encode/decode algorithm.",
        "level": 2,
        "paid_only": true,
        "question_id": 271,
        "slug": "encode-and-decode-strings",
        "tags": [],
        "title": "Encode and Decode Strings",
        "url": "https://leetcode.com/problems/encode-and-decode-strings/description/"
    },
    "272": {
        "description": "Given a non-empty binary search tree and a target value, find _k_ values in\nthe BST that are closest to the target.\n\nNote:\n\n  * Given target value is a floating point.\n  * You may assume _k_ is always valid, that is: _k_ ≤ total nodes.\n  * You are guaranteed to have only one unique set of _k_ values in the BST that are closest to the target.\n\n\n\nFollow up:\nAssume that the BST is balanced, could you solve it in less than _O_(_n_)\nruntime (where _n_ = total nodes)?\n\nHint:\n\n1\\. Consider implement these two helper functions:\ni. getPredecessor(N), which returns the next smaller node to N.\nii. getSuccessor(N), which returns the next larger node to N.\n2\\. Try to assume that each node has a parent pointer, it makes the problem\nmuch easier.\n3\\. Without parent pointer we just need to keep track of the path from the\nroot to the current node using a stack.\n4\\. You would need two stacks to track the path in finding predecessor and\nsuccessor node separately.",
        "level": 3,
        "paid_only": true,
        "question_id": 272,
        "slug": "closest-binary-search-tree-value-ii",
        "tags": [],
        "title": "Closest Binary Search Tree Value II",
        "url": "https://leetcode.com/problems/closest-binary-search-tree-value-ii/description/"
    },
    "273": {
        "description": "Convert a non-negative integer to its english words representation. Given input is guaranteed to be less than 231 - 1.\r\n\r\n\r\nFor example,\r\n\r\n123 -> \"One Hundred Twenty Three\"\r\n12345 -> \"Twelve Thousand Three Hundred Forty Five\"\r\n1234567 -> \"One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven\"",
        "level": 3,
        "paid_only": false,
        "question_id": 273,
        "slug": "integer-to-english-words",
        "tags": [
            "Math",
            "String"
        ],
        "title": "Integer to English Words",
        "url": "https://leetcode.com/problems/integer-to-english-words/description/"
    },
    "274": {
        "description": "Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.\r\n\r\n\r\n\r\nAccording to the definition of h-index on Wikipedia: \"A scientist has index h if h of his/her N papers have at least h citations each, and the other N − h papers have no more than h citations each.\"\r\n\r\n\r\n\r\nFor example, given citations = [3, 0, 6, 1, 5], which means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, his h-index is 3.\r\n\r\n\r\n\r\nNote: If there are several possible values for h, the maximum one is taken as the h-index.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 274,
        "slug": "h-index",
        "tags": [
            "Hash Table",
            "Sort"
        ],
        "title": "H-Index",
        "url": "https://leetcode.com/problems/h-index/description/"
    },
    "275": {
        "description": "Follow up for H-Index: What if the citations array is sorted in ascending order? Could you optimize your algorithm?",
        "level": 2,
        "paid_only": false,
        "question_id": 275,
        "slug": "h-index-ii",
        "tags": [
            "Binary Search"
        ],
        "title": "H-Index II",
        "url": "https://leetcode.com/problems/h-index-ii/description/"
    },
    "276": {
        "description": "There is a fence with n posts, each post can be painted with one of the k\ncolors.\n\nYou have to paint all the posts such that no more than two adjacent fence\nposts have the same color.\n\nReturn the total number of ways you can paint the fence.\n\nNote:\nn and k are non-negative integers.",
        "level": 1,
        "paid_only": true,
        "question_id": 276,
        "slug": "paint-fence",
        "tags": [],
        "title": "Paint Fence",
        "url": "https://leetcode.com/problems/paint-fence/description/"
    },
    "277": {
        "description": "Suppose you are at a party with `n` people (labeled from `0` to `n - 1`) and\namong them, there may exist one celebrity. The definition of a celebrity is\nthat all the other `n - 1`people know him/her but he/she does not know any of\nthem.\n\nNow you want to find out who the celebrity is or verify that there is not one.\nThe only thing you are allowed to do is to ask questions like: \"Hi, A. Do you\nknow B?\" to get information of whether A knows B. You need to find out the\ncelebrity (or verify there is not one) by asking as few questions as possible\n(in the asymptotic sense).\n\nYou are given a helper function `bool knows(a, b)` which tells you whether A\nknows B. Implement a function `int findCelebrity(n)`, your function should\nminimize the number of calls to `knows`.\n\nNote: There will be exactly one celebrity if he/she is in the party. Return\nthe celebrity's label if there is a celebrity in the party. If there is no\ncelebrity, return `-1`.",
        "level": 2,
        "paid_only": true,
        "question_id": 277,
        "slug": "find-the-celebrity",
        "tags": [],
        "title": "Find the Celebrity",
        "url": "https://leetcode.com/problems/find-the-celebrity/description/"
    },
    "278": {
        "description": "You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad. \r\n\r\n\r\n\r\nSuppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad.\r\n\r\n\r\n\r\nYou are given an API bool isBadVersion(version) which will return whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 278,
        "slug": "first-bad-version",
        "tags": [
            "Binary Search"
        ],
        "title": "First Bad Version",
        "url": "https://leetcode.com/problems/first-bad-version/description/"
    },
    "279": {
        "description": "Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.\r\n\r\n\r\n\r\nFor example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 279,
        "slug": "perfect-squares",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Breadth-first Search"
        ],
        "title": "Perfect Squares",
        "url": "https://leetcode.com/problems/perfect-squares/description/"
    },
    "280": {
        "description": "Given an unsorted array nums, reorder it in-place such that nums[0] <=\nnums[1] >= nums[2] <= nums[3]....\n\nFor example, given nums = [3, 5, 2, 1, 6, 4], one possible answer is [1, 6, 2,\n5, 3, 4].",
        "level": 2,
        "paid_only": true,
        "question_id": 280,
        "slug": "wiggle-sort",
        "tags": [],
        "title": "Wiggle Sort",
        "url": "https://leetcode.com/problems/wiggle-sort/description/"
    },
    "281": {
        "description": "Given two 1d vectors, implement an iterator to return their elements\nalternately.\n\nFor example, given two 1d vectors:\n\n\n\n    v1 = [1, 2]\rv2 = [3, 4, 5, 6]\r\n\nBy calling _next_ repeatedly until _hasNext_ returns `false`, the order of\nelements returned by _next_ should be: `[1, 3, 2, 4, 5, 6]`.\n\n**Follow up**: What if you are given `k` 1d vectors? How well can your code be extended to such cases?\n\n**Clarification for the follow up question - Update (2015-09-18):**\nThe \"Zigzag\" order is not clearly defined and is ambiguous for `k > 2` cases.\nIf \"Zigzag\" does not look right to you, replace \"Zigzag\" with \"Cyclic\". For\nexample, given the following input:\n\n\n\n    [1,2,3]\r[4,5,6,7]\r[8,9]\r\n\nIt should return `[1,4,8,2,5,9,3,6,7]`.",
        "level": 2,
        "paid_only": true,
        "question_id": 281,
        "slug": "zigzag-iterator",
        "tags": [],
        "title": "Zigzag Iterator",
        "url": "https://leetcode.com/problems/zigzag-iterator/description/"
    },
    "282": {
        "description": "Given a string that contains only digits 0-9 and a target value, return all possibilities to add binary operators (not unary) +, -, or * between the digits so they evaluate to the target value.\r\n\r\n\r\nExamples: \r\n\"123\", 6 -> [\"1+2+3\", \"1*2*3\"] \r\n\"232\", 8 -> [\"2*3+2\", \"2+3*2\"]\r\n\"105\", 5 -> [\"1*0+5\",\"10-5\"]\r\n\"00\", 0 -> [\"0+0\", \"0-0\", \"0*0\"]\r\n\"3456237490\", 9191 -> []\r\n\r\n\r\nCredits:Special thanks to @davidtan1890 for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 282,
        "slug": "expression-add-operators",
        "tags": [
            "Divide and Conquer"
        ],
        "title": "Expression Add Operators",
        "url": "https://leetcode.com/problems/expression-add-operators/description/"
    },
    "283": {
        "description": "Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.\r\n\r\n\r\n\r\nFor example, given nums  = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].\r\n\r\n\r\n\r\nNote:\r\n\r\nYou must do this in-place without making a copy of the array.\r\nMinimize the total number of operations.\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 283,
        "slug": "move-zeroes",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "Move Zeroes",
        "url": "https://leetcode.com/problems/move-zeroes/description/"
    },
    "284": {
        "description": "Given an Iterator class interface with methods: next() and hasNext(), design and implement a PeekingIterator that support the peek() operation -- it essentially peek() at the element that will be returned by the next call to next().\r\n\r\n\r\nHere is an example. Assume that the iterator is initialized to the beginning of the list: [1, 2, 3].\r\n\r\nCall next() gets you 1, the first element in the list.\r\n\r\nNow you call peek() and it returns 2, the next element. Calling next() after that still return 2.\r\n\r\nYou call next() the final time and it returns 3, the last element. Calling hasNext() after that should return false.\r\n\r\n\r\nFollow up: How would you extend your design to be generic and work with all types, not just integer?\r\n\r\nCredits:Special thanks to @porker2008 for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 284,
        "slug": "peeking-iterator",
        "tags": [
            "Design"
        ],
        "title": "Peeking Iterator",
        "url": "https://leetcode.com/problems/peeking-iterator/description/"
    },
    "285": {
        "description": "Given a binary search tree and a node in it, find the in-order successor of\nthat node in the BST.\n\nNote: If the given node has no in-order successor in the tree, return `null`.",
        "level": 2,
        "paid_only": true,
        "question_id": 285,
        "slug": "inorder-successor-in-bst",
        "tags": [],
        "title": "Inorder Successor in BST",
        "url": "https://leetcode.com/problems/inorder-successor-in-bst/description/"
    },
    "286": {
        "description": "You are given a _m x n_ 2D grid initialized with these three possible values.\n\n  1. `-1` \\- A wall or an obstacle.\n  2. `0` \\- A gate.\n  3. `INF` \\- Infinity means an empty room. We use the value `231 - 1 = 2147483647` to represent `INF` as you may assume that the distance to a gate is less than `2147483647`.\n\nFill each empty room with the distance to its _nearest_ gate. If it is\nimpossible to reach a gate, it should be filled with `INF`.\n\nFor example, given the 2D grid:\n\n\n    INF  -1  0  INF\rINF INF INF  -1\rINF  -1 INF  -1\r  0  -1 INF INF\n\nAfter running your function, the 2D grid should be:\n\n\n      3  -1   0   1\r  2   2   1  -1\r  1  -1   2  -1\r  0  -1   3   4",
        "level": 2,
        "paid_only": true,
        "question_id": 286,
        "slug": "walls-and-gates",
        "tags": [],
        "title": "Walls and Gates",
        "url": "https://leetcode.com/problems/walls-and-gates/description/"
    },
    "287": {
        "description": "Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.\r\n\r\n\r\n\r\nNote:\r\n\r\nYou must not modify the array (assume the array is read only).\r\nYou must use only constant, O(1) extra space.\r\nYour runtime complexity should be less than O(n2).\r\nThere is only one duplicate number in the array, but it could be repeated more than once.\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 287,
        "slug": "find-the-duplicate-number",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "title": "Find the Duplicate Number",
        "url": "https://leetcode.com/problems/find-the-duplicate-number/description/"
    },
    "288": {
        "description": "An abbreviation of a word follows the form <first\nletter><number><last letter>. Below are some examples of word\nabbreviations:\n\n\n\n    a) it                      --> it    (no abbreviation)\r\r     1\rb) d|o|g                   --> d1g\r\r              1    1  1\r     1---5----0----5--8\rc) i|nternationalizatio|n  --> i18n\r\r              1\r     1---5----0\rd) l|ocalizatio|n          --> l10n\r\n\nAssume you have a dictionary and given a word, find whether its abbreviation\nis unique in the dictionary. A word's abbreviation is unique if no _other_\nword from the dictionary has the same abbreviation.\n\nExample:\n\n\n\n    Given dictionary = [ \"deer\", \"door\", \"cake\", \"card\" ]\r\risUnique(\"dear\") -> false\risUnique(\"cart\") -> true\risUnique(\"cane\") -> false\risUnique(\"make\") -> true",
        "level": 2,
        "paid_only": true,
        "question_id": 288,
        "slug": "unique-word-abbreviation",
        "tags": [],
        "title": "Unique Word Abbreviation",
        "url": "https://leetcode.com/problems/unique-word-abbreviation/description/"
    },
    "289": {
        "description": "According to the Wikipedia's article: \"The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\"\r\n\r\n\r\n\r\nGiven a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):\r\n\r\n\r\n\r\n\r\nAny live cell with fewer than two live neighbors dies, as if caused by under-population.\r\nAny live cell with two or three live neighbors lives on to the next generation.\r\nAny live cell with more than three live neighbors dies, as if by over-population..\r\nAny dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\r\n\r\n\r\n\r\n\r\nWrite a function to compute the next state (after one update) of the board given its current state.\r\n\r\n\r\nFollow up: \r\n\r\nCould you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells.\r\nIn this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems?\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 289,
        "slug": "game-of-life",
        "tags": [
            "Array"
        ],
        "title": "Game of Life",
        "url": "https://leetcode.com/problems/game-of-life/description/"
    },
    "290": {
        "description": "Given a pattern and a string str, find if str follows the same pattern.\r\n Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.\r\n\r\nExamples:\r\n\r\npattern = \"abba\", str = \"dog cat cat dog\" should return true.\r\npattern = \"abba\", str = \"dog cat cat fish\" should return false.\r\npattern = \"aaaa\", str = \"dog cat cat dog\" should return false.\r\npattern = \"abba\", str = \"dog dog dog dog\" should return false.\r\n\r\n\r\n\r\n\r\nNotes:\r\nYou may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.\r\n\r\n\r\nCredits:Special thanks to @minglotus6 for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 290,
        "slug": "word-pattern",
        "tags": [
            "Hash Table"
        ],
        "title": "Word Pattern",
        "url": "https://leetcode.com/problems/word-pattern/description/"
    },
    "291": {
        "description": "Given a `pattern` and a string `str`, find if `str` follows the same pattern.\n\nHere follow means a full match, such that there is a bijection between a\nletter in `pattern` and a non-empty substring in `str`.\n\nExamples:\n\n  1. pattern = `\"abab\"`, str = `\"redblueredblue\"` should return true.\n  2. pattern = `\"aaaa\"`, str = `\"asdasdasdasd\"` should return true.\n  3. pattern = `\"aabb\"`, str = `\"xyzabcxzyabc\"` should return false.\n\n\n\nNotes:\nYou may assume both `pattern` and `str` contains only lowercase letters.",
        "level": 3,
        "paid_only": true,
        "question_id": 291,
        "slug": "word-pattern-ii",
        "tags": [],
        "title": "Word Pattern II",
        "url": "https://leetcode.com/problems/word-pattern-ii/description/"
    },
    "292": {
        "description": "You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.\r\n\r\n\r\n\r\nBoth of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.\r\n\r\n\r\n\r\nFor example, if there are 4 stones in the heap, then you will never win the game: no matter 1, 2, or 3 stones you remove, the last stone will always be removed by your friend.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 292,
        "slug": "nim-game",
        "tags": [
            "Brainteaser"
        ],
        "title": "Nim Game",
        "url": "https://leetcode.com/problems/nim-game/description/"
    },
    "293": {
        "description": "You are playing the following Flip Game with your friend: Given a string that\ncontains only these two characters: `+` and `-`, you and your friend take\nturns to flip twoconsecutive `\"++\"` into `\"--\"`. The game ends when a person\ncan no longer make a move and therefore the other person will be the winner.\n\nWrite a function to compute all possible states of the string after one valid\nmove.\n\nFor example, given `s = \"++++\"`, after one move, it may become one of the\nfollowing states:\n\n\n\n    [\r  \"--++\",\r  \"+--+\",\r  \"++--\"\r]\r\n\n\n\nIf there is no valid move, return an empty list `[]`.",
        "level": 1,
        "paid_only": true,
        "question_id": 293,
        "slug": "flip-game",
        "tags": [],
        "title": "Flip Game",
        "url": "https://leetcode.com/problems/flip-game/description/"
    },
    "294": {
        "description": "You are playing the following Flip Game with your friend: Given a string that\ncontains only these two characters: `+` and `-`, you and your friend take\nturns to flip twoconsecutive `\"++\"` into `\"--\"`. The game ends when a person\ncan no longer make a move and therefore the other person will be the winner.\n\nWrite a function to determine if the starting player can guarantee a win.\n\nFor example, given `s = \"++++\"`, return true. The starting player can\nguarantee a win by flipping the middle `\"++\"` to become `\"+--+\"`.\n\nFollow up:\nDerive your algorithm's runtime complexity.",
        "level": 2,
        "paid_only": true,
        "question_id": 294,
        "slug": "flip-game-ii",
        "tags": [],
        "title": "Flip Game II",
        "url": "https://leetcode.com/problems/flip-game-ii/description/"
    },
    "295": {
        "description": "Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.\r\nExamples: \r\n[2,3,4] , the median is 3\r\n[2,3], the median is (2 + 3) / 2 = 2.5 \r\n\r\n\r\nDesign a data structure that supports the following two operations:\r\n\r\n\r\nvoid addNum(int num) - Add a integer number from the data stream to the data structure.\r\ndouble findMedian() - Return the median of all elements so far.\r\n\r\n\r\n\r\nFor example:\r\n\r\naddNum(1)\r\naddNum(2)\r\nfindMedian() -> 1.5\r\naddNum(3) \r\nfindMedian() -> 2\r\n\r\n\r\nCredits:Special thanks to @Louis1992 for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 295,
        "slug": "find-median-from-data-stream",
        "tags": [
            "Heap",
            "Design"
        ],
        "title": "Find Median from Data Stream",
        "url": "https://leetcode.com/problems/find-median-from-data-stream/description/"
    },
    "296": {
        "description": "A group of two or more people wants to meet and minimize the total travel\ndistance. You are given a 2D grid of values 0 or 1, where each 1 marks the\nhome of someone in the group. The distance is calculated using [Manhattan\nDistance](http://en.wikipedia.org/wiki/Taxicab_geometry), where distance(p1,\np2) = `|p2.x - p1.x| + |p2.y - p1.y|`.\n\nFor example, given three people living at `(0,0)`, `(0,4)`, and `(2,2)`:\n\n\n\n    1 - 0 - 0 - 0 - 1\r|   |   |   |   |\r0 - 0 - 0 - 0 - 0\r|   |   |   |   |\r0 - 0 - 1 - 0 - 0\n\nThe point `(0,2)` is an ideal meeting point, as the total travel distance of\n2+2+2=6 is minimal. So return 6.\n\n**Hint:**\n\n  1. Try to solve it in one dimension first. How can this solution apply to the two dimension case?",
        "level": 3,
        "paid_only": true,
        "question_id": 296,
        "slug": "best-meeting-point",
        "tags": [],
        "title": "Best Meeting Point",
        "url": "https://leetcode.com/problems/best-meeting-point/description/"
    },
    "297": {
        "description": "Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. \r\n\r\nDesign an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.\r\n\r\n\r\nFor example, you may serialize the following tree\r\n\r\n    1\r\n   / \\\r\n  2   3\r\n     / \\\r\n    4   5\r\n\r\nas \"[1,2,3,null,null,4,5]\", just the same as how LeetCode OJ serializes a binary tree. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.\r\n\r\n\r\n\r\nNote: Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.\r\n\r\n\r\nCredits:Special thanks to @Louis1992 for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 297,
        "slug": "serialize-and-deserialize-binary-tree",
        "tags": [
            "Tree",
            "Design"
        ],
        "title": "Serialize and Deserialize Binary Tree",
        "url": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/description/"
    },
    "298": {
        "description": "Given a binary tree, find the length of the longest consecutive sequence path.\n\n\n\nThe path refers to any sequence of nodes from some starting node to any node\nin the tree along the parent-child connections. The longest consecutive path\nneed to be from parent to child (cannot be the reverse).\n\nFor example,\n\n\n\n       1\r    \\\r     3\r    / \\\r   2   4\r        \\\r         5\r\n\nLongest consecutive sequence path is `3-4-5`, so return `3`.\n\n\n\n       2\r    \\\r     3\r    / \r   2    \r  / \r 1\r\n\nLongest consecutive sequence path is `2-3`,not`3-2-1`, so return `2`.",
        "level": 2,
        "paid_only": true,
        "question_id": 298,
        "slug": "binary-tree-longest-consecutive-sequence",
        "tags": [],
        "title": "Binary Tree Longest Consecutive Sequence",
        "url": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence/description/"
    },
    "299": {
        "description": "You are playing the following Bulls and Cows game with your friend: You write down a number and ask your friend to guess what the number is. Each time your friend makes a guess, you provide a hint that indicates how many digits in said guess match your secret number exactly in both digit and position (called \"bulls\") and how many digits match the secret number but locate in the wrong position (called \"cows\"). Your friend will use successive guesses and hints to eventually derive the secret number.\r\n\r\n\r\nFor example:\r\n\r\nSecret number:  \"1807\"\r\nFriend's guess: \"7810\"\r\n\r\nHint: 1 bull and 3 cows. (The bull is 8, the cows are 0, 1 and 7.)\r\n\r\n\r\nWrite a function to return a hint according to the secret number and friend's guess, use A to indicate the bulls and B to indicate the cows. In the above example, your function should return \"1A3B\". \r\n\r\nPlease note that both secret number and friend's guess may contain duplicate digits, for example:\r\n\r\nSecret number:  \"1123\"\r\nFriend's guess: \"0111\"\r\n\r\nIn this case, the 1st 1 in friend's guess is a bull, the 2nd or 3rd 1 is a cow, and your function should return \"1A1B\".\r\n\r\n\r\nYou may assume that the secret number and your friend's guess only contain digits, and their lengths are always equal.\r\n\r\nCredits:Special thanks to @jeantimex for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 299,
        "slug": "bulls-and-cows",
        "tags": [
            "Hash Table"
        ],
        "title": "Bulls and Cows",
        "url": "https://leetcode.com/problems/bulls-and-cows/description/"
    },
    "300": {
        "description": "Given an unsorted array of integers, find the length of longest increasing subsequence.\r\n\r\n\r\nFor example,\r\nGiven [10, 9, 2, 5, 3, 7, 101, 18],\r\nThe longest increasing subsequence is [2, 3, 7, 101], therefore the length is 4. Note that there may be more than one LIS combination, it is only necessary for you to return the length.\r\n\r\n\r\nYour algorithm should run in O(n2) complexity.\r\n\r\n\r\nFollow up: Could you improve it to O(n log n) time complexity? \r\n\r\nCredits:Special thanks to @pbrother for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 300,
        "slug": "longest-increasing-subsequence",
        "tags": [
            "Binary Search",
            "Dynamic Programming"
        ],
        "title": "Longest Increasing Subsequence",
        "url": "https://leetcode.com/problems/longest-increasing-subsequence/description/"
    },
    "301": {
        "description": "Remove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.\r\n\r\nNote: The input string may contain letters other than the parentheses ( and ). \r\n\r\n\r\n\r\nExamples:\r\n\r\n\"()())()\" -> [\"()()()\", \"(())()\"]\r\n\"(a)())()\" -> [\"(a)()()\", \"(a())()\"]\r\n\")(\" -> [\"\"]\r\n\r\n\r\n\r\nCredits:Special thanks to @hpplayer for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 301,
        "slug": "remove-invalid-parentheses",
        "tags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Remove Invalid Parentheses",
        "url": "https://leetcode.com/problems/remove-invalid-parentheses/description/"
    },
    "302": {
        "description": "An image is represented by a binary matrix with `0` as a white pixel and `1`\nas a black pixel. The black pixels are connected, i.e., there is only one\nblack region. Pixels are connected horizontally and vertically. Given the\nlocation `(x, y)` of one of the black pixels, return the area of the smallest\n(axis-aligned) rectangle that encloses all black pixels.\n\nFor example, given the following image:\n\n\n\n    [\r  \"0010\",\r  \"0110\",\r  \"0100\"\r]\r\n\nand `x = 0`, `y = 2`,\n\n\n\nReturn `6`.",
        "level": 3,
        "paid_only": true,
        "question_id": 302,
        "slug": "smallest-rectangle-enclosing-black-pixels",
        "tags": [],
        "title": "Smallest Rectangle Enclosing Black Pixels",
        "url": "https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels/description/"
    },
    "303": {
        "description": "Given an integer array nums, find the sum of the elements between indices i and j (i ≤ j), inclusive.\r\n\r\nExample:\r\n\r\nGiven nums = [-2, 0, 3, -5, 2, -1]\r\n\r\nsumRange(0, 2) -> 1\r\nsumRange(2, 5) -> -1\r\nsumRange(0, 5) -> -3\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume that the array does not change.\r\nThere are many calls to sumRange function.",
        "level": 1,
        "paid_only": false,
        "question_id": 303,
        "slug": "range-sum-query-immutable",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Range Sum Query - Immutable",
        "url": "https://leetcode.com/problems/range-sum-query-immutable/description/"
    },
    "304": {
        "description": "Given a 2D matrix matrix, find the sum of the elements inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\r\n\r\n\r\n\r\nThe above rectangle (with the red border) is defined by (row1, col1) = (2, 1) and (row2, col2) = (4, 3), which contains sum = 8.\r\n\r\n\r\nExample:\r\n\r\nGiven matrix = [\r\n  [3, 0, 1, 4, 2],\r\n  [5, 6, 3, 2, 1],\r\n  [1, 2, 0, 1, 5],\r\n  [4, 1, 0, 1, 7],\r\n  [1, 0, 3, 0, 5]\r\n]\r\n\r\nsumRegion(2, 1, 4, 3) -> 8\r\nsumRegion(1, 1, 2, 2) -> 11\r\nsumRegion(1, 2, 2, 4) -> 12\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume that the matrix does not change.\r\nThere are many calls to sumRegion function.\r\nYou may assume that row1 ≤ row2 and col1 ≤ col2.",
        "level": 2,
        "paid_only": false,
        "question_id": 304,
        "slug": "range-sum-query-2d-immutable",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Range Sum Query 2D - Immutable",
        "url": "https://leetcode.com/problems/range-sum-query-2d-immutable/description/"
    },
    "305": {
        "description": "A 2d grid map of `m` rows and `n` columns is initially filled with water. We\nmay perform an _addLand_ operation which turns the water at position (row,\ncol) into a land. Given a list of positions to operate, count the number of\nislands after each _addLand_ operation. An island is surrounded by water and\nis formed by connecting adjacent lands horizontally or vertically. You may\nassume all four edges of the grid are all surrounded by water.\n\nExample:\n\nGiven `m = 3, n = 3`, `positions = [[0,0], [0,1], [1,2], [2,1]]`.\nInitially, the 2d grid `grid` is filled with water. (Assume 0 represents water\nand 1 represents land).\n\n\n\n    0 0 0\r0 0 0\r0 0 0\r\n\nOperation #1: addLand(0, 0) turns the water at grid[0][0] into a land.\n\n\n\n    1 0 0\r0 0 0   Number of islands = 1\r0 0 0\r\n\nOperation #2: addLand(0, 1) turns the water at grid[0][1] into a land.\n\n\n\n    1 1 0\r0 0 0   Number of islands = 1\r0 0 0\r\n\nOperation #3: addLand(1, 2) turns the water at grid[1][2] into a land.\n\n\n\n    1 1 0\r0 0 1   Number of islands = 2\r0 0 0\r\n\nOperation #4: addLand(2, 1) turns the water at grid[2][1] into a land.\n\n\n\n    1 1 0\r0 0 1   Number of islands = 3\r0 1 0\r\n\nWe return the result as an array: `[1, 1, 2, 3]`\n\nChallenge:\n\nCan you do it in time complexity O(k log mn), where k is the length of the\n`positions`?",
        "level": 3,
        "paid_only": true,
        "question_id": 305,
        "slug": "number-of-islands-ii",
        "tags": [],
        "title": "Number of Islands II",
        "url": "https://leetcode.com/problems/number-of-islands-ii/description/"
    },
    "306": {
        "description": "Additive number is a string whose digits can form additive sequence.\r\n\r\nA valid additive sequence should contain at least three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.\r\n\r\n\r\nFor example:\r\n\"112358\" is an additive number because the digits can form an additive sequence: 1, 1, 2, 3, 5, 8.\r\n1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8\r\n\"199100199\" is also an additive number, the additive sequence is: 1, 99, 100, 199.\r\n1 + 99 = 100, 99 + 100 = 199\r\n\r\n\r\n\r\nNote: Numbers in the additive sequence cannot have leading zeros, so sequence 1, 2, 03 or 1, 02, 3 is invalid.\r\n\r\n\r\nGiven a string containing only digits '0'-'9', write a function to determine if it's an additive number.\r\n\r\n\r\nFollow up:\r\nHow would you handle overflow for very large input integers?\r\n\r\n\r\nCredits:Special thanks to @jeantimex for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 306,
        "slug": "additive-number",
        "tags": [],
        "title": "Additive Number",
        "url": "https://leetcode.com/problems/additive-number/description/"
    },
    "307": {
        "description": "Given an integer array nums, find the sum of the elements between indices i and j (i ≤ j), inclusive.\r\n\r\nThe update(i, val) function modifies nums by updating the element at index i to val.\r\n\r\nExample:\r\n\r\nGiven nums = [1, 3, 5]\r\n\r\nsumRange(0, 2) -> 9\r\nupdate(1, 2)\r\nsumRange(0, 2) -> 8\r\n\r\n\r\n\r\nNote:\r\n\r\nThe array is only modifiable by the update function.\r\nYou may assume the number of calls to update and sumRange function is distributed evenly.",
        "level": 2,
        "paid_only": false,
        "question_id": 307,
        "slug": "range-sum-query-mutable",
        "tags": [
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "title": "Range Sum Query - Mutable",
        "url": "https://leetcode.com/problems/range-sum-query-mutable/description/"
    },
    "308": {
        "description": "Given a 2D matrix _matrix_, find the sum of the elements inside the rectangle\ndefined by its upper left corner (_row_1, _col_1) and lower right corner\n(_row_2, _col_2).\n\n![Range Sum Query\n2D](https://leetcode.com/static/images/courses/range_sum_query_2d.png)\nThe above rectangle (with the red border) is defined by (row1, col1) = **(2,\n1)** and (row2, col2) = **(4, 3)**, which contains sum = **8**.\n\n**Example:**\n\n\n    Given matrix = [\r  [3, 0, 1, 4, 2],\r  [5, 6, 3, 2, 1],\r  [1, 2, 0, 1, 5],\r  [4, 1, 0, 1, 7],\r  [1, 0, 3, 0, 5]\r]\r\rsumRegion(2, 1, 4, 3) -> 8\rupdate(3, 2, 2)\rsumRegion(2, 1, 4, 3) -> 10\r\n\n**Note:**\n  1. The matrix is only modifiable by the _update_ function.\n  2. You may assume the number of calls to _update_ and _sumRegion_ function is distributed evenly.\n  3. You may assume that _row_1 ≤ _row_2 and _col_1 ≤ _col_2.",
        "level": 3,
        "paid_only": true,
        "question_id": 308,
        "slug": "range-sum-query-2d-mutable",
        "tags": [],
        "title": "Range Sum Query 2D - Mutable",
        "url": "https://leetcode.com/problems/range-sum-query-2d-mutable/description/"
    },
    "309": {
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like\r\n(ie, buy one and sell one share of the stock multiple times) with the following restrictions:\r\n\r\n\r\n    You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\r\n    After you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)\r\n\r\n\r\nExample:\r\n\r\nprices = [1, 2, 3, 0, 2]\r\nmaxProfit = 3\r\ntransactions = [buy, sell, cooldown, buy, sell]\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 309,
        "slug": "best-time-to-buy-and-sell-stock-with-cooldown",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Best Time to Buy and Sell Stock with Cooldown",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/description/"
    },
    "310": {
        "description": "For a undirected graph with tree characteristics, we can choose any node as the root. The result graph is then a rooted tree. Among all possible rooted trees, those with minimum height are called minimum height trees (MHTs).\r\n    Given such a graph, write a function to find all the MHTs and return a list of their root labels.\r\n\r\n\r\n\r\n    Format\r\n    The graph contains n nodes which are labeled from 0 to n - 1.\r\n    You will be given the number n and a list of undirected edges (each edge is a pair of labels).\r\n\r\n \r\nYou can assume that no duplicate edges will appear in edges. Since all edges are\r\n    undirected, [0, 1] is the same as [1, 0] and thus will not appear together in\r\n    edges.\r\n\r\n\r\n    Example 1:\r\n\r\n\r\n    Given n = 4, edges = [[1, 0], [1, 2], [1, 3]]\r\n\r\n\r\n\r\n        0\r\n        |\r\n        1\r\n       / \\\r\n      2   3\r\n\r\n\r\n    return  [1]\r\n\r\n\r\n\r\n    Example 2:\r\n\r\n\r\n    Given n = 6, edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]\r\n\r\n\r\n     0  1  2\r\n      \\ | /\r\n        3\r\n        |\r\n        4\r\n        |\r\n        5\r\n\r\n\r\n    return  [3, 4]\r\n\r\n\r\n\r\n    Note:\r\n\r\n\r\n    (1) According to the definition\r\n    of tree on Wikipedia: “a tree is an undirected graph in which any two vertices are connected by\r\n    exactly one path. In other words, any connected graph without simple cycles is a tree.”\r\n\r\n\r\n    (2) The height of a rooted tree is the number of edges on the longest downward path between the root and a\r\n    leaf.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 310,
        "slug": "minimum-height-trees",
        "tags": [
            "Breadth-first Search",
            "Graph"
        ],
        "title": "Minimum Height Trees",
        "url": "https://leetcode.com/problems/minimum-height-trees/description/"
    },
    "311": {
        "description": "Given two [sparse matrices](https://en.wikipedia.org/wiki/Sparse_matrix) **A**\nand **B**, return the result of **AB**.\n\nYou may assume that **A**'s column number is equal to **B**'s row number.\n\n**Example:**\n\n\n    **A** = [\r  [ 1, 0, 0],\r  [-1, 0, 3]\r]\r\r**B** = [\r  [ 7, 0, 0 ],\r  [ 0, 0, 0 ],\r  [ 0, 0, 1 ]\r]\r\r\r     |  1 0 0 |   | 7 0 0 |   |  7 0 0 |\r**AB** = | -1 0 3 | x | 0 0 0 | = | -7 0 3 |\r                  | 0 0 1 |",
        "level": 2,
        "paid_only": true,
        "question_id": 311,
        "slug": "sparse-matrix-multiplication",
        "tags": [],
        "title": "Sparse Matrix Multiplication",
        "url": "https://leetcode.com/problems/sparse-matrix-multiplication/description/"
    },
    "312": {
        "description": "Given n balloons, indexed from 0 to n-1. Each balloon is painted with a\r\n    number on it represented by array nums.\r\n\r\n    You are asked to burst all the balloons. If the you burst\r\n    balloon i you will get nums[left] * nums[i] * nums[right] coins. Here left\r\n    and right are adjacent indices of i. After the burst, the left and right\r\n    then becomes adjacent.\r\n\r\n\r\n    Find the maximum coins you can collect by bursting the balloons wisely.\r\n\r\n\r\n    Note: \r\n    (1) You may imagine nums[-1] = nums[n] = 1. They are not real therefore you can not burst them.\r\n    (2) 0 ≤ n ≤ 500, 0 ≤ nums[i] ≤ 100\r\n\r\n\r\n\r\n\r\n    Example:\r\n\r\n\r\n    Given [3, 1, 5, 8]\r\n\r\n\r\n    Return 167\r\n\r\n\r\n    nums = [3,1,5,8] --> [3,5,8] -->   [3,8]   -->  [8]  --> []\r\n   coins =  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   = 167\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 312,
        "slug": "burst-balloons",
        "tags": [
            "Divide and Conquer",
            "Dynamic Programming"
        ],
        "title": "Burst Balloons",
        "url": "https://leetcode.com/problems/burst-balloons/description/"
    },
    "313": {
        "description": "Write a program to find the nth super ugly number.\r\n\r\n\r\n\r\n    Super ugly numbers are positive numbers whose all prime factors are in the given prime list\r\n    primes of size k. For example, [1, 2, 4, 7, 8, 13, 14, 16, 19, 26, 28, 32]\r\n is the sequence of the first 12 super ugly numbers given primes\r\n    = [2, 7, 13, 19] of size 4.\r\n\r\n\r\n\r\n    Note:\r\n    (1) 1 is a super ugly number for any given primes.\r\n    (2) The given numbers in primes are in ascending order.\r\n    (3) 0 < k ≤ 100, 0 < n ≤ 106, 0 < primes[i] < 1000.\r\n    (4) The nth super ugly number is guaranteed to fit in a 32-bit signed integer.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 313,
        "slug": "super-ugly-number",
        "tags": [
            "Math",
            "Heap"
        ],
        "title": "Super Ugly Number",
        "url": "https://leetcode.com/problems/super-ugly-number/description/"
    },
    "314": {
        "description": "Given a binary tree, return the _vertical order_ traversal of its nodes'\nvalues. (ie, from top to bottom, column by column).\n\nIf two nodes are in the same row and column, the order should be from **left\nto right**.\n\n**Examples:**\nGiven binary tree `[3,9,20,null,null,15,7]`,\n\n\n        3\r   / \\\r  9  20\r    /  \\\r   15   7\r\n\nreturn its vertical order traversal as:\n\n\n    [\r  [9],\r  [3,15],\r  [20],\r  [7]\r]\r\n\nGiven binary tree `[3,9,20,4,5,2,7]`,\n\n\n        _3_\r   /   \\\r  9    20\r / \\   / \\\r4   5 2   7\r\n\nreturn its vertical order traversal as:\n\n\n    [\r  [4],\r  [9],\r  [3,5,2],\r  [20],\r  [7]\r]",
        "level": 2,
        "paid_only": true,
        "question_id": 314,
        "slug": "binary-tree-vertical-order-traversal",
        "tags": [],
        "title": "Binary Tree Vertical Order Traversal",
        "url": "https://leetcode.com/problems/binary-tree-vertical-order-traversal/description/"
    },
    "315": {
        "description": "You are given an integer array nums and you have to return a new counts array.\r\nThe counts array has the property where counts[i] is \r\nthe number of smaller elements to the right of nums[i].\r\n\r\n\r\nExample:\r\n\r\n\r\nGiven nums = [5, 2, 6, 1]\r\n\r\nTo the right of 5 there are 2 smaller elements (2 and 1).\r\nTo the right of 2 there is only 1 smaller element (1).\r\nTo the right of 6 there is 1 smaller element (1).\r\nTo the right of 1 there is 0 smaller element.\r\n\r\n\r\n\r\nReturn the array [2, 1, 1, 0].",
        "level": 3,
        "paid_only": false,
        "question_id": 315,
        "slug": "count-of-smaller-numbers-after-self",
        "tags": [
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Binary Search Tree"
        ],
        "title": "Count of Smaller Numbers After Self",
        "url": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/description/"
    },
    "316": {
        "description": "Given a string which contains only lowercase letters, remove duplicate letters so that every letter appear once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.\r\n\r\n\r\n\r\nExample:\r\n\r\n\r\nGiven \"bcabc\"\r\nReturn \"abc\"\r\n\r\n\r\nGiven \"cbacdcbc\"\r\nReturn \"acdb\"\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 316,
        "slug": "remove-duplicate-letters",
        "tags": [
            "Stack",
            "Greedy"
        ],
        "title": "Remove Duplicate Letters",
        "url": "https://leetcode.com/problems/remove-duplicate-letters/description/"
    },
    "317": {
        "description": "You want to build a house on an _empty_ land which reaches all buildings in\nthe shortest amount of distance. You can only move up, down, left and right.\nYou are given a 2D grid of values 0, 1 or 2, where:\n\n  * Each 0 marks an empty land which you can pass by freely.\n  * Each 1 marks a building which you cannot pass through.\n  * Each 2 marks an obstacle which you cannot pass through.\n\nFor example, given three buildings at `(0,0)`, `(0,4)`, `(2,2)`, and an\nobstacle at `(0,2)`:\n\n\n\n    1 - 0 - 2 - 0 - 1\r|   |   |   |   |\r0 - 0 - 0 - 0 - 0\r|   |   |   |   |\r0 - 0 - 1 - 0 - 0\n\nThe point `(1,2)` is an ideal empty land to build a house, as the total travel\ndistance of 3+3+1=7 is minimal. So return 7.\n\nNote:\nThere will be at least one building. If it is not possible to build such house\naccording to the above rules, return -1.",
        "level": 3,
        "paid_only": true,
        "question_id": 317,
        "slug": "shortest-distance-from-all-buildings",
        "tags": [],
        "title": "Shortest Distance from All Buildings",
        "url": "https://leetcode.com/problems/shortest-distance-from-all-buildings/description/"
    },
    "318": {
        "description": "Given a string array words, find the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters.\r\n    You may assume that each word will contain only lower case letters.\r\n    If no such two words exist, return 0.\r\n\r\n\r\n\r\n    Example 1:\r\n\r\n\r\n    Given [\"abcw\", \"baz\", \"foo\", \"bar\", \"xtfn\", \"abcdef\"]\r\n    Return 16\r\n    The two words can be \"abcw\", \"xtfn\".\r\n\r\n\r\n    Example 2:\r\n\r\n\r\n    Given [\"a\", \"ab\", \"abc\", \"d\", \"cd\", \"bcd\", \"abcd\"]\r\n    Return 4\r\n    The two words can be \"ab\", \"cd\".\r\n\r\n\r\n    Example 3:\r\n\r\n\r\n    Given [\"a\", \"aa\", \"aaa\", \"aaaa\"]\r\n    Return 0\r\n    No such pair of words.    \r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 318,
        "slug": "maximum-product-of-word-lengths",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Maximum Product of Word Lengths",
        "url": "https://leetcode.com/problems/maximum-product-of-word-lengths/description/"
    },
    "319": {
        "description": "There are n bulbs that are initially off. You first turn on all the bulbs. Then, you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it's off or turning off if it's on). For the ith round, you toggle every i bulb. For the nth round, you only toggle the last bulb.\r\n\r\nFind how many bulbs are on after n rounds.\r\n\r\n\r\n\r\nExample:\r\n\r\nGiven n = 3. \r\nAt first, the three bulbs are [off, off, off].\r\nAfter first round, the three bulbs are [on, on, on].\r\nAfter second round, the three bulbs are [on, off, on].\r\nAfter third round, the three bulbs are [on, off, off]. \r\nSo you should return 1, because there is only one bulb is on.",
        "level": 2,
        "paid_only": false,
        "question_id": 319,
        "slug": "bulb-switcher",
        "tags": [
            "Math",
            "Brainteaser"
        ],
        "title": "Bulb Switcher",
        "url": "https://leetcode.com/problems/bulb-switcher/description/"
    },
    "320": {
        "description": "Write a function to generate the generalized abbreviations of a word.\n\nExample:\n\nGiven word = `\"word\"`, return the following list (order does not matter):\n\n\n\n    [\"word\", \"1ord\", \"w1rd\", \"wo1d\", \"wor1\", \"2rd\", \"w2d\", \"wo2\", \"1o1d\", \"1or1\", \"w1r1\", \"1o2\", \"2r1\", \"3d\", \"w3\", \"4\"]",
        "level": 2,
        "paid_only": true,
        "question_id": 320,
        "slug": "generalized-abbreviation",
        "tags": [],
        "title": "Generalized Abbreviation",
        "url": "https://leetcode.com/problems/generalized-abbreviation/description/"
    },
    "321": {
        "description": "Given two arrays of length m and n with digits 0-9 representing two numbers.\r\n    Create the maximum number of length k <= m + n from digits of the two. The relative order of the digits\r\n    from the same array must be preserved. Return an array of the k digits. You should try to optimize your time and space complexity.\r\n\r\n\r\n\r\n    Example 1:\r\n\r\n\r\n    nums1 = [3, 4, 6, 5]\r\n    nums2 = [9, 1, 2, 5, 8, 3]\r\n    k = 5\r\n    return [9, 8, 6, 5, 3]\r\n\r\n\r\n    Example 2:\r\n\r\n\r\n    nums1 = [6, 7]\r\n    nums2 = [6, 0, 4]\r\n    k = 5\r\n    return [6, 7, 6, 0, 4]\r\n\r\n\r\n    Example 3:\r\n\r\n\r\n    nums1 = [3, 9]\r\n    nums2 = [8, 9]\r\n    k = 3\r\n    return [9, 8, 9]\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 321,
        "slug": "create-maximum-number",
        "tags": [
            "Dynamic Programming",
            "Greedy"
        ],
        "title": "Create Maximum Number",
        "url": "https://leetcode.com/problems/create-maximum-number/description/"
    },
    "322": {
        "description": "You are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.\r\n\r\n\r\n\r\nExample 1:\r\ncoins = [1, 2, 5], amount = 11\r\nreturn 3 (11 = 5 + 5 + 1)\r\n\r\n\r\n\r\nExample 2:\r\ncoins = [2], amount = 3\r\nreturn -1.\r\n\r\n\r\n\r\nNote:\r\nYou may assume that you have an infinite number of each kind of coin.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 322,
        "slug": "coin-change",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Coin Change",
        "url": "https://leetcode.com/problems/coin-change/description/"
    },
    "323": {
        "description": "Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each\nedge is a pair of nodes), write a function to find the number of connected\ncomponents in an undirected graph.\n\nExample 1:\n\n     0          3\n\n     |          |\n\n     1 --- 2    4\n\nGiven n = 5 and edges = [[0, 1], [1, 2], [3, 4]], return 2.\n\nExample 2:\n\n     0           4\n\n     |           |\n\n     1 --- 2 --- 3\n\nGiven n = 5 and edges = [[0, 1], [1, 2], [2, 3], [3, 4]], return 1.\n\n Note:\n\nYou can assume that no duplicate edges will appear in edges. Since all edges\nare undirected, [0, 1] is the same as [1, 0] and thus will not appear together\nin edges.",
        "level": 2,
        "paid_only": true,
        "question_id": 323,
        "slug": "number-of-connected-components-in-an-undirected-graph",
        "tags": [],
        "title": "Number of Connected Components in an Undirected Graph",
        "url": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/description/"
    },
    "324": {
        "description": "Given an unsorted array nums, reorder it such that\r\n    nums[0] < nums[1] > nums[2] < nums[3]....\r\n\r\n\r\n\r\n    Example:\r\n    (1) Given nums = [1, 5, 1, 1, 6, 4], one possible answer is [1, 4, 1, 5, 1, 6]. \r\n    (2) Given nums = [1, 3, 2, 2, 3, 1], one possible answer is [2, 3, 1, 3, 1, 2].\r\n\r\n\r\n\r\n    Note:\r\n    You may assume all input has valid answer.\r\n\r\n\r\n\r\n    Follow Up:\r\n    Can you do it in O(n) time and/or in-place with O(1) extra space?\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 324,
        "slug": "wiggle-sort-ii",
        "tags": [
            "Sort"
        ],
        "title": "Wiggle Sort II",
        "url": "https://leetcode.com/problems/wiggle-sort-ii/description/"
    },
    "325": {
        "description": "Given an array _nums_ and a target value _k_, find the maximum length of a\nsubarray that sums to _k_. If there isn't one, return 0 instead.\n\n**Example 1:**\nGiven _nums_ = `[1, -1, 5, -2, 3]`, _k_ = `3`,\nreturn `4`. (because the subarray `[1, -1, 5, -2]` sums to 3 and is the\nlongest)\n\n**Example 2:**\nGiven _nums_ = `[-2, -1, 2, 1]`, _k_ = `1`,\nreturn `2`. (because the subarray `[-1, 2]` sums to 1 and is the longest)\n\n**Follow Up:**\nCan you do it in O(_n_) time?",
        "level": 2,
        "paid_only": true,
        "question_id": 325,
        "slug": "maximum-size-subarray-sum-equals-k",
        "tags": [],
        "title": "Maximum Size Subarray Sum Equals k",
        "url": "https://leetcode.com/problems/maximum-size-subarray-sum-equals-k/description/"
    },
    "326": {
        "description": "Given an integer, write a function to determine if it is a power of three.\r\n\r\n\r\n    Follow up:\r\n    Could you do it without using any loop / recursion?\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 326,
        "slug": "power-of-three",
        "tags": [
            "Math"
        ],
        "title": "Power of Three",
        "url": "https://leetcode.com/problems/power-of-three/description/"
    },
    "327": {
        "description": "Given an integer array nums, return the number of range sums that lie in [lower, upper] inclusive.\r\n\r\n    Range sum S(i, j) is defined as the sum of the elements in nums between indices i and \r\n    j (i ≤ j), inclusive.\r\n\r\n\r\n\r\n    Note:\r\n    A naive algorithm of O(n2) is trivial. You MUST do better than that.\r\n\r\n\r\n    Example:\r\n    Given nums = [-2, 5, -1], lower = -2, upper = 2,\r\n    Return 3.\r\n    The three ranges are : [0, 0], [2, 2], [0, 2] and their respective sums are: -2, -1, 2.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 327,
        "slug": "count-of-range-sum",
        "tags": [
            "Divide and Conquer",
            "Binary Search Tree"
        ],
        "title": "Count of Range Sum",
        "url": "https://leetcode.com/problems/count-of-range-sum/description/"
    },
    "328": {
        "description": "Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.\r\n\r\nYou should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.\r\n\r\n\r\nExample:\r\nGiven 1->2->3->4->5->NULL,\r\nreturn 1->3->5->2->4->NULL.\r\n\r\n\r\nNote:\r\nThe relative order inside both the even and odd groups should remain as it was in the input. \r\nThe first node is considered odd, the second node even and so on ...\r\n\r\n\r\nCredits:Special thanks to @DjangoUnchained for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 328,
        "slug": "odd-even-linked-list",
        "tags": [
            "Linked List"
        ],
        "title": "Odd Even Linked List",
        "url": "https://leetcode.com/problems/odd-even-linked-list/description/"
    },
    "329": {
        "description": "Given an integer matrix, find the length of the longest increasing path.\r\n\r\n\r\nFrom each cell, you can either move to four directions: left, right, up or down. You may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not allowed).\r\n\r\n\r\nExample 1:\r\n\r\nnums = [\r\n  [9,9,4],\r\n  [6,6,8],\r\n  [2,1,1]\r\n]\r\n\r\n\r\n\r\n\r\nReturn 4\r\n\r\nThe longest increasing path is [1, 2, 6, 9].\r\n\r\n\r\nExample 2:\r\n\r\nnums = [\r\n  [3,4,5],\r\n  [3,2,6],\r\n  [2,2,1]\r\n]\r\n\r\n\r\n\r\n\r\nReturn 4\r\n\r\nThe longest increasing path is [3, 4, 5, 6]. Moving diagonally is not allowed.\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 329,
        "slug": "longest-increasing-path-in-a-matrix",
        "tags": [
            "Depth-first Search",
            "Topological Sort",
            "Memoization"
        ],
        "title": "Longest Increasing Path in a Matrix",
        "url": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/description/"
    },
    "330": {
        "description": "Given a sorted positive integer array nums and an integer n, add/patch elements to the array such that any number in range [1, n] inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.\r\n\r\n\r\nExample 1:\r\nnums = [1, 3], n = 6\r\nReturn 1.\r\n\r\nCombinations of nums are [1], [3], [1,3], which form possible sums of: 1, 3, 4.\r\nNow if we add/patch 2 to nums, the combinations are: [1], [2], [3], [1,3], [2,3], [1,2,3].\r\nPossible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6].\r\nSo we only need 1 patch.\r\n\r\nExample 2:\r\nnums = [1, 5, 10], n = 20\r\nReturn 2.\r\nThe two patches can be [2, 4].\r\n\r\nExample 3:\r\nnums = [1, 2, 2], n = 5\r\nReturn 0.\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 330,
        "slug": "patching-array",
        "tags": [
            "Greedy"
        ],
        "title": "Patching Array",
        "url": "https://leetcode.com/problems/patching-array/description/"
    },
    "331": {
        "description": "One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as #.\r\n\r\n\r\n     _9_\r\n    /   \\\r\n   3     2\r\n  / \\   / \\\r\n 4   1  #  6\r\n/ \\ / \\   / \\\r\n# # # #   # #\r\n\r\n\r\nFor example, the above binary tree can be serialized to the string \"9,3,4,#,#,1,#,#,2,#,6,#,#\", where # represents a null node.\r\n\r\n\r\nGiven a string of comma separated values, verify whether it is a correct preorder traversal serialization of a binary tree. Find an algorithm without reconstructing the tree.\r\n\r\nEach comma separated value in the string must be either an integer or a character '#' representing null pointer.\r\n\r\nYou may assume that the input format is always valid, for example it could never contain two consecutive commas such as \"1,,3\".\r\n\r\nExample 1:\r\n\"9,3,4,#,#,1,#,#,2,#,6,#,#\"\r\nReturn true\r\nExample 2:\r\n\"1,#\"\r\nReturn false\r\nExample 3:\r\n\"9,#,#,1\"\r\nReturn false\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 331,
        "slug": "verify-preorder-serialization-of-a-binary-tree",
        "tags": [
            "Stack"
        ],
        "title": "Verify Preorder Serialization of a Binary Tree",
        "url": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/description/"
    },
    "332": {
        "description": "Given a list of airline tickets represented by pairs of departure and arrival airports [from, to], reconstruct the itinerary in order. All of the tickets belong to a man who departs from JFK. Thus, the itinerary must begin with JFK.\r\n\r\n\r\nNote:\r\n\r\nIf there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary [\"JFK\", \"LGA\"] has a smaller lexical order than [\"JFK\", \"LGB\"].\r\nAll airports are represented by three capital letters (IATA code).\r\nYou may assume all tickets form at least one valid itinerary.\r\n\r\n\r\n\r\n\r\n    Example 1:\r\n    tickets = [[\"MUC\", \"LHR\"], [\"JFK\", \"MUC\"], [\"SFO\", \"SJC\"], [\"LHR\", \"SFO\"]]\r\n    Return [\"JFK\", \"MUC\", \"LHR\", \"SFO\", \"SJC\"].\r\n\r\n\r\n    Example 2:\r\n    tickets = [[\"JFK\",\"SFO\"],[\"JFK\",\"ATL\"],[\"SFO\",\"ATL\"],[\"ATL\",\"JFK\"],[\"ATL\",\"SFO\"]]\r\n    Return [\"JFK\",\"ATL\",\"JFK\",\"SFO\",\"ATL\",\"SFO\"].\r\n    Another possible reconstruction is [\"JFK\",\"SFO\",\"ATL\",\"JFK\",\"ATL\",\"SFO\"]. But it is larger in lexical order.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 332,
        "slug": "reconstruct-itinerary",
        "tags": [
            "Depth-first Search",
            "Graph"
        ],
        "title": "Reconstruct Itinerary",
        "url": "https://leetcode.com/problems/reconstruct-itinerary/description/"
    },
    "333": {
        "description": "Given a binary tree, find the largest subtree which is a Binary Search Tree\n(BST), where largest means subtree with largest number of nodes in it.\n\nNote:\nA subtree must include all of its descendants.\nHere's an example:\n\n\n\n        10\r    / \\\r   5  15\r  / \\   \\ \r 1   8   7\r\n\nThe Largest BST Subtree in this case is the highlighted one.\nThe return value is the subtree's size, which is 3.\n\n\n\nHint:\n\n  1. You can recursively use algorithm similar to [98\\. Validate Binary Search Tree](https://leetcode.com/problems/validate-binary-search-tree/) at each node of the tree, which will result in O(nlogn) time complexity.\n\nFollow up:\nCan you figure out ways to solve it with O(n) time complexity?",
        "level": 2,
        "paid_only": true,
        "question_id": 333,
        "slug": "largest-bst-subtree",
        "tags": [],
        "title": "Largest BST Subtree",
        "url": "https://leetcode.com/problems/largest-bst-subtree/description/"
    },
    "334": {
        "description": "Given an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\r\n\r\n\r\nFormally the function should:\r\nReturn true if there exists i, j, k  \r\nsuch that arr[i] < arr[j] < arr[k] given 0 ≤ i < j < k ≤ n-1 \r\nelse return false.\r\n\r\n\r\n\r\nYour algorithm should run in O(n) time complexity and O(1) space complexity.\r\n\r\n\r\nExamples:\r\nGiven [1, 2, 3, 4, 5],\r\nreturn true.\r\n\r\n\r\nGiven [5, 4, 3, 2, 1],\r\nreturn false.\r\n\r\n\r\nCredits:Special thanks to @DjangoUnchained for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 334,
        "slug": "increasing-triplet-subsequence",
        "tags": [],
        "title": "Increasing Triplet Subsequence",
        "url": "https://leetcode.com/problems/increasing-triplet-subsequence/description/"
    },
    "335": {
        "description": "You are given an array x of n positive numbers. You start at point (0,0) and moves x[0] metres to the north, then x[1] metres to the west,\r\n    x[2] metres to the south,\r\n    x[3] metres to the east and so on. In other words, after each move your direction changes\r\n    counter-clockwise.\r\n\r\n\r\n    Write a one-pass algorithm with O(1) extra space to determine, if your path crosses itself, or not.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nGiven x = [2, 1, 1, 2],\r\n?????\r\n?   ?\r\n???????>\r\n    ?\r\n\r\nReturn true (self crossing)\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nGiven x = [1, 2, 3, 4],\r\n????????\r\n?      ?\r\n?\r\n?\r\n?????????????>\r\n\r\nReturn false (not self crossing)\r\n\r\n\r\n\r\n\r\nExample 3:\r\n\r\nGiven x = [1, 1, 1, 1],\r\n?????\r\n?   ?\r\n?????>\r\n\r\nReturn true (self crossing)\r\n\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 335,
        "slug": "self-crossing",
        "tags": [
            "Math"
        ],
        "title": "Self Crossing",
        "url": "https://leetcode.com/problems/self-crossing/description/"
    },
    "336": {
        "description": "Given a list of unique words, find all pairs of distinct indices (i, j) in the given list, so that the concatenation of the two words, i.e. words[i] + words[j] is a palindrome.\r\n\r\n\r\n\r\n    Example 1:\r\n    Given words = [\"bat\", \"tab\", \"cat\"]\r\n    Return [[0, 1], [1, 0]]\r\n    The palindromes are [\"battab\", \"tabbat\"]\r\n\r\n\r\n    Example 2:\r\n    Given words = [\"abcd\", \"dcba\", \"lls\", \"s\", \"sssll\"]\r\n    Return [[0, 1], [1, 0], [3, 2], [2, 4]]\r\n    The palindromes are [\"dcbaabcd\", \"abcddcba\", \"slls\", \"llssssll\"]\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 336,
        "slug": "palindrome-pairs",
        "tags": [
            "Hash Table",
            "String",
            "Trie"
        ],
        "title": "Palindrome Pairs",
        "url": "https://leetcode.com/problems/palindrome-pairs/description/"
    },
    "337": {
        "description": "The thief has found himself a new place for his thievery again. There is only one entrance to this area, called the \"root.\" Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that \"all houses in this place forms a binary tree\". It will automatically contact the police if two directly-linked houses were broken into on the same night.\r\n\r\n\r\n\r\nDetermine the maximum amount of money the thief can rob tonight without alerting the police.\r\n\r\n\r\nExample 1:\r\n\r\n     3\r\n    / \\\r\n   2   3\r\n    \\   \\ \r\n     3   1\r\n\r\nMaximum amount of money the thief can rob = 3 + 3 + 1 = 7.\r\n\r\n\r\nExample 2:\r\n\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\   \\ \r\n 1   3   1\r\n\r\nMaximum amount of money the thief can rob = 4 + 5 = 9.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 337,
        "slug": "house-robber-iii",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "House Robber III",
        "url": "https://leetcode.com/problems/house-robber-iii/description/"
    },
    "338": {
        "description": "Given a non negative integer number num. For every numbers i in the range 0 ≤ i ≤ num calculate the number of 1's in their binary representation and return them as an array.\r\n\r\n\r\nExample:\r\nFor num = 5 you should return [0,1,1,2,1,2].\r\n\r\n\r\nFollow up:\r\n\r\nIt is very easy to come up with a solution with run time O(n*sizeof(integer)). But can you do it in linear time O(n) /possibly in a single pass?\r\nSpace complexity should be O(n).\r\nCan you do it like a boss? Do it without using any builtin function like __builtin_popcount  in c++ or in any other language.\r\n\r\n\r\n\r\nCredits:Special thanks to @ syedee  for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 338,
        "slug": "counting-bits",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "title": "Counting Bits",
        "url": "https://leetcode.com/problems/counting-bits/description/"
    },
    "339": {
        "description": "Given a nested list of integers, return the sum of all integers in the list\nweighted by their depth.\n\nEach element is either an integer, or a list -- whose elements may also be\nintegers or other lists.\n\n**Example 1:**\nGiven the list `[[1,1],2,[1,1]]`, return **10**. (four 1's at depth 2, one 2\nat depth 1)\n\n**Example 2:**\nGiven the list `[1,[4,[6]]]`, return **27**. (one 1 at depth 1, one 4 at depth\n2, and one 6 at depth 3; 1 + 4*2 + 6*3 = 27)",
        "level": 1,
        "paid_only": true,
        "question_id": 339,
        "slug": "nested-list-weight-sum",
        "tags": [],
        "title": "Nested List Weight Sum",
        "url": "https://leetcode.com/problems/nested-list-weight-sum/description/"
    },
    "340": {
        "description": "Given a string, find the length of the longest substring T that contains at\nmost _k_ distinct characters.\n\nFor example, Given s = `\"eceba\"` and k = 2,\n\nT is \"ece\" which its length is 3.",
        "level": 3,
        "paid_only": true,
        "question_id": 340,
        "slug": "longest-substring-with-at-most-k-distinct-characters",
        "tags": [],
        "title": "Longest Substring with At Most K Distinct Characters",
        "url": "https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters/description/"
    },
    "341": {
        "description": "Given a nested list of integers, implement an iterator to flatten it.\r\n\r\nEach element is either an integer, or a list -- whose elements may also be integers or other lists.\r\n\r\nExample 1:\r\nGiven the list [[1,1],2,[1,1]],\r\n\r\nBy calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].\r\n\r\n\r\n\r\nExample 2:\r\nGiven the list [1,[4,[6]]],\r\n\r\nBy calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].",
        "level": 2,
        "paid_only": false,
        "question_id": 341,
        "slug": "flatten-nested-list-iterator",
        "tags": [
            "Stack",
            "Design"
        ],
        "title": "Flatten Nested List Iterator",
        "url": "https://leetcode.com/problems/flatten-nested-list-iterator/description/"
    },
    "342": {
        "description": "Given an integer (signed 32 bits), write a function to check whether it is a power of 4.\r\n\r\nExample:\r\nGiven num = 16, return true.\r\nGiven num = 5, return false.\r\n\r\n\r\nFollow up: Could you solve it without loops/recursion?\r\n\r\nCredits:Special thanks to @yukuairoy  for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 342,
        "slug": "power-of-four",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Power of Four",
        "url": "https://leetcode.com/problems/power-of-four/description/"
    },
    "343": {
        "description": "Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.\r\n\r\n\r\n\r\nFor example, given n = 2, return 1 (2 = 1 + 1); given n = 10, return 36 (10 = 3 + 3 + 4).\r\n\r\n\r\n\r\nNote: You may assume that n is not less than 2 and not larger than 58.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 343,
        "slug": "integer-break",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Integer Break",
        "url": "https://leetcode.com/problems/integer-break/description/"
    },
    "344": {
        "description": "Write a function that takes a string as input and returns the string reversed.\r\n\r\n\r\nExample:\r\nGiven s = \"hello\", return \"olleh\".",
        "level": 1,
        "paid_only": false,
        "question_id": 344,
        "slug": "reverse-string",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "title": "Reverse String",
        "url": "https://leetcode.com/problems/reverse-string/description/"
    },
    "345": {
        "description": "Write a function that takes a string as input and reverse only the vowels of a string.\r\n\r\n\r\nExample 1:\r\nGiven s = \"hello\", return \"holle\".\r\n\r\n\r\n\r\nExample 2:\r\nGiven s = \"leetcode\", return \"leotcede\".\r\n\r\n\r\n\r\nNote:\r\nThe vowels does not include the letter \"y\".",
        "level": 1,
        "paid_only": false,
        "question_id": 345,
        "slug": "reverse-vowels-of-a-string",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "title": "Reverse Vowels of a String",
        "url": "https://leetcode.com/problems/reverse-vowels-of-a-string/description/"
    },
    "346": {
        "description": "Given a stream of integers and a window size, calculate the moving average of\nall integers in the sliding window.\n\nFor example,\nMovingAverage m = new MovingAverage(3);\nm.next(1) = 1\nm.next(10) = (1 + 10) / 2\nm.next(3) = (1 + 10 + 3) / 3\nm.next(5) = (10 + 3 + 5) / 3",
        "level": 1,
        "paid_only": true,
        "question_id": 346,
        "slug": "moving-average-from-data-stream",
        "tags": [],
        "title": "Moving Average from Data Stream",
        "url": "https://leetcode.com/problems/moving-average-from-data-stream/description/"
    },
    "347": {
        "description": "Given a non-empty array of integers, return the k most frequent elements.\r\n\r\nFor example,\r\nGiven [1,1,1,2,2,3] and k = 2, return [1,2].\r\n\r\n\r\nNote: \r\n\r\nYou may assume k is always valid, 1 ≤ k ≤ number of unique elements.\r\nYour algorithm's time complexity must be better than O(n log n), where n is the array's size.",
        "level": 2,
        "paid_only": false,
        "question_id": 347,
        "slug": "top-k-frequent-elements",
        "tags": [
            "Hash Table",
            "Heap"
        ],
        "title": "Top K Frequent Elements",
        "url": "https://leetcode.com/problems/top-k-frequent-elements/description/"
    },
    "348": {
        "description": "Design a Tic-tac-toe game that is played between two players on a n x n grid.\n\nYou may assume the following rules:\n\nA move is guaranteed to be valid and is placed on an empty block.\nOnce a winning condition is reached, no more moves is allowed.\nA player who succeeds in placing n of their marks in a horizontal, vertical,\nor diagonal row wins the game.\nExample:\nGiven n = 3, assume that player 1 is \"X\" and player 2 is \"O\" in the board.\n\nTicTacToe toe = new TicTacToe(3);\n\ntoe.move(0, 0, 1); -> Returns 0 (no one wins)\n|X| | |\n| | | | // Player 1 makes a move at (0, 0).\n| | | |\n\ntoe.move(0, 2, 2); -> Returns 0 (no one wins)\n|X| |O|\n| | | | // Player 2 makes a move at (0, 2).\n| | | |\n\ntoe.move(2, 2, 1); -> Returns 0 (no one wins)\n|X| |O|\n| | | | // Player 1 makes a move at (2, 2).\n| | |X|\n\ntoe.move(1, 1, 2); -> Returns 0 (no one wins)\n|X| |O|\n| |O| | // Player 2 makes a move at (1, 1).\n| | |X|\n\ntoe.move(2, 0, 1); -> Returns 0 (no one wins)\n|X| |O|\n| |O| | // Player 1 makes a move at (2, 0).\n|X| |X|\n\ntoe.move(1, 0, 2); -> Returns 0 (no one wins)\n|X| |O|\n|O|O| | // Player 2 makes a move at (1, 0).\n|X| |X|\n\ntoe.move(2, 1, 1); -> Returns 1 (player 1 wins)\n|X| |O|\n|O|O| | // Player 1 makes a move at (2, 1).\n|X|X|X|\nFollow up:\nCould you do better than O(n2) per move() operation?\n\nHint:\n\nCould you trade extra space such that move() operation can be done in O(1)?\nYou need two arrays: int rows[n], int cols[n], plus two variables: diagonal,\nanti_diagonal.",
        "level": 2,
        "paid_only": true,
        "question_id": 348,
        "slug": "design-tic-tac-toe",
        "tags": [],
        "title": "Design Tic-Tac-Toe",
        "url": "https://leetcode.com/problems/design-tic-tac-toe/description/"
    },
    "349": {
        "description": "Given two arrays, write a function to compute their intersection.\r\n\r\n\r\nExample:\r\nGiven nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2].\r\n\r\n\r\nNote:\r\n\r\nEach element in the result must be unique.\r\nThe result can be in any order.",
        "level": 1,
        "paid_only": false,
        "question_id": 349,
        "slug": "intersection-of-two-arrays",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sort"
        ],
        "title": "Intersection of Two Arrays",
        "url": "https://leetcode.com/problems/intersection-of-two-arrays/description/"
    },
    "350": {
        "description": "Given two arrays, write a function to compute their intersection.\r\n\r\n\r\nExample:\r\nGiven nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2, 2].\r\n\r\n\r\nNote:\r\n\r\nEach element in the result should appear as many times as it shows in both arrays.\r\nThe result can be in any order.\r\n\r\n\r\n\r\nFollow up:\r\n\r\nWhat if the given array is already sorted? How would you optimize your algorithm?\r\nWhat if nums1's size is small compared to nums2's size? Which algorithm is better?\r\nWhat if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?",
        "level": 1,
        "paid_only": false,
        "question_id": 350,
        "slug": "intersection-of-two-arrays-ii",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sort"
        ],
        "title": "Intersection of Two Arrays II",
        "url": "https://leetcode.com/problems/intersection-of-two-arrays-ii/description/"
    },
    "351": {
        "description": "Given an Android 3x3 key lock screen and two integers m and n, where 1 ≤ m ≤ n\n≤ 9, count the total number of unlock patterns of the Android lock screen,\nwhich consist of minimum of m keys and maximum n keys.\n\nRules for a valid pattern:\n\n  1. Each pattern must connect at least m keys and at most n keys.\n  2. All the keys must be distinct.\n  3. If the line connecting two consecutive keys in the pattern passes through any other keys, the other keys must have previously selected in the pattern. No jumps through non selected key is allowed.\n  4. The order of keys used matters.\n\n\n\n![](https://discuss.leetcode.com/uploads/files/1461680355228-cptqh.png)\n\nExplanation:\n\n\n\n    | 1 | 2 | 3 |\r| 4 | 5 | 6 |\r| 7 | 8 | 9 |\n\n\n\nInvalid move: `4 - 1 - 3 - 6 `\nLine 1 - 3 passes through key 2 which had not been selected in the pattern.\n\nInvalid move: `4 - 1 - 9 - 2`\nLine 1 - 9 passes through key 5 which had not been selected in the pattern.\n\nValid move: `2 - 4 - 1 - 3 - 6`\nLine 1 - 3 is valid because it passes through key 2, which had been selected\nin the pattern\n\nValid move: `6 - 5 - 4 - 1 - 9 - 2`\nLine 1 - 9 is valid because it passes through key 5, which had been selected\nin the pattern.\n\nExample:\nGiven m = 1, n = 1, return 9.\n\nCredits:\nSpecial thanks to [@elmirap](https://discuss.leetcode.com/user/elmirap) for\nadding this problem and creating all test cases.",
        "level": 2,
        "paid_only": true,
        "question_id": 351,
        "slug": "android-unlock-patterns",
        "tags": [],
        "title": "Android Unlock Patterns",
        "url": "https://leetcode.com/problems/android-unlock-patterns/description/"
    },
    "352": {
        "description": "Given a data stream input of non-negative integers a1, a2, ..., an, ..., summarize the numbers seen so far as a list of disjoint intervals.\r\n\r\nFor example, suppose the integers from the data stream are 1, 3, 7, 2, 6, ..., then the summary will be:\r\n\r\n[1, 1]\r\n[1, 1], [3, 3]\r\n[1, 1], [3, 3], [7, 7]\r\n[1, 3], [7, 7]\r\n[1, 3], [6, 7]\r\n\r\n\r\nFollow up:\r\nWhat if there are lots of merges and the number of disjoint intervals are small compared to the data stream's size?\r\n\r\n\r\nCredits:Special thanks to @yunhong for adding this problem and creating most of the test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 352,
        "slug": "data-stream-as-disjoint-intervals",
        "tags": [
            "Binary Search Tree"
        ],
        "title": "Data Stream as Disjoint Intervals",
        "url": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/description/"
    },
    "353": {
        "description": "Design a [Snake game](https://en.wikipedia.org/wiki/Snake_%28video_game%29)\nthat is played on a device with screen size = _width_ x _height_. [Play the\ngame online](http://patorjk.com/games/snake/) if you are not familiar with the\ngame.\n\nThe snake is initially positioned at the top left corner (0,0) with length = 1\nunit.\n\nYou are given a list of food's positions in row-column order. When a snake\neats the food, its length and the game's score both increase by 1.\n\nEach food appears one by one on the screen. For example, the second food will\nnot appear until the first food was eaten by the snake.\n\nWhen a food does appear on the screen, it is guaranteed that it will not\nappear on a block occupied by the snake.\n\n**Example:**\n\n\n    Given width = 3, height = 2, and food = [[1,2],[0,1]].\r\rSnake snake = new Snake(width, height, food);\r\rInitially the snake appears at position (0,0) and the food at (1,2).\r\r|S| | |\r| | |F|\r\rsnake.move(\"R\"); -> Returns 0\r\r| |S| |\r| | |F|\r\rsnake.move(\"D\"); -> Returns 0\r\r| | | |\r| |S|F|\r\rsnake.move(\"R\"); -> Returns 1 (Snake eats the first food and right after that, the second food appears at (0,1) )\r\r| |F| |\r| |S|S|\r\rsnake.move(\"U\"); -> Returns 1\r\r| |F|S|\r| | |S|\r\rsnake.move(\"L\"); -> Returns 2 (Snake eats the second food)\r\r| |S|S|\r| | |S|\r\rsnake.move(\"U\"); -> Returns -1 (Game over because snake collides with border)\r\r\n\n**Credits:**\nSpecial thanks to [@elmirap](https://discuss.leetcode.com/user/elmirap) for\nadding this problem and creating all test cases.",
        "level": 2,
        "paid_only": true,
        "question_id": 353,
        "slug": "design-snake-game",
        "tags": [],
        "title": "Design Snake Game",
        "url": "https://leetcode.com/problems/design-snake-game/description/"
    },
    "354": {
        "description": "You have a number of envelopes with widths and heights given as a pair of integers (w, h). One envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope.\r\n\r\n\r\nWhat is the maximum number of envelopes can you Russian doll? (put one inside other)\r\n\r\n\r\nExample:\r\nGiven envelopes = [[5,4],[6,4],[6,7],[2,3]], the maximum number of envelopes you can Russian doll is 3 ([2,3] => [5,4] => [6,7]).",
        "level": 3,
        "paid_only": false,
        "question_id": 354,
        "slug": "russian-doll-envelopes",
        "tags": [
            "Binary Search",
            "Dynamic Programming"
        ],
        "title": "Russian Doll Envelopes",
        "url": "https://leetcode.com/problems/russian-doll-envelopes/description/"
    },
    "355": {
        "description": "Design a simplified version of Twitter where users can post tweets, follow/unfollow another user and is able to see the 10 most recent tweets in the user's news feed. Your design should support the following methods:\r\n\r\n\r\n\r\npostTweet(userId, tweetId): Compose a new tweet.\r\ngetNewsFeed(userId): Retrieve the 10 most recent tweet ids in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent.\r\nfollow(followerId, followeeId): Follower follows a followee.\r\nunfollow(followerId, followeeId): Follower unfollows a followee.\r\n\r\n\r\n\r\nExample:\r\n\r\nTwitter twitter = new Twitter();\r\n\r\n// User 1 posts a new tweet (id = 5).\r\ntwitter.postTweet(1, 5);\r\n\r\n// User 1's news feed should return a list with 1 tweet id -> [5].\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 follows user 2.\r\ntwitter.follow(1, 2);\r\n\r\n// User 2 posts a new tweet (id = 6).\r\ntwitter.postTweet(2, 6);\r\n\r\n// User 1's news feed should return a list with 2 tweet ids -> [6, 5].\r\n// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 unfollows user 2.\r\ntwitter.unfollow(1, 2);\r\n\r\n// User 1's news feed should return a list with 1 tweet id -> [5],\r\n// since user 1 is no longer following user 2.\r\ntwitter.getNewsFeed(1);",
        "level": 2,
        "paid_only": false,
        "question_id": 355,
        "slug": "design-twitter",
        "tags": [
            "Hash Table",
            "Heap",
            "Design"
        ],
        "title": "Design Twitter",
        "url": "https://leetcode.com/problems/design-twitter/description/"
    },
    "356": {
        "description": "Given n points on a 2D plane, find if there is such a line parallel to y-axis\nthat reflect the given set of points.\n\n**Example 1:**\nGiven _points_ = `[[1,1],[-1,1]]`, return `true`.\n\n**Example 2:**\nGiven _points_ = `[[1,1],[-1,-1]]`, return `false`.\n\n**Follow up:**\nCould you do better than O(_n_2)?\n\n**Hint:**\n\n  1. Find the smallest and largest x-value for all points.\n  2. If there is a line then it should be at y = (minX + maxX) / 2.\n  3. For each point, make sure that it has a reflected point in the opposite side.\n\n**Credits:**\nSpecial thanks to [@memoryless](https://discuss.leetcode.com/user/memoryless)\nfor adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": true,
        "question_id": 356,
        "slug": "line-reflection",
        "tags": [],
        "title": "Line Reflection",
        "url": "https://leetcode.com/problems/line-reflection/description/"
    },
    "357": {
        "description": "Given a non-negative integer n, count all numbers with unique digits, x, where 0 ≤ x < 10n.\r\n\r\n\r\n    Example:\r\nGiven n = 2, return 91. (The answer should be the total numbers in the range of 0 ≤ x < 100, excluding [11,22,33,44,55,66,77,88,99])\r\n\r\n\r\nCredits:Special thanks to @memoryless for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 357,
        "slug": "count-numbers-with-unique-digits",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Backtracking"
        ],
        "title": "Count Numbers with Unique Digits",
        "url": "https://leetcode.com/problems/count-numbers-with-unique-digits/description/"
    },
    "358": {
        "description": "Given a non-empty string **str** and an integer **k**, rearrange the string\nsuch that the same characters are at least distance **k** from each other.\n\nAll input strings are given in lowercase letters. If it is not possible to\nrearrange the string, return an empty string `\"\"`.\n\n**Example 1:**\n\n\n    str = \"aabbcc\", k = 3\r\rResult: \"abcabc\"\r\rThe same letters are at least distance 3 from each other.\r\n\n**Example 2:**\n\n\n    str = \"aaabc\", k = 3 \r\rAnswer: \"\"\r\rIt is not possible to rearrange the string.\r\n\n**Example 3:**\n\n\n    str = \"aaadbbcc\", k = 2\r\rAnswer: \"abacabcd\"\r\rAnother possible answer is: \"abcabcda\"\r\rThe same letters are at least distance 2 from each other.\r\n\n**Credits:**\nSpecial thanks to [@elmirap](https://discuss.leetcode.com/user/elmirap) for\nadding this problem and creating all test cases.",
        "level": 3,
        "paid_only": true,
        "question_id": 358,
        "slug": "rearrange-string-k-distance-apart",
        "tags": [],
        "title": "Rearrange String k Distance Apart",
        "url": "https://leetcode.com/problems/rearrange-string-k-distance-apart/description/"
    },
    "359": {
        "description": "Design a logger system that receive stream of messages along with its\ntimestamps, each message should be printed if and only if it is not printed in\nthe last 10 seconds.\n\nGiven a message and a timestamp (in seconds granularity), return true if the\nmessage should be printed in the given timestamp, otherwise returns false.\n\nIt is possible that several messages arrive roughly at the same time.\n\nExample:\n\nLogger logger = new Logger();\n\n// logging string \"foo\" at timestamp 1\nlogger.shouldPrintMessage(1, \"foo\"); returns true;\n\n// logging string \"bar\" at timestamp 2\nlogger.shouldPrintMessage(2,\"bar\"); returns true;\n\n// logging string \"foo\" at timestamp 3\nlogger.shouldPrintMessage(3,\"foo\"); returns false;\n\n// logging string \"bar\" at timestamp 8\nlogger.shouldPrintMessage(8,\"bar\"); returns false;\n\n// logging string \"foo\" at timestamp 10\nlogger.shouldPrintMessage(10,\"foo\"); returns false;\n\n// logging string \"foo\" at timestamp 11\nlogger.shouldPrintMessage(11,\"foo\"); returns true;\n\nCredits:\nSpecial thanks to @memoryless for adding this problem and creating all test\ncases.",
        "level": 1,
        "paid_only": true,
        "question_id": 359,
        "slug": "logger-rate-limiter",
        "tags": [],
        "title": "Logger Rate Limiter",
        "url": "https://leetcode.com/problems/logger-rate-limiter/description/"
    },
    "360": {
        "description": "Given a **sorted** array of integers _nums_ and integer values _a_, _b_ and\n_c_. Apply a function of the form f(_x_) = _ax_2 \\+ _bx_ \\+ _c_ to each\nelement _x_ in the array.\n\nThe returned array must be in **sorted order**.\n\nExpected time complexity: **O(_n_)**\n\n**Example:**\n\n\n    nums = [-4, -2, 2, 4], a = 1, b = 3, c = 5,\r\rResult: [3, 9, 15, 33]\r\rnums = [-4, -2, 2, 4], a = -1, b = 3, c = 5\r\rResult: [-23, -5, 1, 7]\r\n\n**Credits:**\nSpecial thanks to [@elmirap](https://discuss.leetcode.com/user/elmirap) for\nadding this problem and creating all test cases.",
        "level": 2,
        "paid_only": true,
        "question_id": 360,
        "slug": "sort-transformed-array",
        "tags": [],
        "title": "Sort Transformed Array",
        "url": "https://leetcode.com/problems/sort-transformed-array/description/"
    },
    "361": {
        "description": "Given a 2D grid, each cell is either a wall `'W'`, an enemy `'E'` or empty\n`'0'` (the number zero), return the maximum enemies you can kill using one\nbomb.\nThe bomb kills all the enemies in the same row and column from the planted\npoint until it hits the wall since the wall is too strong to be destroyed.\nNote that you can only put the bomb at an empty cell.\n\n**Example:**\n\n\n    For the given grid\r\r0 E 0 0\rE 0 W E\r0 E 0 0\r\rreturn 3. (Placing a bomb at (1,1) kills 3 enemies)\r\n\n**Credits:**\nSpecial thanks to [@memoryless](https://discuss.leetcode.com/user/memoryless)\nfor adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": true,
        "question_id": 361,
        "slug": "bomb-enemy",
        "tags": [],
        "title": "Bomb Enemy",
        "url": "https://leetcode.com/problems/bomb-enemy/description/"
    },
    "362": {
        "description": "Design a hit counter which counts the number of hits received in the past 5\nminutes.\n\nEach function accepts a timestamp parameter (in seconds granularity) and you\nmay assume that calls are being made to the system in chronological order (ie,\nthe timestamp is monotonically increasing). You may assume that the earliest\ntimestamp starts at 1.\n\nIt is possible that several hits arrive roughly at the same time.\n\n**Example:**\n\n\n    HitCounter counter = new HitCounter();\r\r// hit at timestamp 1.\rcounter.hit(1);\r\r// hit at timestamp 2.\rcounter.hit(2);\r\r// hit at timestamp 3.\rcounter.hit(3);\r\r// get hits at timestamp 4, should return 3.\rcounter.getHits(4);\r\r// hit at timestamp 300.\rcounter.hit(300);\r\r// get hits at timestamp 300, should return 4.\rcounter.getHits(300);\r\r// get hits at timestamp 301, should return 3.\rcounter.getHits(301); \r\n\n**Follow up:**\nWhat if the number of hits per second could be very large? Does your design\nscale?\n\n**Credits:**\nSpecial thanks to [@elmirap](https://discuss.leetcode.com/user/elmirap) for\nadding this problem and creating all test cases.",
        "level": 2,
        "paid_only": true,
        "question_id": 362,
        "slug": "design-hit-counter",
        "tags": [],
        "title": "Design Hit Counter",
        "url": "https://leetcode.com/problems/design-hit-counter/description/"
    },
    "363": {
        "description": "Given a non-empty 2D matrix matrix and an integer k, find the max sum of a rectangle in the matrix such that its sum is no larger than k.\r\n\r\nExample:\r\nGiven matrix = [\r\n  [1,  0, 1],\r\n  [0, -2, 3]\r\n]\r\nk = 2\r\n\r\n\r\n\r\nThe answer is 2. Because the sum of rectangle [[0, 1], [-2, 3]] is 2 and 2 is the max number no larger than k (k = 2).\r\n\r\nNote:\r\n\r\nThe rectangle inside the matrix must have an area > 0.\r\nWhat if the number of rows is much larger than the number of columns?\r\n\r\n\r\n\r\nCredits:Special thanks to @fujiaozhu for adding this problem and creating all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 363,
        "slug": "max-sum-of-rectangle-no-larger-than-k",
        "tags": [
            "Binary Search",
            "Dynamic Programming",
            "Queue"
        ],
        "title": "Max Sum of Rectangle No Larger Than K",
        "url": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/description/"
    },
    "364": {
        "description": "Given a nested list of integers, return the sum of all integers in the list\nweighted by their depth.\n\nEach element is either an integer, or a list -- whose elements may also be\nintegers or other lists.\n\nDifferent from the previous question where weight is increasing from root to\nleaf, now the weight is defined from bottom up. i.e., the leaf level integers\nhave weight 1, and the root level integers have the largest weight.\n\nExample 1:\nGiven the list [[1,1],2,[1,1]], return 8. (four 1's at depth 1, one 2 at depth\n2)\n\nExample 2:\nGiven the list [1,[4,[6]]], return 17. (one 1 at depth 3, one 4 at depth 2,\nand one 6 at depth 1; 1*3 + 4*2 + 6*1 = 17)",
        "level": 2,
        "paid_only": true,
        "question_id": 364,
        "slug": "nested-list-weight-sum-ii",
        "tags": [],
        "title": "Nested List Weight Sum II",
        "url": "https://leetcode.com/problems/nested-list-weight-sum-ii/description/"
    },
    "365": {
        "description": "You are given two jugs with capacities x and y litres. There is an infinite amount of water supply available.\r\nYou need to determine whether it is possible to measure exactly z litres using these two jugs.\r\n\r\nIf z liters of water is measurable, you must have z liters of water contained within one or both buckets by the end.\r\n\r\n\r\nOperations allowed:\r\n\r\nFill any of the jugs completely with water.\r\nEmpty any of the jugs.\r\nPour water from one jug into another till the other jug is completely full or the first jug itself is empty.\r\n\r\n\r\n\r\nExample 1: (From the famous \"Die Hard\" example)\r\n\r\nInput: x = 3, y = 5, z = 4\r\nOutput: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: x = 2, y = 6, z = 5\r\nOutput: False\r\n\r\n\r\n\r\nCredits:Special thanks to @vinod23 for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 365,
        "slug": "water-and-jug-problem",
        "tags": [
            "Math"
        ],
        "title": "Water and Jug Problem",
        "url": "https://leetcode.com/problems/water-and-jug-problem/description/"
    },
    "366": {
        "description": "Given a binary tree, find all leaves and then remove those leaves. Then repeat\nthe previous steps until the tree is empty.\n\n**Example:**\nGiven binary tree\n\n\n              1\r         / \\\r        2   3\r       / \\     \r      4   5    \r\n\nReturns `[4, 5, 3], [2], [1]`.\n\n**Explanation:**\n1\\. Remove the leaves `[4, 5, 3]` from the tree\n\n\n\n              1\r         / \r        2          \r\n\n2\\. Remove the leaf `[2]` from the tree\n\n\n\n              1          \r\n\n3\\. Remove the leaf `[1]` from the tree\n\n\n\n              []         \r\n\nReturns `[4, 5, 3], [2], [1]`.\n\n\n\n**Credits:**\nSpecial thanks to [@elmirap](https://discuss.leetcode.com/user/elmirap) for\nadding this problem and creating all test cases.",
        "level": 2,
        "paid_only": true,
        "question_id": 366,
        "slug": "find-leaves-of-binary-tree",
        "tags": [],
        "title": "Find Leaves of Binary Tree",
        "url": "https://leetcode.com/problems/find-leaves-of-binary-tree/description/"
    },
    "367": {
        "description": "Given a positive integer num, write a function which returns True if num is a perfect square else False.\r\n\r\n\r\nNote: Do not use any built-in library function such as sqrt.\r\n\r\n\r\nExample 1:\r\n\r\nInput: 16\r\nReturns: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 14\r\nReturns: False\r\n\r\n\r\n\r\nCredits:Special thanks to @elmirap for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 367,
        "slug": "valid-perfect-square",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "title": "Valid Perfect Square",
        "url": "https://leetcode.com/problems/valid-perfect-square/description/"
    },
    "368": {
        "description": "Given a set of distinct positive integers, find the largest subset such that every pair (Si, Sj) of elements in this subset satisfies: Si % Sj = 0 or Sj % Si = 0.\r\n\r\n\r\nIf there are multiple solutions, return any subset is fine.\r\n\r\n\r\nExample 1:\r\n\r\nnums: [1,2,3]\r\n\r\nResult: [1,2] (of course, [1,3] will also be ok)\r\n\r\n\r\n\r\nExample 2:\r\n\r\nnums: [1,2,4,8]\r\n\r\nResult: [1,2,4,8]\r\n\r\n\r\n\r\nCredits:Special thanks to @Stomach_ache for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 368,
        "slug": "largest-divisible-subset",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Largest Divisible Subset",
        "url": "https://leetcode.com/problems/largest-divisible-subset/description/"
    },
    "369": {
        "description": "Given a non-negative number represented as a singly linked list of digits,\nplus one to the number.\n\nThe digits are stored such that the most significant digit is at the head of\nthe list.\n\n**Example:**\n\n\n    Input:\r1->2->3\r\rOutput:\r1->2->4",
        "level": 2,
        "paid_only": true,
        "question_id": 369,
        "slug": "plus-one-linked-list",
        "tags": [],
        "title": "Plus One Linked List",
        "url": "https://leetcode.com/problems/plus-one-linked-list/description/"
    },
    "370": {
        "description": "Assume you have an array of length **_n_** initialized with all **0**'s and\nare given **_k_** update operations.\n\nEach operation is represented as a triplet: **[startIndex, endIndex, inc]**\nwhich increments each element of subarray **A[startIndex ... endIndex]**\n(startIndex and endIndex inclusive) with **inc**.\n\nReturn the modified array after all **_k_** operations were executed.\n\n**Example:**\n\n\n    Given:\r\r    length = 5,\r    updates = [\r        [1,  3,  2],\r        [2,  4,  3],\r        [0,  2, -2]\r    ]\r\rOutput:\r\r    [-2, 0, 3, 5, 3]\r\n\n**Explanation:**\n\n\n    Initial state:\r[ 0, 0, 0, 0, 0 ]\r\rAfter applying operation [1, 3, 2]:\r[ 0, 2, 2, 2, 0 ]\r\rAfter applying operation [2, 4, 3]:\r[ 0, 2, 5, 5, 3 ]\r\rAfter applying operation [0, 2, -2]:\r[-2, 0, 3, 5, 3 ]\r\n\n**Hint:**\n\n  1. Thinking of using advanced data structures? You are thinking it too complicated.\n  2. For each update operation, do you really need to update all elements between i and j?\n  3. Update only the first and end element is sufficient.\n  4. The optimal time complexity is O(**_k_** \\+ **_n_**) and uses O(1) extra space.\n\n**Credits:**\nSpecial thanks to [@vinod23](https://discuss.leetcode.com/user/vinod23) for\nadding this problem and creating all test cases.",
        "level": 2,
        "paid_only": true,
        "question_id": 370,
        "slug": "range-addition",
        "tags": [],
        "title": "Range Addition",
        "url": "https://leetcode.com/problems/range-addition/description/"
    },
    "371": {
        "description": "Calculate the sum of two integers a and b, but you are not allowed to use the operator + and -.\r\n\r\nExample:\r\nGiven a = 1 and b = 2, return 3.\r\n\r\n\r\nCredits:Special thanks to @fujiaozhu for adding this problem and creating all test cases.",
        "level": 1,
        "paid_only": false,
        "question_id": 371,
        "slug": "sum-of-two-integers",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Sum of Two Integers",
        "url": "https://leetcode.com/problems/sum-of-two-integers/description/"
    },
    "372": {
        "description": "Your task is to calculate ab mod 1337 where a is a positive integer and b is an extremely large positive integer given in the form of an array.\r\n\r\n\r\nExample1:\r\n\r\na = 2\r\nb = [3]\r\n\r\nResult: 8\r\n\r\n\r\n\r\nExample2:\r\n\r\na = 2\r\nb = [1,0]\r\n\r\nResult: 1024\r\n\r\n\r\n\r\nCredits:Special thanks to @Stomach_ache for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 372,
        "slug": "super-pow",
        "tags": [
            "Math"
        ],
        "title": "Super Pow",
        "url": "https://leetcode.com/problems/super-pow/description/"
    },
    "373": {
        "description": "You are given two integer arrays nums1 and nums2 sorted in ascending order and an integer k. \r\n\r\n\r\nDefine a pair (u,v) which consists of one element from the first array and one element from the second array.\r\n\r\nFind the k pairs (u1,v1),(u2,v2) ...(uk,vk) with the smallest sums.\r\n\r\n\r\nExample 1:\r\n\r\nGiven nums1 = [1,7,11], nums2 = [2,4,6],  k = 3\r\n\r\nReturn: [1,2],[1,4],[1,6]\r\n\r\nThe first 3 pairs are returned from the sequence:\r\n[1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\r\n\r\n\r\n\r\nExample 2:\r\n\r\nGiven nums1 = [1,1,2], nums2 = [1,2,3],  k = 2\r\n\r\nReturn: [1,1],[1,1]\r\n\r\nThe first 2 pairs are returned from the sequence:\r\n[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\r\n\r\n\r\n\r\nExample 3:\r\n\r\nGiven nums1 = [1,2], nums2 = [3],  k = 3 \r\n\r\nReturn: [1,3],[2,3]\r\n\r\nAll possible pairs are returned from the sequence:\r\n[1,3],[2,3]\r\n\r\n\r\n\r\nCredits:Special thanks to @elmirap and @StefanPochmann for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 373,
        "slug": "find-k-pairs-with-smallest-sums",
        "tags": [
            "Heap"
        ],
        "title": "Find K Pairs with Smallest Sums",
        "url": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/description/"
    },
    "374": {
        "description": "We are playing the Guess Game. The game is as follows: \r\n\r\nI pick a number from 1 to n. You have to guess which number I picked.\r\n\r\nEvery time you guess wrong, I'll tell you whether the number is higher or lower.\r\n\r\nYou call a pre-defined API guess(int num) which returns 3 possible results (-1, 1, or 0):\r\n\r\n-1 : My number is lower\r\n 1 : My number is higher\r\n 0 : Congrats! You got it!\r\n\r\n\r\nExample:\r\n\r\nn = 10, I pick 6.\r\n\r\nReturn 6.",
        "level": 1,
        "paid_only": false,
        "question_id": 374,
        "slug": "guess-number-higher-or-lower",
        "tags": [
            "Binary Search"
        ],
        "title": "Guess Number Higher or Lower",
        "url": "https://leetcode.com/problems/guess-number-higher-or-lower/description/"
    },
    "375": {
        "description": "We are playing the Guess Game. The game is as follows: \r\n\r\nI pick a number from 1 to n. You have to guess which number I picked.\r\n\r\nEvery time you guess wrong, I'll tell you whether the number I picked is higher or lower. \r\n\r\nHowever, when you guess a particular number x,  and you guess wrong, you pay $x. You win the game when you guess the number I picked.\r\n\r\n\r\nExample:\r\n\r\nn = 10, I pick 8.\r\n\r\nFirst round:  You guess 5, I tell you that it's higher. You pay $5.\r\nSecond round: You guess 7, I tell you that it's higher. You pay $7.\r\nThird round:  You guess 9, I tell you that it's lower. You pay $9.\r\n\r\nGame over. 8 is the number I picked.\r\n\r\nYou end up paying $5 + $7 + $9 = $21.\r\n\r\n\r\n\r\nGiven a particular n ≥ 1, find out how much money you need to have to guarantee a win.\r\n\r\nCredits:Special thanks to @agave and @StefanPochmann for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 375,
        "slug": "guess-number-higher-or-lower-ii",
        "tags": [
            "Dynamic Programming",
            "Minimax"
        ],
        "title": "Guess Number Higher or Lower II",
        "url": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/description/"
    },
    "376": {
        "description": "A sequence of numbers is called a wiggle sequence if the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with fewer than two elements is trivially a wiggle sequence. \r\n\r\nFor example, [1,7,4,9,2,5] is a wiggle sequence because the differences (6,-3,5,-7,3) are alternately positive and negative. In contrast, [1,4,7,2,5] and [1,7,4,5,5] are not wiggle sequences, the first because its first two differences are positive and the second because its last difference is zero.\r\n\r\nGiven a sequence of integers, return the length of the longest subsequence that is a wiggle sequence. A subsequence is obtained by deleting some number of elements (eventually, also zero) from the original sequence, leaving the remaining elements in their original order.\r\n\r\nExamples:\r\n\r\nInput: [1,7,4,9,2,5]\r\nOutput: 6\r\nThe entire sequence is a wiggle sequence.\r\n\r\nInput: [1,17,5,10,13,15,10,5,16,8]\r\nOutput: 7\r\nThere are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].\r\n\r\nInput: [1,2,3,4,5,6,7,8,9]\r\nOutput: 2\r\n\r\n\r\n\r\nFollow up:\r\nCan you do it in O(n) time?\r\n\r\n\r\nCredits:Special thanks to @agave and @StefanPochmann for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 376,
        "slug": "wiggle-subsequence",
        "tags": [
            "Dynamic Programming",
            "Greedy"
        ],
        "title": "Wiggle Subsequence",
        "url": "https://leetcode.com/problems/wiggle-subsequence/description/"
    },
    "377": {
        "description": "Given an integer array with all positive numbers and no duplicates, find the number of possible combinations that add up to a positive integer target.\r\n\r\nExample:\r\n\r\nnums = [1, 2, 3]\r\ntarget = 4\r\n\r\nThe possible combination ways are:\r\n(1, 1, 1, 1)\r\n(1, 1, 2)\r\n(1, 2, 1)\r\n(1, 3)\r\n(2, 1, 1)\r\n(2, 2)\r\n(3, 1)\r\n\r\nNote that different sequences are counted as different combinations.\r\n\r\nTherefore the output is 7.\r\n\r\n\r\n\r\nFollow up:\r\nWhat if negative numbers are allowed in the given array?\r\nHow does it change the problem?\r\nWhat limitation we need to add to the question to allow negative numbers? \r\n\r\nCredits:Special thanks to @pbrother for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 377,
        "slug": "combination-sum-iv",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Combination Sum IV",
        "url": "https://leetcode.com/problems/combination-sum-iv/description/"
    },
    "378": {
        "description": "Given a n x n matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.\r\n\r\n\r\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\r\n\r\n\r\nExample:\r\n\r\nmatrix = [\r\n   [ 1,  5,  9],\r\n   [10, 11, 13],\r\n   [12, 13, 15]\r\n],\r\nk = 8,\r\n\r\nreturn 13.\r\n\r\n\r\n\r\nNote: \r\nYou may assume k is always valid, 1 ≤ k ≤ n2.",
        "level": 2,
        "paid_only": false,
        "question_id": 378,
        "slug": "kth-smallest-element-in-a-sorted-matrix",
        "tags": [
            "Binary Search",
            "Heap"
        ],
        "title": "Kth Smallest Element in a Sorted Matrix",
        "url": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/description/"
    },
    "379": {
        "description": "Design a Phone Directory which supports the following operations:\n\n\n\n  1. `get`: Provide a number which is not assigned to anyone.\n  2. `check`: Check if a number is available or not.\n  3. `release`: Recycle or release a number.\n\n**Example:**\n\n\n    // Init a phone directory containing a total of 3 numbers: 0, 1, and 2.\rPhoneDirectory directory = new PhoneDirectory(3);\r\r// It can return any available phone number. Here we assume it returns 0.\rdirectory.get();\r\r// Assume it returns 1.\rdirectory.get();\r\r// The number 2 is available, so return true.\rdirectory.check(2);\r\r// It returns 2, the only number that is left.\rdirectory.get();\r\r// The number 2 is no longer available, so return false.\rdirectory.check(2);\r\r// Release number 2 back to the pool.\rdirectory.release(2);\r\r// Number 2 is available again, return true.\rdirectory.check(2);",
        "level": 2,
        "paid_only": true,
        "question_id": 379,
        "slug": "design-phone-directory",
        "tags": [],
        "title": "Design Phone Directory",
        "url": "https://leetcode.com/problems/design-phone-directory/description/"
    },
    "380": {
        "description": "Design a data structure that supports all following operations in average O(1) time.\r\n\r\n\r\n\r\ninsert(val): Inserts an item val to the set if not already present.\r\nremove(val): Removes an item val from the set if present.\r\ngetRandom: Returns a random element from current set of elements. Each element must have the same probability of being returned.\r\n\r\n\r\n\r\nExample:\r\n\r\n// Init an empty set.\r\nRandomizedSet randomSet = new RandomizedSet();\r\n\r\n// Inserts 1 to the set. Returns true as 1 was inserted successfully.\r\nrandomSet.insert(1);\r\n\r\n// Returns false as 2 does not exist in the set.\r\nrandomSet.remove(2);\r\n\r\n// Inserts 2 to the set, returns true. Set now contains [1,2].\r\nrandomSet.insert(2);\r\n\r\n// getRandom should return either 1 or 2 randomly.\r\nrandomSet.getRandom();\r\n\r\n// Removes 1 from the set, returns true. Set now contains [2].\r\nrandomSet.remove(1);\r\n\r\n// 2 was already in the set, so return false.\r\nrandomSet.insert(2);\r\n\r\n// Since 2 is the only number in the set, getRandom always return 2.\r\nrandomSet.getRandom();",
        "level": 2,
        "paid_only": false,
        "question_id": 380,
        "slug": "insert-delete-getrandom-o1",
        "tags": [
            "Array",
            "Hash Table",
            "Design"
        ],
        "title": "Insert Delete GetRandom O(1)",
        "url": "https://leetcode.com/problems/insert-delete-getrandom-o1/description/"
    },
    "381": {
        "description": "Design a data structure that supports all following operations in average O(1) time.\r\nNote: Duplicate elements are allowed.\r\n\r\n\r\ninsert(val): Inserts an item val to the collection.\r\nremove(val): Removes an item val from the collection if present.\r\ngetRandom: Returns a random element from current collection of elements. The probability of each element being returned is linearly related to the number of same value the collection contains.\r\n\r\n\r\n\r\nExample:\r\n\r\n// Init an empty collection.\r\nRandomizedCollection collection = new RandomizedCollection();\r\n\r\n// Inserts 1 to the collection. Returns true as the collection did not contain 1.\r\ncollection.insert(1);\r\n\r\n// Inserts another 1 to the collection. Returns false as the collection contained 1. Collection now contains [1,1].\r\ncollection.insert(1);\r\n\r\n// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].\r\ncollection.insert(2);\r\n\r\n// getRandom should return 1 with the probability 2/3, and returns 2 with the probability 1/3.\r\ncollection.getRandom();\r\n\r\n// Removes 1 from the collection, returns true. Collection now contains [1,2].\r\ncollection.remove(1);\r\n\r\n// getRandom should return 1 and 2 both equally likely.\r\ncollection.getRandom();",
        "level": 3,
        "paid_only": false,
        "question_id": 381,
        "slug": "insert-delete-getrandom-o1-duplicates-allowed",
        "tags": [
            "Array",
            "Hash Table",
            "Design"
        ],
        "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
        "url": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/description/"
    },
    "382": {
        "description": "Given a singly linked list, return a random node's value from the linked list. Each node must have the same probability of being chosen.\r\n\r\nFollow up:\r\nWhat if the linked list is extremely large and its length is unknown to you? Could you solve this efficiently without using extra space?\r\n\r\n\r\nExample:\r\n\r\n// Init a singly linked list [1,2,3].\r\nListNode head = new ListNode(1);\r\nhead.next = new ListNode(2);\r\nhead.next.next = new ListNode(3);\r\nSolution solution = new Solution(head);\r\n\r\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\r\nsolution.getRandom();",
        "level": 2,
        "paid_only": false,
        "question_id": 382,
        "slug": "linked-list-random-node",
        "tags": [
            "Reservoir Sampling"
        ],
        "title": "Linked List Random Node",
        "url": "https://leetcode.com/problems/linked-list-random-node/description/"
    },
    "383": {
        "description": "Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom \r\nnote can be constructed from the magazines ; otherwise, it will return false. \r\n\r\n\r\nEach letter in the magazine string can only be used once in your ransom note.\r\n\r\n\r\nNote:\r\nYou may assume that both strings contain only lowercase letters.\r\n\r\n\r\n\r\ncanConstruct(\"a\", \"b\") -> false\r\ncanConstruct(\"aa\", \"ab\") -> false\r\ncanConstruct(\"aa\", \"aab\") -> true",
        "level": 1,
        "paid_only": false,
        "question_id": 383,
        "slug": "ransom-note",
        "tags": [
            "String"
        ],
        "title": "Ransom Note",
        "url": "https://leetcode.com/problems/ransom-note/description/"
    },
    "384": {
        "description": "Shuffle a set of numbers without duplicates.\r\n\r\n\r\nExample:\r\n\r\n// Init an array with set 1, 2, and 3.\r\nint[] nums = {1,2,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.\r\nsolution.shuffle();\r\n\r\n// Resets the array back to its original configuration [1,2,3].\r\nsolution.reset();\r\n\r\n// Returns the random shuffling of array [1,2,3].\r\nsolution.shuffle();",
        "level": 2,
        "paid_only": false,
        "question_id": 384,
        "slug": "shuffle-an-array",
        "tags": [],
        "title": "Shuffle an Array",
        "url": "https://leetcode.com/problems/shuffle-an-array/description/"
    },
    "385": {
        "description": "Given a nested list of integers represented as a string, implement a parser to deserialize it.\r\n\r\nEach element is either an integer, or a list -- whose elements may also be integers or other lists.\r\n\r\nNote:\r\nYou may assume that the string is well-formed:\r\n\r\nString is non-empty.\r\nString does not contain white spaces.\r\nString contains only digits 0-9, [, - ,, ].\r\n\r\n\r\n\r\nExample 1:\r\n\r\nGiven s = \"324\",\r\n\r\nYou should return a NestedInteger object which contains a single integer 324.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nGiven s = \"[123,[456,[789]]]\",\r\n\r\nReturn a NestedInteger object containing a nested list with 2 elements:\r\n\r\n1. An integer containing value 123.\r\n2. A nested list containing two elements:\r\n    i.  An integer containing value 456.\r\n    ii. A nested list with one element:\r\n         a. An integer containing value 789.",
        "level": 2,
        "paid_only": false,
        "question_id": 385,
        "slug": "mini-parser",
        "tags": [
            "String",
            "Stack"
        ],
        "title": "Mini Parser",
        "url": "https://leetcode.com/problems/mini-parser/description/"
    },
    "386": {
        "description": "Given an integer n, return 1 - n in lexicographical order.\r\n\r\n\r\n\r\nFor example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].\r\n\r\n\r\n\r\nPlease optimize your algorithm to use less time and space. The input size may be as large as 5,000,000.",
        "level": 2,
        "paid_only": false,
        "question_id": 386,
        "slug": "lexicographical-numbers",
        "tags": [],
        "title": "Lexicographical Numbers",
        "url": "https://leetcode.com/problems/lexicographical-numbers/description/"
    },
    "387": {
        "description": "Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.\r\n\r\nExamples:\r\n\r\ns = \"leetcode\"\r\nreturn 0.\r\n\r\ns = \"loveleetcode\",\r\nreturn 2.\r\n\r\n\r\n\r\n\r\nNote: You may assume the string contain only lowercase letters.",
        "level": 1,
        "paid_only": false,
        "question_id": 387,
        "slug": "first-unique-character-in-a-string",
        "tags": [],
        "title": "First Unique Character in a String",
        "url": "https://leetcode.com/problems/first-unique-character-in-a-string/description/"
    },
    "388": {
        "description": "Suppose we abstract our file system by a string in the following manner:\r\n\r\nThe string \"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext\" represents:\r\n\r\ndir\r\n    subdir1\r\n    subdir2\r\n        file.ext\r\n\r\n\r\nThe directory dir contains an empty sub-directory subdir1 and a sub-directory subdir2 containing a file file.ext.\r\n\r\nThe string \"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\" represents:\r\n\r\ndir\r\n    subdir1\r\n        file1.ext\r\n        subsubdir1\r\n    subdir2\r\n        subsubdir2\r\n            file2.ext\r\n\r\n\r\nThe directory dir contains two sub-directories subdir1 and subdir2. subdir1 contains a file file1.ext and an empty second-level sub-directory subsubdir1. subdir2 contains a second-level sub-directory subsubdir2 containing a file file2.ext.\r\n\r\nWe are interested in finding the longest (number of characters) absolute path to a file within our file system. For example, in the second example above, the longest absolute path is \"dir/subdir2/subsubdir2/file2.ext\", and its length is 32 (not including the double quotes).\r\n\r\nGiven a string representing the file system in the above format, return the length of the longest absolute path to file in the abstracted file system. If there is no file in the system, return 0.\r\n\r\nNote:\r\n\r\nThe name of a file contains at least a . and an extension.\r\nThe name of a directory or sub-directory will not contain a ..\r\n\r\n\r\n\r\nTime complexity required: O(n) where n is the size of the input string.\r\n\r\nNotice that a/aa/aaa/file1.txt is not the longest file path, if there is another path aaaaaaaaaaaaaaaaaaaaa/sth.png.",
        "level": 2,
        "paid_only": false,
        "question_id": 388,
        "slug": "longest-absolute-file-path",
        "tags": [],
        "title": "Longest Absolute File Path",
        "url": "https://leetcode.com/problems/longest-absolute-file-path/description/"
    },
    "389": {
        "description": "Given two strings s and t which consist of only lowercase letters.\r\n\r\nString t is generated by random shuffling string s and then add one more letter at a random position.\r\n\r\nFind the letter that was added in t.\r\n\r\nExample:\r\n\r\nInput:\r\ns = \"abcd\"\r\nt = \"abcde\"\r\n\r\nOutput:\r\ne\r\n\r\nExplanation:\r\n'e' is the letter that was added.",
        "level": 1,
        "paid_only": false,
        "question_id": 389,
        "slug": "find-the-difference",
        "tags": [
            "Hash Table",
            "Bit Manipulation"
        ],
        "title": "Find the Difference",
        "url": "https://leetcode.com/problems/find-the-difference/description/"
    },
    "390": {
        "description": "There is a list of sorted integers from 1 to n. Starting from left to right, remove the first number and every other number afterward until you reach the end of the list.\r\n\r\nRepeat the previous step again, but this time from right to left, remove the right most number and every other number from the remaining numbers.\r\n\r\nWe keep repeating the steps again, alternating left to right and right to left, until a single number remains.\r\n\r\nFind the last number that remains starting with a list of length n.\r\n\r\nExample:\r\n\r\nInput:\r\nn = 9,\r\n1 2 3 4 5 6 7 8 9\r\n2 4 6 8\r\n2 6\r\n6\r\n\r\nOutput:\r\n6",
        "level": 2,
        "paid_only": false,
        "question_id": 390,
        "slug": "elimination-game",
        "tags": [],
        "title": "Elimination Game",
        "url": "https://leetcode.com/problems/elimination-game/description/"
    },
    "391": {
        "description": "Given N axis-aligned rectangles where N > 0, determine if they all together form an exact cover of a rectangular region.\r\n\r\n\r\n\r\nEach rectangle is represented as a bottom-left point and a top-right point. For example, a unit square is represented as [1,1,2,2]. (coordinate of bottom-left point is (1, 1) and top-right point is (2, 2)).\r\n\r\n\r\n\r\nExample 1:\r\n\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [3,2,4,4],\r\n  [1,3,2,4],\r\n  [2,3,3,4]\r\n]\r\n\r\nReturn true. All 5 rectangles together form an exact cover of a rectangular region.\r\n\r\n\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nrectangles = [\r\n  [1,1,2,3],\r\n  [1,3,2,4],\r\n  [3,1,4,2],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap between the two rectangular regions.\r\n\r\n\r\n\r\n\r\n\r\n\r\nExample 3:\r\n\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap in the top center.\r\n\r\n\r\n\r\n\r\n\r\n\r\nExample 4:\r\n\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [2,2,4,4]\r\n]\r\n\r\nReturn false. Because two of the rectangles overlap with each other.",
        "level": 3,
        "paid_only": false,
        "question_id": 391,
        "slug": "perfect-rectangle",
        "tags": [],
        "title": "Perfect Rectangle",
        "url": "https://leetcode.com/problems/perfect-rectangle/description/"
    },
    "392": {
        "description": "Given a string s and a string t, check if s is subsequence of t.\r\n\r\n\r\n\r\nYou may assume that there is only lower case English letters in both s and t. t is potentially a very long (length ~= 500,000) string, and s is a short string (<=100).\r\n\r\n\r\n\r\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ace\" is a subsequence of \"abcde\" while \"aec\" is not).\r\n\r\n\r\nExample 1:\r\ns = \"abc\", t = \"ahbgdc\"\r\n\r\n\r\nReturn true.\r\n\r\n\r\nExample 2:\r\ns = \"axc\", t = \"ahbgdc\"\r\n\r\n\r\nReturn false.\r\n\r\n\r\nFollow up:\r\nIf there are lots of incoming S, say S1, S2, ... , Sk where k >= 1B, and you want to check one by one to see if T has its subsequence. In this scenario, how would you change your code?\r\n\r\nCredits:Special thanks to @pbrother for adding this problem and creating all test cases.",
        "level": 2,
        "paid_only": false,
        "question_id": 392,
        "slug": "is-subsequence",
        "tags": [
            "Binary Search",
            "Dynamic Programming",
            "Greedy"
        ],
        "title": "Is Subsequence",
        "url": "https://leetcode.com/problems/is-subsequence/description/"
    },
    "393": {
        "description": "A character in UTF8 can be from 1 to 4 bytes long, subjected to the following rules:\r\n\r\nFor 1-byte character, the first bit is a 0, followed by its unicode code.\r\nFor n-bytes character, the first n-bits are all one's, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.\r\n\r\nThis is how the UTF-8 encoding would work:\r\n\r\n   Char. number range  |        UTF-8 octet sequence\r\n      (hexadecimal)    |              (binary)\r\n   --------------------+---------------------------------------------\r\n   0000 0000-0000 007F | 0xxxxxxx\r\n   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\r\n   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\r\n   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\r\n\r\n\r\nGiven an array of integers representing the data, return whether it is a valid utf-8 encoding.\r\n\r\n\r\nNote:\r\nThe input is an array of integers. Only the least significant 8 bits of each integer is used to store the data. This means each integer represents only 1 byte of data.\r\n\r\n\r\n\r\nExample 1:\r\n\r\ndata = [197, 130, 1], which represents the octet sequence: 11000101 10000010 00000001.\r\n\r\nReturn true.\r\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\ndata = [235, 140, 4], which represented the octet sequence: 11101011 10001100 00000100.\r\n\r\nReturn false.\r\nThe first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.\r\nThe next byte is a continuation byte which starts with 10 and that's correct.\r\nBut the second continuation byte does not start with 10, so it is invalid.",
        "level": 2,
        "paid_only": false,
        "question_id": 393,
        "slug": "utf-8-validation",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "UTF-8 Validation",
        "url": "https://leetcode.com/problems/utf-8-validation/description/"
    },
    "394": {
        "description": "Given an encoded string, return it's decoded string.\r\n\r\n\r\nThe encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer.\r\n\r\n\r\nYou may assume that the input string is always valid; No extra white spaces, square brackets are well-formed, etc.\r\n\r\nFurthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there won't be input like 3a or 2[4].\r\n\r\n\r\nExamples:\r\n\r\ns = \"3[a]2[bc]\", return \"aaabcbc\".\r\ns = \"3[a2[c]]\", return \"accaccacc\".\r\ns = \"2[abc]3[cd]ef\", return \"abcabccdcdcdef\".",
        "level": 2,
        "paid_only": false,
        "question_id": 394,
        "slug": "decode-string",
        "tags": [
            "Stack",
            "Depth-first Search"
        ],
        "title": "Decode String",
        "url": "https://leetcode.com/problems/decode-string/description/"
    },
    "395": {
        "description": "Find the length of the longest substring T of a given string (consists of lowercase letters only) such that every character in T appears no less than k times.\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\ns = \"aaabb\", k = 3\r\n\r\nOutput:\r\n3\r\n\r\nThe longest substring is \"aaa\", as 'a' is repeated 3 times.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\ns = \"ababbc\", k = 2\r\n\r\nOutput:\r\n5\r\n\r\nThe longest substring is \"ababb\", as 'a' is repeated 2 times and 'b' is repeated 3 times.",
        "level": 2,
        "paid_only": false,
        "question_id": 395,
        "slug": "longest-substring-with-at-least-k-repeating-characters",
        "tags": [],
        "title": "Longest Substring with At Least K Repeating Characters",
        "url": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/description/"
    },
    "396": {
        "description": "Given an array of integers A and let n to be its length.\r\n\r\n\r\n\r\nAssume Bk to be an array obtained by rotating the array A k positions clock-wise, we define a \"rotation function\" F on A as follow:\r\n\r\n\r\n\r\nF(k) = 0 * Bk[0] + 1 * Bk[1] + ... + (n-1) * Bk[n-1].\r\n\r\nCalculate the maximum value of F(0), F(1), ..., F(n-1). \r\n\r\n\r\nNote:\r\nn is guaranteed to be less than 105.\r\n\r\n\r\nExample:\r\n\r\nA = [4, 3, 2, 6]\r\n\r\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\r\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\r\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\r\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\r\n\r\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.",
        "level": 2,
        "paid_only": false,
        "question_id": 396,
        "slug": "rotate-function",
        "tags": [
            "Math"
        ],
        "title": "Rotate Function",
        "url": "https://leetcode.com/problems/rotate-function/description/"
    },
    "397": {
        "description": "Given a positive integer n and you can do operations as follow:\r\n\r\n\r\n\r\n\r\nIf n is even, replace n with n/2.\r\nIf n is odd, you can replace n with either n + 1 or n - 1.\r\n\r\n\r\n\r\n\r\nWhat is the minimum number of replacements needed for n to become 1?\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n8\r\n\r\nOutput:\r\n3\r\n\r\nExplanation:\r\n8 -> 4 -> 2 -> 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n7\r\n\r\nOutput:\r\n4\r\n\r\nExplanation:\r\n7 -> 8 -> 4 -> 2 -> 1\r\nor\r\n7 -> 6 -> 3 -> 2 -> 1",
        "level": 2,
        "paid_only": false,
        "question_id": 397,
        "slug": "integer-replacement",
        "tags": [
            "Math",
            "Bit Manipulation"
        ],
        "title": "Integer Replacement",
        "url": "https://leetcode.com/problems/integer-replacement/description/"
    },
    "398": {
        "description": "Given an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.\r\n\r\n\r\n\r\nNote:\r\nThe array size can be very large. Solution that uses too much extra space will not pass the judge.\r\n\r\n\r\nExample:\r\n\r\nint[] nums = new int[] {1,2,3,3,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\r\nsolution.pick(3);\r\n\r\n// pick(1) should return 0. Since in the array only nums[0] is equal to 1.\r\nsolution.pick(1);",
        "level": 2,
        "paid_only": false,
        "question_id": 398,
        "slug": "random-pick-index",
        "tags": [
            "Reservoir Sampling"
        ],
        "title": "Random Pick Index",
        "url": "https://leetcode.com/problems/random-pick-index/description/"
    },
    "399": {
        "description": "Equations are given in the format A / B = k, where  A and B are variables represented as strings, and k is a real number (floating point number). Given some queries, return the answers. If the answer does not exist, return -1.0.\r\n\r\nExample:\r\nGiven  a / b = 2.0, b / c = 3.0. queries are:  a / c = ?,  b / a = ?, a / e = ?,  a / a = ?, x / x = ? . return  [6.0, 0.5, -1.0, 1.0, -1.0 ].\r\n\r\n\r\nThe input is:  vector<pair<string, string>> equations, vector<double>& values, vector<pair<string, string>> queries , where equations.size() == values.size(), and the values are positive. This represents the equations. Return  vector<double>.\r\n\r\n\r\nAccording to the example above:\r\nequations = [ [\"a\", \"b\"], [\"b\", \"c\"] ],\r\nvalues = [2.0, 3.0],\r\nqueries = [ [\"a\", \"c\"], [\"b\", \"a\"], [\"a\", \"e\"], [\"a\", \"a\"], [\"x\", \"x\"] ]. \r\n\r\n\r\n\r\nThe input is always valid. You may assume that evaluating the queries will result in no division by zero and there is no contradiction.",
        "level": 2,
        "paid_only": false,
        "question_id": 399,
        "slug": "evaluate-division",
        "tags": [
            "Graph"
        ],
        "title": "Evaluate Division",
        "url": "https://leetcode.com/problems/evaluate-division/description/"
    },
    "400": {
        "description": "Find the nth digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... \r\n\r\nNote:\r\nn is positive and will fit within the range of a 32-bit signed integer (n < 231).\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n3\r\n\r\nOutput:\r\n3\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n11\r\n\r\nOutput:\r\n0\r\n\r\nExplanation:\r\nThe 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.",
        "level": 1,
        "paid_only": false,
        "question_id": 400,
        "slug": "nth-digit",
        "tags": [
            "Math"
        ],
        "title": "Nth Digit",
        "url": "https://leetcode.com/problems/nth-digit/description/"
    },
    "401": {
        "description": "A binary watch has 4 LEDs on the top which represent the hours (0-11), and the 6 LEDs on the bottom represent the minutes (0-59).\r\nEach LED represents a zero or one, with the least significant bit on the right.\r\n\r\nFor example, the above binary watch reads \"3:25\".\r\n\r\nGiven a non-negative integer n which represents the number of LEDs that are currently on, return all possible times the watch could represent.\r\n\r\nExample:\r\nInput: n = 1Return: [\"1:00\", \"2:00\", \"4:00\", \"8:00\", \"0:01\", \"0:02\", \"0:04\", \"0:08\", \"0:16\", \"0:32\"]\r\n\r\n\r\nNote:\r\n\r\nThe order of output does not matter.\r\nThe hour must not contain a leading zero, for example \"01:00\" is not valid, it should be \"1:00\".\r\nThe minute must be consist of two digits and may contain a leading zero, for example \"10:2\" is not valid, it should be \"10:02\".",
        "level": 1,
        "paid_only": false,
        "question_id": 401,
        "slug": "binary-watch",
        "tags": [
            "Backtracking",
            "Bit Manipulation"
        ],
        "title": "Binary Watch",
        "url": "https://leetcode.com/problems/binary-watch/description/"
    },
    "402": {
        "description": "Given a non-negative integer num represented as a string, remove k digits from the number so that the new number is the smallest possible.\r\n\r\n\r\nNote:\r\n\r\nThe length of num is less than 10002 and will be ≥ k.\r\nThe given num does not contain any leading zero.\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: num = \"1432219\", k = 3\r\nOutput: \"1219\"\r\nExplanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: num = \"10200\", k = 1\r\nOutput: \"200\"\r\nExplanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: num = \"10\", k = 2\r\nOutput: \"0\"\r\nExplanation: Remove all the digits from the number and it is left with nothing which is 0.",
        "level": 2,
        "paid_only": false,
        "question_id": 402,
        "slug": "remove-k-digits",
        "tags": [
            "Stack",
            "Greedy"
        ],
        "title": "Remove K Digits",
        "url": "https://leetcode.com/problems/remove-k-digits/description/"
    },
    "403": {
        "description": "A frog is crossing a river. The river is divided into x units and at each unit there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.\r\n\r\nGiven a list of stones' positions (in units) in sorted ascending order, determine if the frog is able to cross the river by landing on the last stone. Initially, the frog is on the first stone and assume the first jump must be 1 unit.\r\n\r\n\r\nIf the frog's last jump was k units, then its next jump must be either k - 1, k, or k + 1 units. Note that the frog can only jump in the forward direction.\r\n\r\nNote:\r\n\r\nThe number of stones is ≥ 2 and is < 1,100.\r\nEach stone's position will be a non-negative integer < 231.\r\nThe first stone's position is always 0.\r\n\r\n\r\n\r\nExample 1:\r\n\r\n[0,1,3,5,6,8,12,17]\r\n\r\nThere are a total of 8 stones.\r\nThe first stone at the 0th unit, second stone at the 1st unit,\r\nthird stone at the 3rd unit, and so on...\r\nThe last stone at the 17th unit.\r\n\r\nReturn true. The frog can jump to the last stone by jumping \r\n1 unit to the 2nd stone, then 2 units to the 3rd stone, then \r\n2 units to the 4th stone, then 3 units to the 6th stone, \r\n4 units to the 7th stone, and 5 units to the 8th stone.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n[0,1,2,3,4,8,9,11]\r\n\r\nReturn false. There is no way to jump to the last stone as \r\nthe gap between the 5th and 6th stone is too large.",
        "level": 3,
        "paid_only": false,
        "question_id": 403,
        "slug": "frog-jump",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Frog Jump",
        "url": "https://leetcode.com/problems/frog-jump/description/"
    },
    "404": {
        "description": "Find the sum of all left leaves in a given binary tree.\r\n\r\nExample:\r\n\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\nThere are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.",
        "level": 1,
        "paid_only": false,
        "question_id": 404,
        "slug": "sum-of-left-leaves",
        "tags": [
            "Tree"
        ],
        "title": "Sum of Left Leaves",
        "url": "https://leetcode.com/problems/sum-of-left-leaves/description/"
    },
    "405": {
        "description": "Given an integer, write an algorithm to convert it to hexadecimal. For negative integer, two’s complement method is used.\r\n\r\n\r\nNote:\r\n\r\nAll letters in hexadecimal (a-f) must be in lowercase.\r\nThe hexadecimal string must not contain extra leading 0s. If the number is zero, it is represented by a single zero character '0'; otherwise, the first character in the hexadecimal string will not be the zero character.\r\nThe given number is guaranteed to fit within the range of a 32-bit signed integer.\r\nYou must not use any method provided by the library which converts/formats the number to hex directly.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n26\r\n\r\nOutput:\r\n\"1a\"\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n-1\r\n\r\nOutput:\r\n\"ffffffff\"",
        "level": 1,
        "paid_only": false,
        "question_id": 405,
        "slug": "convert-a-number-to-hexadecimal",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Convert a Number to Hexadecimal",
        "url": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/description/"
    },
    "406": {
        "description": "Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.\r\n\r\n\r\nNote:\r\nThe number of people is less than 1,100.\r\n\r\n\r\n\r\n\r\nExample\r\n\r\nInput:\r\n[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\r\n\r\nOutput:\r\n[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]",
        "level": 2,
        "paid_only": false,
        "question_id": 406,
        "slug": "queue-reconstruction-by-height",
        "tags": [
            "Greedy"
        ],
        "title": "Queue Reconstruction by Height",
        "url": "https://leetcode.com/problems/queue-reconstruction-by-height/description/"
    },
    "407": {
        "description": "Given an m x n matrix of positive integers representing the height of each unit cell in a 2D elevation map, compute the volume of water it is able to trap after raining.\r\n\r\n\r\nNote:\r\nBoth m and n are less than 110. The height of each unit cell is greater than 0 and is less than 20,000.\r\n\r\n\r\nExample:\r\n\r\nGiven the following 3x6 height map:\r\n[\r\n  [1,4,3,1,3,2],\r\n  [3,2,1,3,2,4],\r\n  [2,3,3,2,3,1]\r\n]\r\n\r\nReturn 4.\r\n\r\n\r\n\r\n\r\n\r\nThe above image represents the elevation map [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]] before the rain.\r\n\r\n\r\n\r\n\r\nAfter the rain, water are trapped between the blocks. The total volume of water trapped is 4.",
        "level": 3,
        "paid_only": false,
        "question_id": 407,
        "slug": "trapping-rain-water-ii",
        "tags": [
            "Heap",
            "Breadth-first Search"
        ],
        "title": "Trapping Rain Water II",
        "url": "https://leetcode.com/problems/trapping-rain-water-ii/description/"
    },
    "408": {
        "description": "Given a non-empty string `s` and an abbreviation `abbr`, return whether the\nstring matches with the given abbreviation.\n\nA string such as `\"word\"` contains only the following valid abbreviations:\n\n\n\n    [\"word\", \"1ord\", \"w1rd\", \"wo1d\", \"wor1\", \"2rd\", \"w2d\", \"wo2\", \"1o1d\", \"1or1\", \"w1r1\", \"1o2\", \"2r1\", \"3d\", \"w3\", \"4\"]\r\n\nNotice that only the above abbreviations are valid abbreviations of the string\n`\"word\"`. Any other string is not a valid abbreviation of `\"word\"`.\n\nNote:\nAssume `s` contains only lowercase letters and `abbr` contains only lowercase\nletters and digits.\n\nExample 1:\n\n\n\n    Given s = \"internationalization\", abbr = \"i12iz4n\":\r\rReturn true.\r\n\n\n\nExample 2:\n\n\n\n    Given s = \"apple\", abbr = \"a2e\":\r\rReturn false.",
        "level": 1,
        "paid_only": true,
        "question_id": 408,
        "slug": "valid-word-abbreviation",
        "tags": [],
        "title": "Valid Word Abbreviation",
        "url": "https://leetcode.com/problems/valid-word-abbreviation/description/"
    },
    "409": {
        "description": "Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.\r\n\r\nThis is case sensitive, for example \"Aa\" is not considered a palindrome here.\r\n\r\nNote:\r\nAssume the length of given string will not exceed 1,010.\r\n\r\n\r\nExample: \r\n\r\nInput:\r\n\"abccccdd\"\r\n\r\nOutput:\r\n7\r\n\r\nExplanation:\r\nOne longest palindrome that can be built is \"dccaccd\", whose length is 7.",
        "level": 1,
        "paid_only": false,
        "question_id": 409,
        "slug": "longest-palindrome",
        "tags": [
            "Hash Table"
        ],
        "title": "Longest Palindrome",
        "url": "https://leetcode.com/problems/longest-palindrome/description/"
    },
    "410": {
        "description": "Given an array which consists of non-negative integers and an integer m, you can split the array into m non-empty continuous subarrays. Write an algorithm to minimize the largest sum among these m subarrays.\r\n\r\n\r\nNote:\r\nIf n is the length of array, assume the following constraints are satisfied:\r\n\r\n1 ≤ n ≤ 1000\r\n1 ≤ m ≤ min(50, n)\r\n\r\n\r\n\r\nExamples: \r\n\r\nInput:\r\nnums = [7,2,5,10,8]\r\nm = 2\r\n\r\nOutput:\r\n18\r\n\r\nExplanation:\r\nThere are four ways to split nums into two subarrays.\r\nThe best way is to split it into [7,2,5] and [10,8],\r\nwhere the largest sum among the two subarrays is only 18.",
        "level": 3,
        "paid_only": false,
        "question_id": 410,
        "slug": "split-array-largest-sum",
        "tags": [
            "Binary Search",
            "Dynamic Programming"
        ],
        "title": "Split Array Largest Sum",
        "url": "https://leetcode.com/problems/split-array-largest-sum/description/"
    },
    "411": {
        "description": "A string such as `\"word\"` contains the following abbreviations:\n\n\n\n    [\"word\", \"1ord\", \"w1rd\", \"wo1d\", \"wor1\", \"2rd\", \"w2d\", \"wo2\", \"1o1d\", \"1or1\", \"w1r1\", \"1o2\", \"2r1\", \"3d\", \"w3\", \"4\"]\r\n\nGiven a target string and a set of strings in a dictionary, find an\nabbreviation of this target string with the_smallest possible_ length such\nthat it does not conflict with abbreviations of the strings in the dictionary.\n\nEach number or letter in the abbreviation is considered length = 1. For\nexample, the abbreviation \"a32bc\" has length = 4.\n\nNote:\n\n  * In the case of multiple answers as shown in the second example below, you may return any one of them.\n  * Assume length of target string = m, and dictionary size = n. You may assume that m ≤ 21, n ≤ 1000, and log2(n) + m ≤ 20.\n\n\n\nExamples:\n\n\n\n    \"apple\", [\"blade\"] -> \"a4\" (because \"5\" or \"4e\" conflicts with \"blade\")\r\r\"apple\", [\"plain\", \"amber\", \"blade\"] -> \"1p3\" (other valid answers include \"ap3\", \"a3e\", \"2p2\", \"3le\", \"3l1\").",
        "level": 3,
        "paid_only": true,
        "question_id": 411,
        "slug": "minimum-unique-word-abbreviation",
        "tags": [],
        "title": "Minimum Unique Word Abbreviation",
        "url": "https://leetcode.com/problems/minimum-unique-word-abbreviation/description/"
    },
    "412": {
        "description": "Write a program that outputs the string representation of numbers from 1 to n.\r\n\r\nBut for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”.\r\n\r\nExample:\r\n\r\nn = 15,\r\n\r\nReturn:\r\n[\r\n    \"1\",\r\n    \"2\",\r\n    \"Fizz\",\r\n    \"4\",\r\n    \"Buzz\",\r\n    \"Fizz\",\r\n    \"7\",\r\n    \"8\",\r\n    \"Fizz\",\r\n    \"Buzz\",\r\n    \"11\",\r\n    \"Fizz\",\r\n    \"13\",\r\n    \"14\",\r\n    \"FizzBuzz\"\r\n]",
        "level": 1,
        "paid_only": false,
        "question_id": 412,
        "slug": "fizz-buzz",
        "tags": [],
        "title": "Fizz Buzz",
        "url": "https://leetcode.com/problems/fizz-buzz/description/"
    },
    "413": {
        "description": "A sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\r\n\r\nFor example, these are arithmetic sequence:\r\n1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9\r\n\r\nThe following sequence is not arithmetic. 1, 1, 2, 5, 7 \r\n\r\n\r\nA zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 <= P < Q < N.\r\n\r\nA slice (P, Q) of array A is called arithmetic if the sequence:\r\n    A[P], A[p + 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 < Q.\r\n\r\nThe function should return the number of arithmetic slices in the array A. \r\n\r\n\r\nExample:\r\n\r\nA = [1, 2, 3, 4]\r\n\r\nreturn: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.",
        "level": 2,
        "paid_only": false,
        "question_id": 413,
        "slug": "arithmetic-slices",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Arithmetic Slices",
        "url": "https://leetcode.com/problems/arithmetic-slices/description/"
    },
    "414": {
        "description": "Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).\r\n\r\nExample 1:\r\n\r\nInput: [3, 2, 1]\r\n\r\nOutput: 1\r\n\r\nExplanation: The third maximum is 1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1, 2]\r\n\r\nOutput: 2\r\n\r\nExplanation: The third maximum does not exist, so the maximum (2) is returned instead.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [2, 2, 3, 1]\r\n\r\nOutput: 1\r\n\r\nExplanation: Note that the third maximum here means the third maximum distinct number.\r\nBoth numbers with value 2 are both considered as second maximum.",
        "level": 1,
        "paid_only": false,
        "question_id": 414,
        "slug": "third-maximum-number",
        "tags": [
            "Array"
        ],
        "title": "Third Maximum Number",
        "url": "https://leetcode.com/problems/third-maximum-number/description/"
    },
    "415": {
        "description": "Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.\r\n\r\nNote:\r\n\r\nThe length of both num1 and num2 is < 5100.\r\nBoth num1 and num2 contains only digits 0-9.\r\nBoth num1 and num2 does not contain any leading zero.\r\nYou must not use any built-in BigInteger library or convert the inputs to integer directly.",
        "level": 1,
        "paid_only": false,
        "question_id": 415,
        "slug": "add-strings",
        "tags": [
            "Math"
        ],
        "title": "Add Strings",
        "url": "https://leetcode.com/problems/add-strings/description/"
    },
    "416": {
        "description": "Given a non-empty array containing only positive integers, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.\r\n\r\n\r\nNote:\r\n\r\nEach of the array element will not exceed 100.\r\nThe array size will not exceed 200.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1, 5, 11, 5]\r\n\r\nOutput: true\r\n\r\nExplanation: The array can be partitioned as [1, 5, 5] and [11].\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1, 2, 3, 5]\r\n\r\nOutput: false\r\n\r\nExplanation: The array cannot be partitioned into equal sum subsets.",
        "level": 2,
        "paid_only": false,
        "question_id": 416,
        "slug": "partition-equal-subset-sum",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Partition Equal Subset Sum",
        "url": "https://leetcode.com/problems/partition-equal-subset-sum/description/"
    },
    "417": {
        "description": "Given an m x n matrix of non-negative integers representing the height of each unit cell in a continent, the \"Pacific ocean\" touches the left and top edges of the matrix and the \"Atlantic ocean\" touches the right and bottom edges.\r\n\r\nWater can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower.\r\n\r\nFind the list of grid coordinates where water can flow to both the Pacific and Atlantic ocean.\r\n\r\nNote:\r\n\r\nThe order of returned grid coordinates does not matter.\r\nBoth m and n are less than 150.\r\n\r\n\r\nExample:\r\n\r\nGiven the following 5x5 matrix:\r\n\r\n  Pacific ~   ~   ~   ~   ~ \r\n       ~  1   2   2   3  (5) *\r\n       ~  3   2   3  (4) (4) *\r\n       ~  2   4  (5)  3   1  *\r\n       ~ (6) (7)  1   4   5  *\r\n       ~ (5)  1   1   2   4  *\r\n          *   *   *   *   * Atlantic\r\n\r\nReturn:\r\n\r\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (positions with parentheses in above matrix).",
        "level": 2,
        "paid_only": false,
        "question_id": 417,
        "slug": "pacific-atlantic-water-flow",
        "tags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Pacific Atlantic Water Flow",
        "url": "https://leetcode.com/problems/pacific-atlantic-water-flow/description/"
    },
    "418": {
        "description": "Given a `rows x cols` screen and a sentence represented by a list of words,\nfind how many times the given sentence can be fitted on the screen.\n\nNote:\n\n  1. A word cannot be split into two lines.\n  2. The order of words in the sentence must remain unchanged.\n  3. Two consecutive words in a line must be separated by a single space.\n  4. Total words in the sentence won't exceed 100.\n  5. Length of each word won't exceed 10.\n  6. 1 ≤ rows, cols ≤ 20,000.\n\n\n\nExample 1:\n\n\n\n    Input:\rrows = 2, cols = 8, sentence = [\"hello\", \"world\"]\r\rOutput: \r1\r\rExplanation:\rhello---\rworld---\r\rThe character '-' signifies an empty space on the screen.\r\n\n\n\nExample 2:\n\n\n\n    Input:\rrows = 3, cols = 6, sentence = [\"a\", \"bcd\", \"e\"]\r\rOutput: \r2\r\rExplanation:\ra-bcd- \re-a---\rbcd-e-\r\rThe character '-' signifies an empty space on the screen.\r\n\n\n\nExample 3:\n\n\n\n    Input:\rrows = 4, cols = 5, sentence = [\"I\", \"had\", \"apple\", \"pie\"]\r\rOutput: \r1\r\rExplanation:\rI-had\rapple\rpie-I\rhad--\r\rThe character '-' signifies an empty space on the screen.",
        "level": 2,
        "paid_only": true,
        "question_id": 418,
        "slug": "sentence-screen-fitting",
        "tags": [],
        "title": "Sentence Screen Fitting",
        "url": "https://leetcode.com/problems/sentence-screen-fitting/description/"
    },
    "419": {
        "description": "Given an 2D board, count how many battleships are in it. The battleships are represented with 'X's, empty slots are represented with '.'s. You may assume the following rules:\r\n\r\n\r\nYou receive a valid board, made of only battleships or empty slots.\r\nBattleships can only be placed horizontally or vertically. In other words, they can only be made of the shape 1xN (1 row, N columns) or Nx1 (N rows, 1 column), where N can be of any size.\r\nAt least one horizontal or vertical cell separates between two battleships - there are no adjacent battleships.\r\n\r\n\r\nExample:\r\nX..X\r\n...X\r\n...X\r\n\r\nIn the above board there are 2 battleships.\r\n\r\nInvalid Example:\r\n...X\r\nXXXX\r\n...X\r\n\r\nThis is an invalid board that you will not receive - as battleships will always have a cell separating between them.\r\n\r\nFollow up:Could you do it in one-pass, using only O(1) extra memory and without modifying the value of the board?",
        "level": 2,
        "paid_only": false,
        "question_id": 419,
        "slug": "battleships-in-a-board",
        "tags": [],
        "title": "Battleships in a Board",
        "url": "https://leetcode.com/problems/battleships-in-a-board/description/"
    },
    "420": {
        "description": "A password is considered strong if below conditions are all met:\r\n\r\n\r\n It has at least 6 characters and at most 20 characters. \r\n It must contain at least one lowercase letter, at least one uppercase letter, and at least one digit. \r\n It must NOT contain three repeating characters in a row (\"...aaa...\" is weak, but \"...aa...a...\" is strong, assuming other conditions are met). \r\n\r\n\r\nWrite a function strongPasswordChecker(s), that takes a string s as input, and return the MINIMUM change required to make s a strong password. If s is already strong, return 0.\r\n\r\nInsertion, deletion or replace of any one character are all considered as one change.",
        "level": 3,
        "paid_only": false,
        "question_id": 420,
        "slug": "strong-password-checker",
        "tags": [],
        "title": "Strong Password Checker",
        "url": "https://leetcode.com/problems/strong-password-checker/description/"
    },
    "421": {
        "description": "Given a non-empty array of numbers, a0, a1, a2, … , an-1, where 0 ≤ ai < 231.\r\n\r\nFind the maximum result of ai XOR aj, where 0 ≤ i, j < n.\r\n\r\nCould you do this in O(n) runtime?\r\n\r\nExample:\r\n\r\nInput: [3, 10, 5, 25, 2, 8]\r\n\r\nOutput: 28\r\n\r\nExplanation: The maximum result is 5 ^ 25 = 28.",
        "level": 2,
        "paid_only": false,
        "question_id": 421,
        "slug": "maximum-xor-of-two-numbers-in-an-array",
        "tags": [
            "Bit Manipulation",
            "Trie"
        ],
        "title": "Maximum XOR of Two Numbers in an Array",
        "url": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/description/"
    },
    "422": {
        "description": "Given a sequence of words, check whether it forms a valid word square.\n\nA sequence of words forms a valid word square if the _k_th row and column read\nthe exact same string, where 0 ≤_k_ < max(numRows, numColumns).\n\nNote:\n\n  1. The number of words given is at least 1 and does not exceed 500.\n  2. Word length will be at least 1 and does not exceed 500.\n  3. Each word contains only lowercase English alphabet `a-z`.\n\n\n\nExample 1:\n\n\n\n    Input:\r[\r  \"abcd\",\r  \"bnrt\",\r  \"crmy\",\r  \"dtye\"\r]\r\rOutput:\rtrue\r\rExplanation:\rThe first row and first column both read \"abcd\".\rThe second row and second column both read \"bnrt\".\rThe third row and third column both read \"crmy\".\rThe fourth row and fourth column both read \"dtye\".\r\rTherefore, it is a valid word square.\r\n\n\n\nExample 2:\n\n\n\n    Input:\r[\r  \"abcd\",\r  \"bnrt\",\r  \"crm\",\r  \"dt\"\r]\r\rOutput:\rtrue\r\rExplanation:\rThe first row and first column both read \"abcd\".\rThe second row and second column both read \"bnrt\".\rThe third row and third column both read \"crm\".\rThe fourth row and fourth column both read \"dt\".\r\rTherefore, it is a valid word square.\r\n\n\n\nExample 3:\n\n\n\n    Input:\r[\r  \"ball\",\r  \"area\",\r  \"read\",\r  \"lady\"\r]\r\rOutput:\rfalse\r\rExplanation:\rThe third row reads \"read\" while the third column reads \"lead\".\r\rTherefore, it is NOT a valid word square.",
        "level": 1,
        "paid_only": true,
        "question_id": 422,
        "slug": "valid-word-square",
        "tags": [],
        "title": "Valid Word Square",
        "url": "https://leetcode.com/problems/valid-word-square/description/"
    },
    "423": {
        "description": "Given a non-empty string containing an out-of-order English representation of digits 0-9, output the digits in ascending order.\r\n\r\nNote:\r\n\r\nInput contains only lowercase English letters.\r\nInput is guaranteed to be valid and can be transformed to its original digits. That means invalid inputs such as \"abc\" or \"zerone\" are not permitted.\r\nInput length is less than 50,000.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"owoztneoer\"\r\n\r\nOutput: \"012\"\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"fviefuro\"\r\n\r\nOutput: \"45\"",
        "level": 2,
        "paid_only": false,
        "question_id": 423,
        "slug": "reconstruct-original-digits-from-english",
        "tags": [
            "Math"
        ],
        "title": "Reconstruct Original Digits from English",
        "url": "https://leetcode.com/problems/reconstruct-original-digits-from-english/description/"
    },
    "424": {
        "description": "Given a string that consists of only uppercase English letters, you can replace any letter in the string with another letter at most k times. Find the length of a longest substring containing all repeating letters you can get after performing the above operations.\r\n\r\nNote:\r\nBoth the string's length and k will not exceed 104.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\ns = \"ABAB\", k = 2\r\n\r\nOutput:\r\n4\r\n\r\nExplanation:\r\nReplace the two 'A's with two 'B's or vice versa.\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\ns = \"AABABBA\", k = 1\r\n\r\nOutput:\r\n4\r\n\r\nExplanation:\r\nReplace the one 'A' in the middle with 'B' and form \"AABBBBA\".\r\nThe substring \"BBBB\" has the longest repeating letters, which is 4.",
        "level": 2,
        "paid_only": false,
        "question_id": 424,
        "slug": "longest-repeating-character-replacement",
        "tags": [],
        "title": "Longest Repeating Character Replacement",
        "url": "https://leetcode.com/problems/longest-repeating-character-replacement/description/"
    },
    "425": {
        "description": "Given a set of words (without duplicates), find all [word\nsquares](https://en.wikipedia.org/wiki/Word_square) you can build from them.\n\nA sequence of words forms a valid word square if the  _k_ th row and column\nread the exact same string, where 0 ≤  _k_  < max(numRows, numColumns).\n\nFor example, the word sequence `[\"ball\",\"area\",\"lead\",\"lady\"]` forms a word\nsquare because each word reads the same both horizontally and vertically.\n\n\n\n    b a l l\ra r e a\rl e a d\rl a d y\r\n\nNote:\n\n  1. There are at least 1 and at most 1000 words.\n  2. All words will have the exact same length.\n  3. Word length is at least 1 and at most 5.\n  4. Each word contains only lowercase English alphabet `a-z`.\n\n\n\nExample 1:\n\n\n\n    Input:\r[\"area\",\"lead\",\"wall\",\"lady\",\"ball\"]\r\rOutput:\r[\r  [ \"wall\",\r    \"area\",\r    \"lead\",\r    \"lady\"\r  ],\r  [ \"ball\",\r    \"area\",\r    \"lead\",\r    \"lady\"\r  ]\r]\r\rExplanation:\rThe output consists of two word squares. The order of output does not matter (just the order of words in each word square matters).\r\n\n\n\nExample 2:\n\n\n\n    Input:\r[\"abat\",\"baba\",\"atan\",\"atal\"]\r\rOutput:\r[\r  [ \"baba\",\r    \"abat\",\r    \"baba\",\r    \"atan\"\r  ],\r  [ \"baba\",\r    \"abat\",\r    \"baba\",\r    \"atal\"\r  ]\r]\r\rExplanation:\rThe output consists of two word squares. The order of output does not matter (just the order of words in each word square matters).",
        "level": 3,
        "paid_only": true,
        "question_id": 425,
        "slug": "word-squares",
        "tags": [],
        "title": "Word Squares",
        "url": "https://leetcode.com/problems/word-squares/description/"
    },
    "432": {
        "description": "Implement a data structure supporting the following operations:\r\n\r\n\r\n\r\nInc(Key) - Inserts a new key  with value 1. Or increments an existing key by 1. Key is guaranteed to be a non-empty string.\r\nDec(Key) - If Key's value is 1, remove it from the data structure. Otherwise decrements an existing key by 1. If the key does not exist, this function does nothing. Key is guaranteed to be a non-empty string.\r\nGetMaxKey() - Returns one of the keys with maximal value. If no element exists, return an empty string \"\".\r\nGetMinKey() - Returns one of the keys with minimal value. If no element exists, return an empty string \"\".\r\n\r\n\r\n\r\n\r\nChallenge: Perform all these in O(1) time complexity.",
        "level": 3,
        "paid_only": false,
        "question_id": 432,
        "slug": "all-oone-data-structure",
        "tags": [
            "Design"
        ],
        "title": "All O`one Data Structure",
        "url": "https://leetcode.com/problems/all-oone-data-structure/description/"
    },
    "433": {
        "description": "A gene string can be represented by an 8-character long string, with choices from \"A\", \"C\", \"G\", \"T\".\r\n\r\nSuppose we need to investigate about a mutation (mutation from \"start\" to \"end\"), where ONE mutation is defined as ONE single character changed in the gene string.\r\n\r\nFor example, \"AACCGGTT\" -> \"AACCGGTA\" is 1 mutation.\r\n\r\nAlso, there is a given gene \"bank\", which records all the valid gene mutations. A gene must be in the bank to make it a valid gene string.\r\n\r\nNow, given 3 things - start, end, bank, your task is to determine what is the minimum number of mutations needed to mutate from \"start\" to \"end\". If there is no such a mutation, return -1.\r\n\r\nNote:\r\n\r\nStarting point is assumed to be valid, so it might not be included in the bank.\r\nIf multiple mutations are needed, all mutations during in the sequence must be valid.\r\nYou may assume start and end string is not the same.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nstart: \"AACCGGTT\"\r\nend:   \"AACCGGTA\"\r\nbank: [\"AACCGGTA\"]\r\n\r\nreturn: 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\nstart: \"AACCGGTT\"\r\nend:   \"AAACGGTA\"\r\nbank: [\"AACCGGTA\", \"AACCGCTA\", \"AAACGGTA\"]\r\n\r\nreturn: 2\r\n\r\n\r\n\r\nExample 3:\r\n\r\nstart: \"AAAAACCC\"\r\nend:   \"AACCCCCC\"\r\nbank: [\"AAAACCCC\", \"AAACCCCC\", \"AACCCCCC\"]\r\n\r\nreturn: 3",
        "level": 2,
        "paid_only": false,
        "question_id": 433,
        "slug": "minimum-genetic-mutation",
        "tags": [],
        "title": "Minimum Genetic Mutation",
        "url": "https://leetcode.com/problems/minimum-genetic-mutation/description/"
    },
    "434": {
        "description": "Count the number of segments in a string, where a segment is defined to be a contiguous sequence of non-space characters.\r\n\r\nPlease note that the string does not contain any non-printable characters.\r\n\r\nExample:\r\n\r\nInput: \"Hello, my name is John\"\r\nOutput: 5",
        "level": 1,
        "paid_only": false,
        "question_id": 434,
        "slug": "number-of-segments-in-a-string",
        "tags": [
            "String"
        ],
        "title": "Number of Segments in a String",
        "url": "https://leetcode.com/problems/number-of-segments-in-a-string/description/"
    },
    "435": {
        "description": "Given a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\r\n\r\n\r\nNote:\r\n\r\nYou may assume the interval's end point is always bigger than its start point.\r\nIntervals like [1,2] and [2,3] have borders \"touching\" but they don't overlap each other.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [ [1,2], [2,3], [3,4], [1,3] ]\r\n\r\nOutput: 1\r\n\r\nExplanation: [1,3] can be removed and the rest of intervals are non-overlapping.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [ [1,2], [1,2], [1,2] ]\r\n\r\nOutput: 2\r\n\r\nExplanation: You need to remove two [1,2] to make the rest of intervals non-overlapping.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [ [1,2], [2,3] ]\r\n\r\nOutput: 0\r\n\r\nExplanation: You don't need to remove any of the intervals since they're already non-overlapping.",
        "level": 2,
        "paid_only": false,
        "question_id": 435,
        "slug": "non-overlapping-intervals",
        "tags": [
            "Greedy"
        ],
        "title": "Non-overlapping Intervals",
        "url": "https://leetcode.com/problems/non-overlapping-intervals/description/"
    },
    "436": {
        "description": "Given a set of intervals, for each of the interval i, check if there exists an interval j whose start point is bigger than or equal to the end point of the interval i, which can be called that j is on the \"right\" of i.\r\n\r\n\r\n\r\nFor any interval i, you need to store the minimum interval j's index, which means that the interval j has the minimum start point to build the \"right\" relationship for interval i. If the interval j doesn't exist, store -1 for the interval i. Finally, you need output the stored value of each interval as an array.\r\n\r\n\r\nNote:\r\n\r\nYou may assume the interval's end point is always bigger than its start point.\r\nYou may assume none of these intervals have the same start point.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [ [1,2] ]\r\n\r\nOutput: [-1]\r\n\r\nExplanation: There is only one interval in the collection, so it outputs -1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [ [3,4], [2,3], [1,2] ]\r\n\r\nOutput: [-1, 0, 1]\r\n\r\nExplanation: There is no satisfied \"right\" interval for [3,4].\r\nFor [2,3], the interval [3,4] has minimum-\"right\" start point;\r\nFor [1,2], the interval [2,3] has minimum-\"right\" start point.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [ [1,4], [2,3], [3,4] ]\r\n\r\nOutput: [-1, 2, -1]\r\n\r\nExplanation: There is no satisfied \"right\" interval for [1,4] and [3,4].\r\nFor [2,3], the interval [3,4] has minimum-\"right\" start point.",
        "level": 2,
        "paid_only": false,
        "question_id": 436,
        "slug": "find-right-interval",
        "tags": [
            "Binary Search"
        ],
        "title": "Find Right Interval",
        "url": "https://leetcode.com/problems/find-right-interval/description/"
    },
    "437": {
        "description": "You are given a binary tree in which each node contains an integer value.\r\n\r\nFind the number of paths that sum to a given value.\r\n\r\nThe path does not need to start or end at the root or a leaf, but it must go downwards\r\n(traveling only from parent nodes to child nodes).\r\n\r\nThe tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.\r\n\r\nExample:\r\n\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    5   -3\r\n   / \\    \\\r\n  3   2   11\r\n / \\   \\\r\n3  -2   1\r\n\r\nReturn 3. The paths that sum to 8 are:\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11",
        "level": 1,
        "paid_only": false,
        "question_id": 437,
        "slug": "path-sum-iii",
        "tags": [
            "Tree"
        ],
        "title": "Path Sum III",
        "url": "https://leetcode.com/problems/path-sum-iii/description/"
    },
    "438": {
        "description": "Given a string s and a non-empty string p, find all the start indices of p's anagrams in s.\r\n\r\nStrings consists of lowercase English letters only and the length of both strings s and p will not be larger than 20,100.\r\n\r\nThe order of output does not matter.\r\n\r\nExample 1:\r\n\r\nInput:\r\ns: \"cbaebabacd\" p: \"abc\"\r\n\r\nOutput:\r\n[0, 6]\r\n\r\nExplanation:\r\nThe substring with start index = 0 is \"cba\", which is an anagram of \"abc\".\r\nThe substring with start index = 6 is \"bac\", which is an anagram of \"abc\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\ns: \"abab\" p: \"ab\"\r\n\r\nOutput:\r\n[0, 1, 2]\r\n\r\nExplanation:\r\nThe substring with start index = 0 is \"ab\", which is an anagram of \"ab\".\r\nThe substring with start index = 1 is \"ba\", which is an anagram of \"ab\".\r\nThe substring with start index = 2 is \"ab\", which is an anagram of \"ab\".",
        "level": 1,
        "paid_only": false,
        "question_id": 438,
        "slug": "find-all-anagrams-in-a-string",
        "tags": [
            "Hash Table"
        ],
        "title": "Find All Anagrams in a String",
        "url": "https://leetcode.com/problems/find-all-anagrams-in-a-string/description/"
    },
    "439": {
        "description": "Given a string representing arbitrarily nested ternary expressions, calculate\nthe result of the expression. You can always assume that the given expression\nis valid and only consists of digits `0-9`, `?`, `:`, `T` and `F` (`T` and\n`F`represent True and False respectively).\n\nNote:\n\n  1. The length of the given string is ≤ 10000.\n  2. Each number will contain only one digit.\n  3. The conditional expressions group right-to-left (as usual in most languages).\n  4. The condition will always be either `T` or `F`. That is, the condition will never be a digit.\n  5. The result of the expression will always evaluate to either a digit `0-9`, `T` or `F`.\n\n\n\nExample 1:\n\n\n\n    Input: \"T?2:3\"\r\rOutput: \"2\"\r\rExplanation: If true, then result is 2; otherwise result is 3.\r\n\n\n\nExample 2:\n\n\n\n    Input: \"F?1:T?4:5\"\r\rOutput: \"4\"\r\rExplanation: The conditional expressions group right-to-left. Using parenthesis, it is read/evaluated as:\r\r             \"(F ? 1 : (T ? 4 : 5))\"                   \"(F ? 1 : (T ? 4 : 5))\"\r          -> \"(F ? 1 : 4)\"                 or       -> \"(T ? 4 : 5)\"\r          -> \"4\"                                    -> \"4\"\r\n\n\n\nExample 3:\n\n\n\n    Input: \"T?T?F:5:3\"\r\rOutput: \"F\"\r\rExplanation: The conditional expressions group right-to-left. Using parenthesis, it is read/evaluated as:\r\r             \"(T ? (T ? F : 5) : 3)\"                   \"(T ? (T ? F : 5) : 3)\"\r          -> \"(T ? F : 3)\"                 or       -> \"(T ? F : 5)\"\r          -> \"F\"                                    -> \"F\"",
        "level": 2,
        "paid_only": true,
        "question_id": 439,
        "slug": "ternary-expression-parser",
        "tags": [],
        "title": "Ternary Expression Parser",
        "url": "https://leetcode.com/problems/ternary-expression-parser/description/"
    },
    "440": {
        "description": "Given integers n and k, find the lexicographically k-th smallest integer in the range from 1 to n.\r\n\r\nNote: 1 ≤ k ≤ n ≤ 109.\r\n\r\nExample:\r\n\r\nInput:\r\nn: 13   k: 2\r\n\r\nOutput:\r\n10\r\n\r\nExplanation:\r\nThe lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.",
        "level": 3,
        "paid_only": false,
        "question_id": 440,
        "slug": "k-th-smallest-in-lexicographical-order",
        "tags": [],
        "title": "K-th Smallest in Lexicographical Order",
        "url": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order/description/"
    },
    "441": {
        "description": "You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.\r\n \r\nGiven n, find the total number of full staircase rows that can be formed.\r\n\r\nn is a non-negative integer and fits within the range of a 32-bit signed integer.\r\n\r\nExample 1:\r\n\r\nn = 5\r\n\r\nThe coins can form the following rows:\r\n¤\r\n¤ ¤\r\n¤ ¤\r\n\r\nBecause the 3rd row is incomplete, we return 2.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nn = 8\r\n\r\nThe coins can form the following rows:\r\n¤\r\n¤ ¤\r\n¤ ¤ ¤\r\n¤ ¤\r\n\r\nBecause the 4th row is incomplete, we return 3.",
        "level": 1,
        "paid_only": false,
        "question_id": 441,
        "slug": "arranging-coins",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "title": "Arranging Coins",
        "url": "https://leetcode.com/problems/arranging-coins/description/"
    },
    "442": {
        "description": "Given an array of integers, 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.\r\n\r\nFind all the elements that appear twice in this array.\r\n\r\nCould you do it without extra space and in O(n) runtime?\r\n\r\nExample:\r\n\r\nInput:\r\n[4,3,2,7,8,2,3,1]\r\n\r\nOutput:\r\n[2,3]",
        "level": 2,
        "paid_only": false,
        "question_id": 442,
        "slug": "find-all-duplicates-in-an-array",
        "tags": [
            "Array"
        ],
        "title": "Find All Duplicates in an Array",
        "url": "https://leetcode.com/problems/find-all-duplicates-in-an-array/description/"
    },
    "443": {
        "description": "Given an array of characters, compress it in-place.\r\n\r\nThe length after compression must always be smaller than or equal to the original array.\r\n\r\nEvery element of the array should be a character (not int) of length 1.\r\n \r\nAfter you are done modifying the input array in-place, return the new length of the array.\r\n\r\n\r\n\r\nFollow up:\r\nCould you solve it using only O(1) extra space?\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n[\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\r\n\r\nOutput:\r\nReturn 6, and the first 6 characters of the input array should be: [\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\r\n\r\nExplanation:\r\n\"aa\" is replaced by \"a2\". \"bb\" is replaced by \"b2\". \"ccc\" is replaced by \"c3\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n[\"a\"]\r\n\r\nOutput:\r\nReturn 1, and the first 1 characters of the input array should be: [\"a\"]\r\n\r\nExplanation:\r\nNothing is replaced.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput:\r\n[\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\r\n\r\nOutput:\r\nReturn 4, and the first 4 characters of the input array should be: [\"a\",\"b\",\"1\",\"2\"].\r\n\r\nExplanation:\r\nSince the character \"a\" does not repeat, it is not compressed. \"bbbbbbbbbbbb\" is replaced by \"b12\".\r\nNotice each digit has it's own entry in the array.\r\n\r\n\r\n\r\nNote:\r\n\r\nAll characters have an ASCII value in [35, 126].\r\n1 <= len(chars) <= 1000.",
        "level": 1,
        "paid_only": false,
        "question_id": 443,
        "slug": "string-compression",
        "tags": [
            "String"
        ],
        "title": "String Compression",
        "url": "https://leetcode.com/problems/string-compression/description/"
    },
    "444": {
        "description": "Check whether the original sequence `org` can be uniquely reconstructed from\nthe sequences in `seqs`. The `org` sequence is a permutation of the integers\nfrom 1 to n, with 1 ≤ n ≤ 104. Reconstruction means building a shortest common\nsupersequence of the sequences in `seqs` (i.e., a shortest sequence so that\nall sequences in `seqs` are subsequences of it). Determine whether there is\nonly one sequence that can be reconstructed from `seqs` and it is the `org`\nsequence.\n\n**Example 1:**\n\n\n    **Input:**\rorg: [1,2,3], seqs: [[1,2],[1,3]]\r\r**Output:**\rfalse\r\r**Explanation:**\r[1,2,3] is not the only one sequence that can be reconstructed, because [1,3,2] is also a valid sequence that can be reconstructed.\r\n\n**Example 2:**\n\n\n    **Input:**\rorg: [1,2,3], seqs: [[1,2]]\r\r**Output:**\rfalse\r\r**Explanation:**\rThe reconstructed sequence can only be [1,2].\r\n\n**Example 3:**\n\n\n    **Input:**\rorg: [1,2,3], seqs: [[1,2],[1,3],[2,3]]\r\r**Output:**\rtrue\r\r**Explanation:**\rThe sequences [1,2], [1,3], and [2,3] can uniquely reconstruct the original sequence [1,2,3].\r\n\n**Example 4:**\n\n\n    **Input:**\rorg: [4,1,5,2,6,3], seqs: [[5,2,6,3],[4,1,5,2]]\r\r**Output:**\rtrue",
        "level": 2,
        "paid_only": true,
        "question_id": 444,
        "slug": "sequence-reconstruction",
        "tags": [],
        "title": "Sequence Reconstruction",
        "url": "https://leetcode.com/problems/sequence-reconstruction/description/"
    },
    "445": {
        "description": "You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\r\n\r\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\r\n\r\nFollow up:\r\nWhat if you cannot modify the input lists? In other words, reversing the lists is not allowed.\r\n\r\n\r\n\r\nExample:\r\n\r\nInput: (7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)\r\nOutput: 7 -> 8 -> 0 -> 7",
        "level": 2,
        "paid_only": false,
        "question_id": 445,
        "slug": "add-two-numbers-ii",
        "tags": [
            "Linked List"
        ],
        "title": "Add Two Numbers II",
        "url": "https://leetcode.com/problems/add-two-numbers-ii/description/"
    },
    "446": {
        "description": "A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\r\n\r\nFor example, these are arithmetic sequences:\r\n1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9\r\n\r\nThe following sequence is not arithmetic. 1, 1, 2, 5, 7 \r\n\r\n\r\nA zero-indexed array A consisting of N numbers is given. A subsequence slice of that array is any sequence of integers (P0, P1, ..., Pk) such that 0 ≤ P0 < P1 < ... < Pk < N.\r\n\r\nA subsequence slice (P0, P1, ..., Pk) of array A is called arithmetic if the sequence A[P0], A[P1], ..., A[Pk-1], A[Pk] is arithmetic. In particular, this means that k ≥ 2.\r\n\r\nThe function should return the number of arithmetic subsequence slices in the array A. \r\n\r\nThe input contains N integers. Every integer is in the range of -231 and 231-1 and 0 ≤ N ≤ 1000. The output is guaranteed to be less than 231-1.\r\n\r\n\r\nExample:\r\n\r\nInput: [2, 4, 6, 8, 10]\r\n\r\nOutput: 7\r\n\r\nExplanation:\r\nAll arithmetic subsequence slices are:\r\n[2,4,6]\r\n[4,6,8]\r\n[6,8,10]\r\n[2,4,6,8]\r\n[4,6,8,10]\r\n[2,4,6,8,10]\r\n[2,6,10]",
        "level": 3,
        "paid_only": false,
        "question_id": 446,
        "slug": "arithmetic-slices-ii-subsequence",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Arithmetic Slices II - Subsequence",
        "url": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/description/"
    },
    "447": {
        "description": "Given n points in the plane that are all pairwise distinct, a \"boomerang\" is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters).\r\n\r\nFind the number of boomerangs. You may assume that n will be at most 500 and coordinates of points are all in the range [-10000, 10000] (inclusive).\r\n\r\nExample:\r\n\r\nInput:\r\n[[0,0],[1,0],[2,0]]\r\n\r\nOutput:\r\n2\r\n\r\nExplanation:\r\nThe two boomerangs are [[1,0],[0,0],[2,0]] and [[1,0],[2,0],[0,0]]",
        "level": 1,
        "paid_only": false,
        "question_id": 447,
        "slug": "number-of-boomerangs",
        "tags": [
            "Hash Table"
        ],
        "title": "Number of Boomerangs",
        "url": "https://leetcode.com/problems/number-of-boomerangs/description/"
    },
    "448": {
        "description": "Given an array of integers where 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.\r\n\r\nFind all the elements of [1, n] inclusive that do not appear in this array.\r\n\r\nCould you do it without extra space and in O(n) runtime? You may assume the returned list does not count as extra space.\r\n\r\nExample:\r\n\r\nInput:\r\n[4,3,2,7,8,2,3,1]\r\n\r\nOutput:\r\n[5,6]",
        "level": 1,
        "paid_only": false,
        "question_id": 448,
        "slug": "find-all-numbers-disappeared-in-an-array",
        "tags": [
            "Array"
        ],
        "title": "Find All Numbers Disappeared in an Array",
        "url": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/description/"
    },
    "449": {
        "description": "Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. \r\n\r\nDesign an algorithm to serialize and deserialize a binary search tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary search tree can be serialized to a string and this string can be deserialized to the original tree structure.\r\n\r\n\r\nThe encoded string should be as compact as possible.\r\n\r\n\r\n\r\nNote: Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.",
        "level": 2,
        "paid_only": false,
        "question_id": 449,
        "slug": "serialize-and-deserialize-bst",
        "tags": [
            "Tree"
        ],
        "title": "Serialize and Deserialize BST",
        "url": "https://leetcode.com/problems/serialize-and-deserialize-bst/description/"
    },
    "450": {
        "description": "Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.\r\n\r\nBasically, the deletion can be divided into two stages:\r\n\r\nSearch for a node to remove.\r\nIf the node is found, delete the node.\r\n\r\n\r\n\r\nNote: Time complexity should be O(height of tree).\r\n\r\nExample:\r\n\r\nroot = [5,3,6,2,4,null,7]\r\nkey = 3\r\n\r\n    5\r\n   / \\\r\n  3   6\r\n / \\   \\\r\n2   4   7\r\n\r\nGiven key to delete is 3. So we find the node with value 3 and delete it.\r\n\r\nOne valid answer is [5,4,6,2,null,null,7], shown in the following BST.\r\n\r\n    5\r\n   / \\\r\n  4   6\r\n /     \\\r\n2       7\r\n\r\nAnother valid answer is [5,2,6,null,4,null,7].\r\n\r\n    5\r\n   / \\\r\n  2   6\r\n   \\   \\\r\n    4   7",
        "level": 2,
        "paid_only": false,
        "question_id": 450,
        "slug": "delete-node-in-a-bst",
        "tags": [
            "Tree"
        ],
        "title": "Delete Node in a BST",
        "url": "https://leetcode.com/problems/delete-node-in-a-bst/description/"
    },
    "451": {
        "description": "Given a string, sort it in decreasing order based on the frequency of characters.\r\n\r\nExample 1:\r\n\r\nInput:\r\n\"tree\"\r\n\r\nOutput:\r\n\"eert\"\r\n\r\nExplanation:\r\n'e' appears twice while 'r' and 't' both appear once.\r\nSo 'e' must appear before both 'r' and 't'. Therefore \"eetr\" is also a valid answer.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n\"cccaaa\"\r\n\r\nOutput:\r\n\"cccaaa\"\r\n\r\nExplanation:\r\nBoth 'c' and 'a' appear three times, so \"aaaccc\" is also a valid answer.\r\nNote that \"cacaca\" is incorrect, as the same characters must be together.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput:\r\n\"Aabb\"\r\n\r\nOutput:\r\n\"bbAa\"\r\n\r\nExplanation:\r\n\"bbaA\" is also a valid answer, but \"Aabb\" is incorrect.\r\nNote that 'A' and 'a' are treated as two different characters.",
        "level": 2,
        "paid_only": false,
        "question_id": 451,
        "slug": "sort-characters-by-frequency",
        "tags": [
            "Hash Table",
            "Heap"
        ],
        "title": "Sort Characters By Frequency",
        "url": "https://leetcode.com/problems/sort-characters-by-frequency/description/"
    },
    "452": {
        "description": "There are a number of spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. Since it's horizontal, y-coordinates don't matter and hence the x-coordinates of start and end of the diameter suffice. Start is always smaller than end. There will be at most 104 balloons.\r\n\r\nAn arrow can be shot up exactly vertically from different points along the x-axis. A balloon with xstart and xend bursts by an arrow shot at x if xstart ≤ x ≤ xend. There is no limit to the number of arrows that can be shot. An arrow once shot keeps travelling up infinitely. The problem is to find the minimum number of arrows that must be shot to burst all balloons. \r\n\r\nExample:\r\n\r\nInput:\r\n[[10,16], [2,8], [1,6], [7,12]]\r\n\r\nOutput:\r\n2\r\n\r\nExplanation:\r\nOne way is to shoot one arrow for example at x = 6 (bursting the balloons [2,8] and [1,6]) and another arrow at x = 11 (bursting the other two balloons).",
        "level": 2,
        "paid_only": false,
        "question_id": 452,
        "slug": "minimum-number-of-arrows-to-burst-balloons",
        "tags": [
            "Greedy"
        ],
        "title": "Minimum Number of Arrows to Burst Balloons",
        "url": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/description/"
    },
    "453": {
        "description": "Given a non-empty integer array of size n, find the minimum number of moves required to make all array elements equal, where a move is incrementing n - 1 elements by 1.\r\n\r\nExample:\r\n\r\nInput:\r\n[1,2,3]\r\n\r\nOutput:\r\n3\r\n\r\nExplanation:\r\nOnly three moves are needed (remember each move increments two elements):\r\n\r\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]",
        "level": 1,
        "paid_only": false,
        "question_id": 453,
        "slug": "minimum-moves-to-equal-array-elements",
        "tags": [
            "Math"
        ],
        "title": "Minimum Moves to Equal Array Elements",
        "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/description/"
    },
    "454": {
        "description": "Given four lists A, B, C, D of integer values, compute how many tuples (i, j, k, l) there are such that A[i] + B[j] + C[k] + D[l] is zero.\r\n\r\nTo make problem a bit easier, all A, B, C, D have same length of N where 0 ≤ N ≤ 500. All integers are in the range of -228 to 228 - 1 and the result is guaranteed to be at most 231 - 1.\r\n\r\nExample:\r\n\r\nInput:\r\nA = [ 1, 2]\r\nB = [-2,-1]\r\nC = [-1, 2]\r\nD = [ 0, 2]\r\n\r\nOutput:\r\n2\r\n\r\nExplanation:\r\nThe two tuples are:\r\n1. (0, 0, 0, 1) -> A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0\r\n2. (1, 1, 0, 0) -> A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0",
        "level": 2,
        "paid_only": false,
        "question_id": 454,
        "slug": "4sum-ii",
        "tags": [
            "Hash Table",
            "Binary Search"
        ],
        "title": "4Sum II",
        "url": "https://leetcode.com/problems/4sum-ii/description/"
    },
    "455": {
        "description": "Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor gi, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size sj. If sj >= gi, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\r\n\r\n\r\nNote:\r\nYou may assume the greed factor is always positive. \r\nYou cannot assign more than one cookie to one child.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,2,3], [1,1]\r\n\r\nOutput: 1\r\n\r\nExplanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \r\nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\r\nYou need to output 1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2], [1,2,3]\r\n\r\nOutput: 2\r\n\r\nExplanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \r\nYou have 3 cookies and their sizes are big enough to gratify all of the children, \r\nYou need to output 2.",
        "level": 1,
        "paid_only": false,
        "question_id": 455,
        "slug": "assign-cookies",
        "tags": [
            "Greedy"
        ],
        "title": "Assign Cookies",
        "url": "https://leetcode.com/problems/assign-cookies/description/"
    },
    "456": {
        "description": "Given a sequence of n integers a1, a2, ..., an, a 132 pattern is a subsequence ai, aj, ak such\r\nthat i < j < k and ai < ak < aj. Design an algorithm that takes a list of n numbers as input and checks whether there is a 132 pattern in the list.\r\n\r\nNote: n will be less than 15,000.\r\n\r\nExample 1:\r\n\r\nInput: [1, 2, 3, 4]\r\n\r\nOutput: False\r\n\r\nExplanation: There is no 132 pattern in the sequence.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [3, 1, 4, 2]\r\n\r\nOutput: True\r\n\r\nExplanation: There is a 132 pattern in the sequence: [1, 4, 2].\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [-1, 3, 2, 0]\r\n\r\nOutput: True\r\n\r\nExplanation: There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].",
        "level": 2,
        "paid_only": false,
        "question_id": 456,
        "slug": "132-pattern",
        "tags": [
            "Stack"
        ],
        "title": "132 Pattern",
        "url": "https://leetcode.com/problems/132-pattern/description/"
    },
    "457": {
        "description": "You are given an array of positive and negative integers. If a number n at an index is positive, then move forward n steps. Conversely, if it's negative (-n), move backward n steps. Assume the first element of the array is forward next to the last element, and the last element is backward next to the first element. Determine if there is a loop in this array. A loop starts and ends at a particular index with more than 1 element along the loop. The loop must be \"forward\" or \"backward'.\r\n\r\n\r\nExample 1:\r\n\r\nGiven the array [2, -1, 1, 2, 2], there is a loop, from index 0 -> 2 -> 3 -> 0.\r\n\r\n\r\nExample 2:\r\n\r\nGiven the array [-1, 2], there is no loop.\r\n\r\n\r\nNote:\r\n\r\nThe given array is guaranteed to contain no element \"0\".\r\n\r\n\r\n\r\nCan you do it in O(n) time complexity and O(1) space complexity?",
        "level": 2,
        "paid_only": false,
        "question_id": 457,
        "slug": "circular-array-loop",
        "tags": [],
        "title": "Circular Array Loop",
        "url": "https://leetcode.com/problems/circular-array-loop/description/"
    },
    "458": {
        "description": "There are 1000 buckets, one and only one of them contains poison, the rest are filled with water. They all look the same. If a pig drinks that poison it will die within 15 minutes. What is the minimum amount of pigs you need to figure out which bucket contains the poison within one hour. \r\n\r\n\r\nAnswer this question, and write an algorithm for the follow-up general case.\r\n\r\n\r\n\r\nFollow-up:\r\n\r\n\r\n\r\nIf there are n buckets and a pig drinking poison will die within m minutes, how many pigs (x) you need to figure out the \"poison\" bucket within p minutes? There is exact one bucket with poison.",
        "level": 1,
        "paid_only": false,
        "question_id": 458,
        "slug": "poor-pigs",
        "tags": [],
        "title": "Poor Pigs",
        "url": "https://leetcode.com/problems/poor-pigs/description/"
    },
    "459": {
        "description": "Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.  You may assume the given string consists of lowercase English letters only and its length  will not exceed 10000. \r\n\r\nExample 1:\r\n\r\nInput: \"abab\"\r\n\r\nOutput: True\r\n\r\nExplanation: It's the substring \"ab\" twice.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"aba\"\r\n\r\nOutput: False\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"abcabcabcabc\"\r\n\r\nOutput: True\r\n\r\nExplanation: It's the substring \"abc\" four times. (And the substring \"abcabc\" twice.)",
        "level": 1,
        "paid_only": false,
        "question_id": 459,
        "slug": "repeated-substring-pattern",
        "tags": [
            "String"
        ],
        "title": "Repeated Substring Pattern",
        "url": "https://leetcode.com/problems/repeated-substring-pattern/description/"
    },
    "460": {
        "description": "Design and implement a data structure for Least Frequently Used (LFU) cache. It should support the following operations: get and put.\r\n\r\n\r\n\r\nget(key) - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.\r\nput(key, value) - Set or insert the value if the key is not already present. When the cache reaches its capacity, it should invalidate the least frequently used item before inserting a new item. For the purpose of this problem, when there is a tie (i.e., two or more keys that have the same frequency), the least recently used key would be evicted.\r\n\r\n\r\nFollow up:\r\nCould you do both operations in O(1) time complexity?\r\n\r\nExample:\r\n\r\nLFUCache cache = new LFUCache( 2 /* capacity */ );\r\n\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\ncache.get(1);       // returns 1\r\ncache.put(3, 3);    // evicts key 2\r\ncache.get(2);       // returns -1 (not found)\r\ncache.get(3);       // returns 3.\r\ncache.put(4, 4);    // evicts key 1.\r\ncache.get(1);       // returns -1 (not found)\r\ncache.get(3);       // returns 3\r\ncache.get(4);       // returns 4",
        "level": 3,
        "paid_only": false,
        "question_id": 460,
        "slug": "lfu-cache",
        "tags": [
            "Design"
        ],
        "title": "LFU Cache",
        "url": "https://leetcode.com/problems/lfu-cache/description/"
    },
    "461": {
        "description": "The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\r\n\r\nGiven two integers x and y, calculate the Hamming distance.\r\n\r\nNote:\r\n0 ≤ x, y < 231.\r\n\r\n\r\nExample:\r\n\r\nInput: x = 1, y = 4\r\n\r\nOutput: 2\r\n\r\nExplanation:\r\n1   (0 0 0 1)\r\n4   (0 1 0 0)\r\n       ↑   ↑\r\n\r\nThe above arrows point to positions where the corresponding bits are different.",
        "level": 1,
        "paid_only": false,
        "question_id": 461,
        "slug": "hamming-distance",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Hamming Distance",
        "url": "https://leetcode.com/problems/hamming-distance/description/"
    },
    "462": {
        "description": "Given a non-empty integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.\r\n\r\nYou may assume the array's length is at most 10,000.\r\n\r\nExample:\r\n\r\nInput:\r\n[1,2,3]\r\n\r\nOutput:\r\n2\r\n\r\nExplanation:\r\nOnly two moves are needed (remember each move increments or decrements one element):\r\n\r\n[1,2,3]  =>  [2,2,3]  =>  [2,2,2]",
        "level": 2,
        "paid_only": false,
        "question_id": 462,
        "slug": "minimum-moves-to-equal-array-elements-ii",
        "tags": [
            "Math"
        ],
        "title": "Minimum Moves to Equal Array Elements II",
        "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/description/"
    },
    "463": {
        "description": "You are given a map in form of a two-dimensional integer grid where 1 represents land and 0 represents water. Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells). The island doesn't have \"lakes\" (water inside that isn't connected to the water around the island). One cell is a square with side length 1. The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.\r\n\r\nExample:\r\n\r\n[[0,1,0,0],\r\n [1,1,1,0],\r\n [0,1,0,0],\r\n [1,1,0,0]]\r\n\r\nAnswer: 16\r\nExplanation: The perimeter is the 16 yellow stripes in the image below:",
        "level": 1,
        "paid_only": false,
        "question_id": 463,
        "slug": "island-perimeter",
        "tags": [
            "Hash Table"
        ],
        "title": "Island Perimeter",
        "url": "https://leetcode.com/problems/island-perimeter/description/"
    },
    "464": {
        "description": "In the \"100 game,\" two players take turns adding, to a running total, any integer from 1..10. The player who first causes the running total to reach or exceed 100 wins. \r\n\r\nWhat if we change the game so that players cannot re-use integers? \r\n\r\nFor example, two players might take turns drawing from a common pool of numbers of 1..15 without replacement until they reach a total >= 100.\r\n\r\nGiven an integer maxChoosableInteger and another integer desiredTotal, determine if the first player to move can force a win, assuming both players play optimally. \r\n\r\nYou can always assume that maxChoosableInteger will not be larger than 20 and desiredTotal will not be larger than 300.\r\n\r\n\r\nExample\r\n\r\nInput:\r\nmaxChoosableInteger = 10\r\ndesiredTotal = 11\r\n\r\nOutput:\r\nfalse\r\n\r\nExplanation:\r\nNo matter which integer the first player choose, the first player will lose.\r\nThe first player can choose an integer from 1 up to 10.\r\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\r\nThe second player will win by choosing 10 and get a total = 11, which is >= desiredTotal.\r\nSame with other integers chosen by the first player, the second player will always win.",
        "level": 2,
        "paid_only": false,
        "question_id": 464,
        "slug": "can-i-win",
        "tags": [
            "Dynamic Programming",
            "Minimax"
        ],
        "title": "Can I Win",
        "url": "https://leetcode.com/problems/can-i-win/description/"
    },
    "465": {
        "description": "A group of friends went on holiday and sometimes lent each other money. For\nexample, Alice paid for Bill's lunch for $10. Then later Chris gave Alice $5\nfor a taxi ride. We can model each transaction as a tuple (x, y, z) which\nmeans person x gave person y $z. Assuming Alice, Bill, and Chris are person 0,\n1, and 2 respectively (0, 1, 2 are the person's ID), the transactions can be\nrepresented as `[[0, 1, 10], [2, 0, 5]]`.\n\nGiven a list of transactions between a group of people, return the minimum\nnumber of transactions required to settle the debt.\n\nNote:\n\n  1. A transaction will be given as a tuple (x, y, z). Note that `x ≠ y` and `z > 0`.\n  2. Person's IDs may not be linear, e.g. we could have the persons 0, 1, 2 or we could also have the persons 0, 2, 6.\n\n\n\nExample 1:\n\n\n\n    Input:\r[[0,1,10], [2,0,5]]\r\rOutput:\r2\r\rExplanation:\rPerson #0 gave person #1 $10.\rPerson #2 gave person #0 $5.\r\rTwo transactions are needed. One way to settle the debt is person #1 pays person #0 and #2 $5 each.\r\n\n\n\nExample 2:\n\n\n\n    Input:\r[[0,1,10], [1,0,1], [1,2,5], [2,0,5]]\r\rOutput:\r1\r\rExplanation:\rPerson #0 gave person #1 $10.\rPerson #1 gave person #0 $1.\rPerson #1 gave person #2 $5.\rPerson #2 gave person #0 $5.\r\rTherefore, person #1 only need to give person #0 $4, and all debt is settled.",
        "level": 3,
        "paid_only": true,
        "question_id": 465,
        "slug": "optimal-account-balancing",
        "tags": [],
        "title": "Optimal Account Balancing",
        "url": "https://leetcode.com/problems/optimal-account-balancing/description/"
    },
    "466": {
        "description": "Define S = [s,n] as the string S which consists of n connected strings s. For example, [\"abc\", 3] =\"abcabcabc\". \r\nOn the other hand, we define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1. For example, “abc”  can be obtained from “abdbec” based on our definition, but it can not be obtained from “acbbe”.\r\nYou are given two non-empty strings s1 and s2 (each at most 100 characters long) and two integers 0 ≤ n1 ≤ 106 and 1 ≤ n2 ≤ 106. Now consider the strings S1 and S2, where S1=[s1,n1] and S2=[s2,n2]. Find the maximum integer M such that [S2,M] can be obtained from S1.\r\n\r\nExample:\r\n\r\nInput:\r\ns1=\"acb\", n1=4\r\ns2=\"ab\", n2=2\r\n\r\nReturn:\r\n2",
        "level": 3,
        "paid_only": false,
        "question_id": 466,
        "slug": "count-the-repetitions",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Count The Repetitions",
        "url": "https://leetcode.com/problems/count-the-repetitions/description/"
    },
    "467": {
        "description": "Consider the string s to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so s will look like this: \"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".\r\n\r\nNow we have another string p. Your job is to find out how many unique non-empty substrings of p are present in s. In particular, your input is the string p and you need to output the number of different non-empty substrings of p in the string s.\r\n\r\nNote: p consists of only lowercase English letters and the size of p might be over 10000.\r\n\r\nExample 1:\r\n\r\nInput: \"a\"\r\nOutput: 1\r\n\r\nExplanation: Only the substring \"a\" of string \"a\" is in the string \u0010s.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"cac\"\r\nOutput: 2\r\nExplanation: There are two substrings \"a\", \"c\" of string \"cac\" in the string s.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"zab\"\r\nOutput: 6\r\nExplanation: There are six substrings \"z\", \"a\", \"b\", \"za\", \"ab\", \"zab\" of string \"zab\" in the string s.",
        "level": 2,
        "paid_only": false,
        "question_id": 467,
        "slug": "unique-substrings-in-wraparound-string",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Unique Substrings in Wraparound String",
        "url": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/description/"
    },
    "468": {
        "description": "Write a function to check whether an input string is a valid IPv4 address or IPv6 address or neither.\r\n\r\n\r\n\r\nIPv4 addresses are canonically represented in dot-decimal notation, which consists of four decimal numbers, each ranging from 0 to 255, separated by dots (\".\"), e.g.,172.16.254.1;\r\n\r\n\r\n\r\nBesides, leading zeros in the IPv4 is invalid. For example, the address 172.16.254.01 is invalid.\r\n\r\n\r\n\r\nIPv6 addresses are represented as eight groups of four hexadecimal digits, each group representing 16 bits. The groups are separated by colons (\":\"). For example, the address 2001:0db8:85a3:0000:0000:8a2e:0370:7334 is a valid one. Also, we could omit some leading zeros among four hexadecimal digits and some low-case characters in the address to upper-case ones, so 2001:db8:85a3:0:0:8A2E:0370:7334 is also a valid IPv6 address(Omit leading zeros and using upper cases).\r\n\r\n\r\n\r\n\r\nHowever, we don't replace a consecutive group of zero value with a single empty group using two consecutive colons (::) to pursue simplicity. For example, 2001:0db8:85a3::8A2E:0370:7334 is an invalid IPv6 address.\r\n\r\n\r\n\r\nBesides, extra leading zeros in the IPv6 is also invalid. For example, the address 02001:0db8:85a3:0000:0000:8a2e:0370:7334 is invalid.\r\n\r\n\r\n\r\nNote:\r\nYou may assume there is no extra space or special characters in the input string.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"172.16.254.1\"\r\n\r\nOutput: \"IPv4\"\r\n\r\nExplanation: This is a valid IPv4 address, return \"IPv4\".\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"2001:0db8:85a3:0:0:8A2E:0370:7334\"\r\n\r\nOutput: \"IPv6\"\r\n\r\nExplanation: This is a valid IPv6 address, return \"IPv6\".\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"256.256.256.256\"\r\n\r\nOutput: \"Neither\"\r\n\r\nExplanation: This is neither a IPv4 address nor a IPv6 address.",
        "level": 2,
        "paid_only": false,
        "question_id": 468,
        "slug": "validate-ip-address",
        "tags": [
            "String"
        ],
        "title": "Validate IP Address",
        "url": "https://leetcode.com/problems/validate-ip-address/description/"
    },
    "469": {
        "description": "Given a list of points that form a polygon when joined sequentially, find if\nthis polygon is convex [(Convex polygon\ndefinition)](https://en.wikipedia.org/wiki/Convex_polygon).\n\n**Note:**\n\n  1. There are at least 3 and at most 10,000 points.\n  2. Coordinates are in the range -10,000 to 10,000.\n  3. You may assume the polygon formed by given points is always a simple polygon[ (Simple polygon definition)](https://en.wikipedia.org/wiki/Simple_polygon). In other words, we ensure that exactly two edges intersect at each vertex, and that edges otherwise **don't intersect each other**.\n\n**Example 1:**\n\n\n    [[0,0],[0,1],[1,1],[1,0]]\r\rAnswer: True\r\rExplanation:\n\n![](https://leetcode.com/static/images/problemset/polygon_convex.png)\n\n**Example 2:**\n\n\n    [[0,0],[0,10],[10,10],[10,0],[5,5]]\r\rAnswer: False\r\rExplanation:\n\n![](https://leetcode.com/static/images/problemset/polygon_not_convex.png)",
        "level": 2,
        "paid_only": true,
        "question_id": 469,
        "slug": "convex-polygon",
        "tags": [],
        "title": "Convex Polygon",
        "url": "https://leetcode.com/problems/convex-polygon/description/"
    },
    "471": {
        "description": "Given a **non-empty** string, encode the string such that its encoded length\nis the shortest.\n\nThe encoding rule is: `k[encoded_string]`, where the _encoded_string_ inside\nthe square brackets is being repeated exactly _k_ times.\n\n**Note:**\n  1. _k_ will be a positive integer and encoded string will not be empty or have extra space.\n  2. You may assume that the input string contains only lowercase English letters. The string's length is at most 160.\n  3. If an encoding process does not make the string shorter, then do not encode it. If there are several solutions, return any of them is fine.\n\n**Example 1:**\n\n\n    Input: \"aaa\"\rOutput: \"aaa\"\rExplanation: There is no way to encode it such that it is shorter than the input string, so we do not encode it.\r\n\n**Example 2:**\n\n\n    Input: \"aaaaa\"\rOutput: \"5[a]\"\rExplanation: \"5[a]\" is shorter than \"aaaaa\" by 1 character.\r\n\n**Example 3:**\n\n\n    Input: \"aaaaaaaaaa\"\rOutput: \"10[a]\"\rExplanation: \"a9[a]\" or \"9[a]a\" are also valid solutions, both of them have the same length = 5, which is the same as \"10[a]\".\r\n\n**Example 4:**\n\n\n    Input: \"aabcaabcd\"\rOutput: \"2[aabc]d\"\rExplanation: \"aabc\" occurs twice, so one answer can be \"2[aabc]d\".\r\n\n**Example 5:**\n\n\n    Input: \"abbbabbbcabbbabbbc\"\rOutput: \"2[2[abbb]c]\"\rExplanation: \"abbbabbbc\" occurs twice, but \"abbbabbbc\" can also be encoded to \"2[abbb]c\", so one answer can be \"2[2[abbb]c]\".",
        "level": 3,
        "paid_only": true,
        "question_id": 471,
        "slug": "encode-string-with-shortest-length",
        "tags": [],
        "title": "Encode String with Shortest Length",
        "url": "https://leetcode.com/problems/encode-string-with-shortest-length/description/"
    },
    "472": {
        "description": "Given a list of words (without duplicates), please write a program that returns all concatenated words in the given list of words.\r\nA concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.\r\n\r\nExample:\r\n\r\nInput: [\"cat\",\"cats\",\"catsdogcats\",\"dog\",\"dogcatsdog\",\"hippopotamuses\",\"rat\",\"ratcatdogcat\"]\r\n\r\nOutput: [\"catsdogcats\",\"dogcatsdog\",\"ratcatdogcat\"]\r\n\r\nExplanation: \"catsdogcats\" can be concatenated by \"cats\", \"dog\" and \"cats\";  \"dogcatsdog\" can be concatenated by \"dog\", \"cats\" and \"dog\"; \"ratcatdogcat\" can be concatenated by \"rat\", \"cat\", \"dog\" and \"cat\".\r\n\r\n\r\n\r\nNote:\r\n\r\nThe number of elements of the given array will not exceed 10,000 \r\nThe length sum of elements in the given array will not exceed 600,000. \r\nAll the input string will only include lower case letters.\r\nThe returned elements order does not matter.",
        "level": 3,
        "paid_only": false,
        "question_id": 472,
        "slug": "concatenated-words",
        "tags": [
            "Dynamic Programming",
            "Depth-first Search",
            "Trie"
        ],
        "title": "Concatenated Words",
        "url": "https://leetcode.com/problems/concatenated-words/description/"
    },
    "473": {
        "description": "Remember the story of Little Match Girl? By now, you know exactly what matchsticks the little match girl has, please find out a way you can make one square by using up all those matchsticks. You should not break any stick, but you can link them up, and each matchstick must be used exactly one time.\r\n\r\n Your input will be several matchsticks the girl has, represented with their stick length. Your output will either be true or false, to represent whether you could make one square using all the matchsticks the little match girl has.\r\n\r\nExample 1:\r\n\r\nInput: [1,1,2,2,2]\r\nOutput: true\r\n\r\nExplanation: You can form a square with length 2, one side of the square came two sticks with length 1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [3,3,3,3,4]\r\nOutput: false\r\n\r\nExplanation: You cannot find a way to form a square with all the matchsticks.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length sum of the given matchsticks is in the range of 0 to 10^9.\r\nThe length of the given matchstick array will not exceed 15.",
        "level": 2,
        "paid_only": false,
        "question_id": 473,
        "slug": "matchsticks-to-square",
        "tags": [
            "Depth-first Search"
        ],
        "title": "Matchsticks to Square",
        "url": "https://leetcode.com/problems/matchsticks-to-square/description/"
    },
    "474": {
        "description": "In the computer world, use restricted resource you have to generate maximum benefit is what we always want to pursue.\r\nFor now, suppose you are a dominator of m 0s and n 1s respectively. On the other hand, there is an array with strings consisting of only 0s and 1s.\r\n\r\n\r\nNow your task is to find the maximum number of strings that you can form with given m 0s and n 1s. Each 0 and 1 can be used at most once.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe given numbers of 0s and 1s will both not exceed 100\r\nThe size of given string array won't exceed 600.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: Array = {\"10\", \"0001\", \"111001\", \"1\", \"0\"}, m = 5, n = 3\r\nOutput: 4\r\n\r\nExplanation: This are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are “10,”0001”,”1”,”0”\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: Array = {\"10\", \"0\", \"1\"}, m = 1, n = 1\r\nOutput: 2\r\n\r\nExplanation: You could form \"10\", but then you'd have nothing left. Better form \"0\" and \"1\".",
        "level": 2,
        "paid_only": false,
        "question_id": 474,
        "slug": "ones-and-zeroes",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Ones and Zeroes",
        "url": "https://leetcode.com/problems/ones-and-zeroes/description/"
    },
    "475": {
        "description": "Winter is coming! Your first job during the contest is to design a standard heater with fixed warm radius to warm all the houses.\r\n\r\nNow, you are given positions of houses and heaters on a horizontal line, find out minimum radius of heaters so that all houses could be covered by those heaters.\r\n\r\nSo, your input will be the positions of houses and heaters seperately, and your expected output will be the minimum radius standard of heaters.\r\n\r\nNote:\r\n\r\nNumbers of houses and heaters you are given are non-negative and will not exceed 25000.\r\nPositions of houses and heaters you are given are non-negative and will not exceed 10^9.\r\nAs long as a house is in the heaters' warm radius range, it can be warmed.\r\nAll the heaters follow your radius standard and the warm radius will the same.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,2,3],[2]\r\nOutput: 1\r\nExplanation: The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2,3,4],[1,4]\r\nOutput: 1\r\nExplanation: The two heater was placed in the position 1 and 4. We need to use radius 1 standard, then all the houses can be warmed.",
        "level": 1,
        "paid_only": false,
        "question_id": 475,
        "slug": "heaters",
        "tags": [
            "Binary Search"
        ],
        "title": "Heaters",
        "url": "https://leetcode.com/problems/heaters/description/"
    },
    "476": {
        "description": "Given a positive integer, output its complement number. The complement strategy is to flip the bits of its binary representation.\r\n\r\nNote:\r\n\r\nThe given integer is guaranteed to fit within the range of a 32-bit signed integer.\r\nYou could assume no leading zero bit in the integer’s binary representation.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: 5\r\nOutput: 2\r\nExplanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 1\r\nOutput: 0\r\nExplanation: The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.",
        "level": 1,
        "paid_only": false,
        "question_id": 476,
        "slug": "number-complement",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Number Complement",
        "url": "https://leetcode.com/problems/number-complement/description/"
    },
    "477": {
        "description": "The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\r\n\r\nNow your job is to find the total Hamming distance between all pairs of the given numbers.\r\n\r\n\r\nExample:\r\n\r\nInput: 4, 14, 2\r\n\r\nOutput: 6\r\n\r\nExplanation: In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\r\nshowing the four bits relevant in this case). So the answer will be:\r\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\r\n\r\n\r\n\r\nNote:\r\n\r\nElements of the given array are in the range of 0  to 10^9\r\nLength of the array will not exceed 10^4.",
        "level": 2,
        "paid_only": false,
        "question_id": 477,
        "slug": "total-hamming-distance",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Total Hamming Distance",
        "url": "https://leetcode.com/problems/total-hamming-distance/description/"
    },
    "479": {
        "description": "Find the largest palindrome made from the product of two n-digit numbers.\r\n Since the result could be very large, you should return the largest palindrome mod 1337.\r\n\r\nExample:\r\nInput: 2\r\nOutput: 987\r\nExplanation: 99 x 91 = 9009, 9009 % 1337 = 987\r\n\r\n\r\n\r\n\r\nNote:\r\nThe range of n is [1,8].",
        "level": 1,
        "paid_only": false,
        "question_id": 479,
        "slug": "largest-palindrome-product",
        "tags": [],
        "title": "Largest Palindrome Product",
        "url": "https://leetcode.com/problems/largest-palindrome-product/description/"
    },
    "480": {
        "description": "Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.\r\nExamples: \r\n[2,3,4] , the median is 3\r\n[2,3], the median is (2 + 3) / 2 = 2.5 \r\n\r\nGiven an array nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position. Your job is to output the median array for each window in the original array.\r\n\r\nFor example,\r\nGiven nums = [1,3,-1,-3,5,3,6,7], and k = 3.\r\n\r\n\r\nWindow position                Median\r\n---------------               -----\r\n[1  3  -1] -3  5  3  6  7       1\r\n 1 [3  -1  -3] 5  3  6  7       -1\r\n 1  3 [-1  -3  5] 3  6  7       -1\r\n 1  3  -1 [-3  5  3] 6  7       3\r\n 1  3  -1  -3 [5  3  6] 7       5\r\n 1  3  -1  -3  5 [3  6  7]      6\r\n\r\n\r\nTherefore, return the median sliding window as [1,-1,-1,3,5,6].\r\n\r\nNote: \r\nYou may assume k is always valid, ie: k is always smaller than input array's size for non-empty array.",
        "level": 3,
        "paid_only": false,
        "question_id": 480,
        "slug": "sliding-window-median",
        "tags": [],
        "title": "Sliding Window Median",
        "url": "https://leetcode.com/problems/sliding-window-median/description/"
    },
    "481": {
        "description": "A magical string S consists of only '1' and '2' and obeys the following rules:\r\n\r\n\r\nThe string S is magical because concatenating the number of contiguous occurrences of characters '1' and '2' generates the string S itself.\r\n\r\n\r\n\r\nThe first few elements of string S is the following:\r\nS = \"1221121221221121122……\"\r\n\r\n\r\n\r\nIf we group the consecutive '1's and '2's in S, it will be:\r\n\r\n\r\n1   22  11  2  1  22  1  22  11  2  11  22 ......\r\n\r\n\r\nand the occurrences of '1's or '2's in each group are:\r\n\r\n\r\n1   2\t   2    1   1    2     1    2     2    1    2    2 ......\r\n\r\n\r\n\r\nYou can see that the occurrence sequence above is the S itself. \r\n\r\n\r\n\r\nGiven an integer N as input, return the number of '1's in the first N number in the magical string S.\r\n\r\n\r\nNote:\r\nN will not exceed 100,000.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: 6\r\nOutput: 3\r\nExplanation: The first 6 elements of magical string S is \"12211\" and it contains three 1's, so return 3.",
        "level": 2,
        "paid_only": false,
        "question_id": 481,
        "slug": "magical-string",
        "tags": [],
        "title": "Magical String",
        "url": "https://leetcode.com/problems/magical-string/description/"
    },
    "482": {
        "description": "Now you are given a string S, which represents a software license key which we would like to format. The string S is composed of alphanumerical characters and dashes. The dashes split the alphanumerical characters within the string into groups. (i.e. if there are M dashes, the string is split into M+1 groups). The dashes in the given string are possibly misplaced.\r\n\r\nWe want each group of characters to be of length K (except for possibly the first group, which could be shorter, but still must contain at least one character). To satisfy this requirement, we will reinsert dashes. Additionally, all the lower case letters in the string must be converted to upper case.\r\n\r\nSo, you are given a non-empty string S, representing a license key to format, and an integer K. And you need to return the license key formatted according to the description above.\r\n\r\n\r\nExample 1:\r\n\r\nInput: S = \"2-4A0r7-4k\", K = 4\r\n\r\nOutput: \"24A0-R74K\"\r\n\r\nExplanation: The string S has been split into two parts, each part has 4 characters.\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: S = \"2-4A0r7-4k\", K = 3\r\n\r\nOutput: \"24-A0R-74K\"\r\n\r\nExplanation: The string S has been split into three parts, each part has 3 characters except the first part as it could be shorter as said above.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of string S will not exceed 12,000, and K is a positive integer.\r\nString S consists only of alphanumerical characters (a-z and/or A-Z and/or 0-9) and dashes(-).\r\nString S is non-empty.",
        "level": 2,
        "paid_only": false,
        "question_id": 482,
        "slug": "license-key-formatting",
        "tags": [],
        "title": "License Key Formatting",
        "url": "https://leetcode.com/problems/license-key-formatting/description/"
    },
    "483": {
        "description": "For an integer n, we call k>=2 a good base of n, if all digits of n base k are 1.\r\nNow given a string representing n, you should return the smallest good base of n in string format. \r\n\r\nExample 1:\r\n\r\nInput: \"13\"\r\nOutput: \"3\"\r\nExplanation: 13 base 3 is 111.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"4681\"\r\nOutput: \"8\"\r\nExplanation: 4681 base 8 is 11111.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"1000000000000000000\"\r\nOutput: \"999999999999999999\"\r\nExplanation: 1000000000000000000 base 999999999999999999 is 11.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe range of n is [3, 10^18].\r\nThe string representing n is always valid and will not have leading zeros.",
        "level": 3,
        "paid_only": false,
        "question_id": 483,
        "slug": "smallest-good-base",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "title": "Smallest Good Base",
        "url": "https://leetcode.com/problems/smallest-good-base/description/"
    },
    "484": {
        "description": "By now, you are given a secret signature consisting of character 'D' and 'I'.\n'D' represents a decreasing relationship between two numbers, 'I' represents\nan increasing relationship between two numbers. And our secret signature was\nconstructed by a special integer array, which contains uniquely all the\ndifferent number from 1 to n (n is the length of the secret signature plus 1).\nFor example, the secret signature \"DI\" can be constructed by array [2,1,3] or\n[3,1,2], but won't be constructed by array [3,2,4] or [2,1,3,4], which are\nboth illegal constructing special string that can't represent the \"DI\" secret\nsignature.\n\nOn the other hand, now your job is to find the lexicographically smallest\npermutation of [1, 2, ... n] could refer to the given secret signature in the\ninput.\n\nExample 1:\n\n\n\n    Input: \"I\"\rOutput: [1,2]\rExplanation: [1,2] is the only legal initial spectial string can construct secret signature \"I\", where the number 1 and 2 construct an increasing relationship.\r\n\n\n\nExample 2:\n\n\n\n    Input: \"DI\"\rOutput: [2,1,3]\rExplanation: Both [2,1,3] and [3,1,2] can construct the secret signature \"DI\",\n    but since we want to find the one with the smallest lexicographical permutation, you need to output [2,1,3]\r\n\n\n\nNote:\n\n  * The input string will only contain the character 'D' and 'I'.\n  * The length of input string is a positive integer and will not exceed 10,000",
        "level": 2,
        "paid_only": true,
        "question_id": 484,
        "slug": "find-permutation",
        "tags": [],
        "title": "Find Permutation",
        "url": "https://leetcode.com/problems/find-permutation/description/"
    },
    "485": {
        "description": "Given a binary array, find the maximum number of consecutive 1s in this array.\r\n\r\nExample 1:\r\n\r\nInput: [1,1,0,1,1,1]\r\nOutput: 3\r\nExplanation: The first two digits or the last three digits are consecutive 1s.\r\n    The maximum number of consecutive 1s is 3.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input array will only contain 0 and 1.\r\nThe length of input array is a positive integer and will not exceed 10,000",
        "level": 1,
        "paid_only": false,
        "question_id": 485,
        "slug": "max-consecutive-ones",
        "tags": [
            "Array"
        ],
        "title": "Max Consecutive Ones",
        "url": "https://leetcode.com/problems/max-consecutive-ones/description/"
    },
    "486": {
        "description": "Given an array of scores that are non-negative integers. Player 1 picks one of the numbers from either end of the array followed by the player 2 and then player 1 and so on. Each time a player picks a number, that number will not be available for the next player. This continues until all the scores have been chosen. The player with the maximum score wins. \r\n\r\nGiven an array of scores, predict whether player 1 is the winner. You can assume each player plays to maximize his score. \r\n\r\nExample 1:\r\n\r\nInput: [1, 5, 2]\r\nOutput: False\r\nExplanation: Initially, player 1 can choose between 1 and 2. If he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). So, final score of player 1 is 1 + 2 = 3, and player 2 is 5. Hence, player 1 will never be the winner and you need to return False.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1, 5, 233, 7]\r\nOutput: True\r\nExplanation: Player 1 first chooses 1. Then player 2 have to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.Finally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\r\n\r\n\r\n\r\nNote:\r\n\r\n1 <= length of the array <= 20. \r\nAny scores in the given array are non-negative integers and will not exceed 10,000,000.\r\nIf the scores of both players are equal, then player 1 is still the winner.",
        "level": 2,
        "paid_only": false,
        "question_id": 486,
        "slug": "predict-the-winner",
        "tags": [
            "Dynamic Programming",
            "Minimax"
        ],
        "title": "Predict the Winner",
        "url": "https://leetcode.com/problems/predict-the-winner/description/"
    },
    "487": {
        "description": "Given a binary array, find the maximum number of consecutive 1s in this array\nif you can flip at most one 0.\n\nExample 1:\n\n\n\n    Input: [1,0,1,1,0]\rOutput: 4\rExplanation: Flip the first zero will get the the maximum number of consecutive 1s.\r    After flipping, the maximum number of consecutive 1s is 4.\r\n\n\n\nNote:\n\n  * The input array will only contain `0` and `1`.\n  * The length of input array is a positive integer and will not exceed 10,000\n\n\n\nFollow up:\nWhat if the input numbers come in one by one as an infinite stream? In other\nwords, you can't store all numbers coming from the stream as it's too large to\nhold in memory. Could you solve it efficiently?",
        "level": 2,
        "paid_only": true,
        "question_id": 487,
        "slug": "max-consecutive-ones-ii",
        "tags": [],
        "title": "Max Consecutive Ones II",
        "url": "https://leetcode.com/problems/max-consecutive-ones-ii/description/"
    },
    "488": {
        "description": "Think about Zuma Game. You have a row of balls on the table, colored red(R), yellow(Y), blue(B), green(G), and white(W). You also have several balls in your hand.\r\n\r\nEach time, you may choose a ball in your hand, and insert it into the row (including the leftmost place and rightmost place). Then, if there is a group of 3 or more balls in the same color touching, remove these balls. Keep doing this until no more balls can be removed.\r\n\r\nFind the minimal balls you have to insert to remove all the balls on the table. If you cannot remove all the balls, output -1.\r\n\r\n\r\nExamples:\r\nInput: \"WRRBBW\", \"RB\"\r\nOutput: -1\r\nExplanation: WRRBBW -> WRR[R]BBW -> WBBW -> WBB[B]W -> WW\r\n\r\nInput: \"WWRRBBWW\", \"WRBRW\"\r\nOutput: 2\r\nExplanation: WWRRBBWW -> WWRR[R]BBWW -> WWBBWW -> WWBB[B]WW -> WWWW -> empty\r\n\r\nInput:\"G\", \"GGGGG\"\r\nOutput: 2\r\nExplanation: G -> G[G] -> GG[G] -> empty \r\n\r\nInput: \"RBYYBBRRB\", \"YRBGB\"\r\nOutput: 3\r\nExplanation: RBYYBBRRB -> RBYY[Y]BBRRB -> RBBBRRB -> RRRB -> B -> B[B] -> BB[B] -> empty \r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume that the initial row of balls on the table won’t have any 3 or more consecutive balls with the same color.\r\nThe number of balls on the table won't exceed 20, and the string represents these balls is called \"board\" in the input.\r\nThe number of balls in your hand won't exceed 5, and the string represents these balls is called \"hand\" in the input.\r\nBoth input strings will be non-empty and only contain characters 'R','Y','B','G','W'.",
        "level": 3,
        "paid_only": false,
        "question_id": 488,
        "slug": "zuma-game",
        "tags": [
            "Depth-first Search"
        ],
        "title": "Zuma Game",
        "url": "https://leetcode.com/problems/zuma-game/description/"
    },
    "491": {
        "description": "Given an integer array, your task is to find all the different possible increasing subsequences of the given array, and the length of an increasing subsequence should be at least 2 .\r\n\r\n\r\nExample:\r\n\r\nInput: [4, 6, 7, 7]\r\nOutput: [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the given array will not exceed 15.\r\nThe range of integer in the given array is [-100,100].\r\nThe given array may contain duplicates, and two equal integers should also be considered as a special case of increasing sequence.",
        "level": 2,
        "paid_only": false,
        "question_id": 491,
        "slug": "increasing-subsequences",
        "tags": [
            "Depth-first Search"
        ],
        "title": "Increasing Subsequences",
        "url": "https://leetcode.com/problems/increasing-subsequences/description/"
    },
    "492": {
        "description": "For a web developer, it is very important to know how to design a web page's size. So, given a specific rectangular web page’s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:\r\n1. The area of the rectangular web page you designed must equal to the given target area.\r\n2. The width W should not be larger than the length L, which means L >= W.\r\n3. The difference between length L and width W should be as small as possible.\r\n\r\nYou need to output the length L and the width W of the web page you designed in sequence.\r\n\r\n\r\n\r\nExample:\r\n\r\nInput: 4\r\nOutput: [2, 2]\r\nExplanation: The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. \r\nBut according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe given area won't exceed 10,000,000 and is a positive integer\r\nThe web page's width and length you designed must be positive integers.",
        "level": 1,
        "paid_only": false,
        "question_id": 492,
        "slug": "construct-the-rectangle",
        "tags": [],
        "title": "Construct the Rectangle",
        "url": "https://leetcode.com/problems/construct-the-rectangle/description/"
    },
    "493": {
        "description": "Given an array nums, we call (i, j) an important reverse pair if i < j and nums[i] > 2*nums[j].\r\n\r\nYou need to return the number of important reverse pairs in the given array.\r\n\r\nExample1:\r\n\r\nInput: [1,3,2,3,1]\r\nOutput: 2\r\n\r\n\r\nExample2:\r\n\r\nInput: [2,4,3,5,1]\r\nOutput: 3\r\n\r\n\r\nNote:\r\n\r\nThe length of the given array will not exceed 50,000.\r\nAll the numbers in the input array are in the range of 32-bit integer.",
        "level": 3,
        "paid_only": false,
        "question_id": 493,
        "slug": "reverse-pairs",
        "tags": [
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Binary Search Tree"
        ],
        "title": "Reverse Pairs",
        "url": "https://leetcode.com/problems/reverse-pairs/description/"
    },
    "494": {
        "description": "You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols + and -. For each integer, you should choose one from + and - as its new symbol.\r\n \r\n\r\nFind out how many ways to assign symbols to make sum of integers equal to target S.  \r\n\r\n\r\nExample 1:\r\n\r\nInput: nums is [1, 1, 1, 1, 1], S is 3. \r\nOutput: 5\r\nExplanation: \r\n\r\n-1+1+1+1+1 = 3\r\n+1-1+1+1+1 = 3\r\n+1+1-1+1+1 = 3\r\n+1+1+1-1+1 = 3\r\n+1+1+1+1-1 = 3\r\n\r\nThere are 5 ways to assign symbols to make the sum of nums be target 3.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the given array is positive and will not exceed 20. \r\nThe sum of elements in the given array will not exceed 1000.\r\nYour output answer is guaranteed to be fitted in a 32-bit integer.",
        "level": 2,
        "paid_only": false,
        "question_id": 494,
        "slug": "target-sum",
        "tags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "title": "Target Sum",
        "url": "https://leetcode.com/problems/target-sum/description/"
    },
    "495": {
        "description": "In LOL world, there is a hero called Teemo and his attacking can make his enemy Ashe be in poisoned condition. Now, given the Teemo's attacking ascending time series towards Ashe and the poisoning time duration per Teemo's attacking, you need to output the total time that Ashe is in poisoned condition.\r\n\r\n\r\nYou may assume that Teemo attacks at the very beginning of a specific time point, and makes Ashe be in poisoned condition immediately.\r\n\r\nExample 1:\r\n\r\nInput: [1,4], 2\r\nOutput: 4\r\nExplanation: At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned immediately. This poisoned status will last 2 seconds until the end of time point 2. And at time point 4, Teemo attacks Ashe again, and causes Ashe to be in poisoned status for another 2 seconds. So you finally need to output 4.\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2], 2\r\nOutput: 3\r\nExplanation: At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned. This poisoned status will last 2 seconds until the end of time point 2. However, at the beginning of time point 2, Teemo attacks Ashe again who is already in poisoned status. Since the poisoned status won't add up together, though the second poisoning attack will still work at time point 2, it will stop at the end of time point 3. So you finally need to output 3.\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume the length of given time series array won't exceed 10000.\r\nYou may assume the numbers in the Teemo's attacking time series and his poisoning time duration per attacking are non-negative integers, which won't exceed 10,000,000.",
        "level": 2,
        "paid_only": false,
        "question_id": 495,
        "slug": "teemo-attacking",
        "tags": [
            "Array"
        ],
        "title": "Teemo Attacking",
        "url": "https://leetcode.com/problems/teemo-attacking/description/"
    },
    "496": {
        "description": "You are given two arrays (without duplicates) nums1 and nums2 where nums1’s elements are subset of nums2. Find all the next greater numbers for nums1's elements in the corresponding places of nums2. \r\n\r\n\r\n\r\nThe Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. If it does not exist, output -1 for this number.\r\n\r\n\r\nExample 1:\r\n\r\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\r\nOutput: [-1,3,-1]\r\nExplanation:\r\n    For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.\r\n    For number 1 in the first array, the next greater number for it in the second array is 3.\r\n    For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: nums1 = [2,4], nums2 = [1,2,3,4].\r\nOutput: [3,-1]\r\nExplanation:\r\n    For number 2 in the first array, the next greater number for it in the second array is 3.\r\n    For number 4 in the first array, there is no next greater number for it in the second array, so output -1.\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nAll elements in nums1 and nums2 are unique.\r\nThe length of both nums1 and nums2 would not exceed 1000.",
        "level": 1,
        "paid_only": false,
        "question_id": 496,
        "slug": "next-greater-element-i",
        "tags": [
            "Stack"
        ],
        "title": "Next Greater Element I",
        "url": "https://leetcode.com/problems/next-greater-element-i/description/"
    },
    "498": {
        "description": "Given a matrix of M x N elements (M rows, N columns), return all elements of the matrix in diagonal order as shown in the below image. \r\n\r\n\r\nExample:\r\n\r\nInput:\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\nOutput:  [1,2,4,7,5,3,6,8,9]\r\nExplanation:\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe total number of elements of the given matrix will not exceed 10,000.",
        "level": 2,
        "paid_only": false,
        "question_id": 498,
        "slug": "diagonal-traverse",
        "tags": [],
        "title": "Diagonal Traverse",
        "url": "https://leetcode.com/problems/diagonal-traverse/description/"
    },
    "500": {
        "description": "Given a List of words, return the words that can be typed using letters of alphabet on only one row's of American keyboard like the image below. \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [\"Hello\", \"Alaska\", \"Dad\", \"Peace\"]\r\nOutput: [\"Alaska\", \"Dad\"]\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may use one character in the keyboard more than once.\r\nYou may assume the input string will only contain letters of alphabet.",
        "level": 1,
        "paid_only": false,
        "question_id": 500,
        "slug": "keyboard-row",
        "tags": [
            "Hash Table"
        ],
        "title": "Keyboard Row",
        "url": "https://leetcode.com/problems/keyboard-row/description/"
    },
    "501": {
        "description": "Given a binary search tree (BST) with duplicates, find all the mode(s) (the most frequently occurred element) in the given BST.\r\n\r\n\r\nAssume a BST is defined as follows:\r\n\r\nThe left subtree of a node contains only nodes with keys less than or equal to the node's key.\r\nThe right subtree of a node contains only nodes with keys greater than or equal to the node's key.\r\nBoth the left and right subtrees must also be binary search trees.\r\n\r\n\r\n\r\n\r\nFor example:\r\nGiven BST [1,null,2,2],\r\n\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   2\r\n\r\n\r\n\r\nreturn [2].\r\n\r\n\r\nNote:\r\nIf a tree has more than one mode, you can return them in any order.\r\n\r\n\r\nFollow up:\r\nCould you do that without using any extra space? (Assume that the implicit stack space incurred due to recursion does not count).",
        "level": 1,
        "paid_only": false,
        "question_id": 501,
        "slug": "find-mode-in-binary-search-tree",
        "tags": [
            "Tree"
        ],
        "title": "Find Mode in Binary Search Tree",
        "url": "https://leetcode.com/problems/find-mode-in-binary-search-tree/description/"
    },
    "502": {
        "description": "Suppose LeetCode will start its IPO soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the IPO. Since it has limited resources, it can only finish at most k distinct projects before the IPO. Help LeetCode design the best way to maximize its total capital after finishing at most k distinct projects. \r\n\r\n\r\n\r\nYou are given several projects. For each project i, it has a pure profit Pi and a minimum capital of Ci is needed to start the corresponding project. Initially, you have W capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.\r\n\r\n\r\n\r\nTo sum up, pick a list of at most k distinct projects from given projects to maximize your final capital, and output your final maximized capital.\r\n\r\n\r\nExample 1:\r\n\r\nInput: k=2, W=0, Profits=[1,2,3], Capital=[0,1,1].\r\n\r\nOutput: 4\r\n\r\nExplanation: Since your initial capital is 0, you can only start the project indexed 0.\r\n             After finishing it you will obtain profit 1 and your capital becomes 1.\r\n             With capital 1, you can either start the project indexed 1 or the project indexed 2.\r\n             Since you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.\r\n             Therefore, output the final maximized capital, which is 0 + 1 + 3 = 4.\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume all numbers in the input are non-negative integers.\r\nThe length of Profits array and Capital array will not exceed 50,000.\r\nThe answer is guaranteed to fit in a 32-bit signed integer.",
        "level": 3,
        "paid_only": false,
        "question_id": 502,
        "slug": "ipo",
        "tags": [
            "Heap",
            "Greedy"
        ],
        "title": "IPO",
        "url": "https://leetcode.com/problems/ipo/description/"
    },
    "503": {
        "description": "Given a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, output -1 for this number.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,2,1]\r\nOutput: [2,-1,2]\r\nExplanation: The first 1's next greater number is 2; The number 2 can't find next greater number; The second 1's next greater number needs to search circularly, which is also 2.\r\n\r\n\r\n\r\nNote:\r\nThe length of given array won't exceed 10000.",
        "level": 2,
        "paid_only": false,
        "question_id": 503,
        "slug": "next-greater-element-ii",
        "tags": [
            "Stack"
        ],
        "title": "Next Greater Element II",
        "url": "https://leetcode.com/problems/next-greater-element-ii/description/"
    },
    "504": {
        "description": "Given an integer, return its base 7 string representation.\r\n\r\nExample 1:\r\n\r\nInput: 100\r\nOutput: \"202\"\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: -7\r\nOutput: \"-10\"\r\n\r\n\r\n\r\nNote:\r\nThe input will be in range of [-1e7, 1e7].",
        "level": 1,
        "paid_only": false,
        "question_id": 504,
        "slug": "base-7",
        "tags": [],
        "title": "Base 7",
        "url": "https://leetcode.com/problems/base-7/description/"
    },
    "506": {
        "description": "Given scores of N athletes, find their relative ranks and the people with the top three highest scores, who will be awarded medals: \"Gold Medal\", \"Silver Medal\" and \"Bronze Medal\".\r\n\r\nExample 1:\r\n\r\nInput: [5, 4, 3, 2, 1]\r\nOutput: [\"Gold Medal\", \"Silver Medal\", \"Bronze Medal\", \"4\", \"5\"]\r\nExplanation: The first three athletes got the top three highest scores, so they got \"Gold Medal\", \"Silver Medal\" and \"Bronze Medal\". For the left two athletes, you just need to output their relative ranks according to their scores.\r\n\r\n\r\n\r\nNote:\r\n\r\nN is a positive integer and won't exceed 10,000.\r\nAll the scores of athletes are guaranteed to be unique.",
        "level": 1,
        "paid_only": false,
        "question_id": 506,
        "slug": "relative-ranks",
        "tags": [],
        "title": "Relative Ranks",
        "url": "https://leetcode.com/problems/relative-ranks/description/"
    },
    "507": {
        "description": "We define the Perfect Number is a positive integer that is equal to the sum of all its positive divisors except itself. \r\n\r\nNow, given an integer n, write a function that returns true when it is a perfect number and false when it is not.\r\n\r\n\r\nExample:\r\n\r\nInput: 28\r\nOutput: True\r\nExplanation: 28 = 1 + 2 + 4 + 7 + 14\r\n\r\n\r\n\r\nNote:\r\nThe input number n will not exceed 100,000,000. (1e8)",
        "level": 1,
        "paid_only": false,
        "question_id": 507,
        "slug": "perfect-number",
        "tags": [
            "Math"
        ],
        "title": "Perfect Number",
        "url": "https://leetcode.com/problems/perfect-number/description/"
    },
    "508": {
        "description": "Given the root of a tree, you are asked to find the most frequent subtree sum. The subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). So what is the most frequent subtree sum value? If there is a tie, return all the values with the highest frequency in any order.\r\n\r\n\r\nExamples 1\r\nInput:\r\n\r\n  5\r\n /  \\\r\n2   -3\r\n\r\nreturn [2, -3, 4], since all the values happen only once, return all of them in any order.\r\n\r\n\r\nExamples 2\r\nInput:\r\n\r\n  5\r\n /  \\\r\n2   -5\r\n\r\nreturn [2], since 2 happens twice, however -5 only occur once.\r\n\r\n\r\nNote:\r\nYou may assume the sum of values in any subtree is in the range of 32-bit signed integer.",
        "level": 2,
        "paid_only": false,
        "question_id": 508,
        "slug": "most-frequent-subtree-sum",
        "tags": [
            "Hash Table",
            "Tree"
        ],
        "title": "Most Frequent Subtree Sum",
        "url": "https://leetcode.com/problems/most-frequent-subtree-sum/description/"
    },
    "513": {
        "description": "Given a binary tree, find the leftmost value in the last row of the tree. \r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n\r\n    2\r\n   / \\\r\n  1   3\r\n\r\nOutput:\r\n1\r\n\r\n\r\n\r\n  Example 2: \r\n\r\nInput:\r\n\r\n        1\r\n       / \\\r\n      2   3\r\n     /   / \\\r\n    4   5   6\r\n       /\r\n      7\r\n\r\nOutput:\r\n7\r\n\r\n\r\n\r\nNote:\r\nYou may assume the tree (i.e., the given root node) is not NULL.",
        "level": 2,
        "paid_only": false,
        "question_id": 513,
        "slug": "find-bottom-left-tree-value",
        "tags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Find Bottom Left Tree Value",
        "url": "https://leetcode.com/problems/find-bottom-left-tree-value/description/"
    },
    "514": {
        "description": "In the video game Fallout 4, the quest \"Road to Freedom\" requires players to reach a metal dial called the \"Freedom Trail Ring\", and use the dial to spell a specific keyword in order to open the door. \r\n\r\n\r\n\r\nGiven a string ring, which represents the code engraved on the outer ring and another string key, which represents the keyword needs to be spelled. You need to find the minimum number of steps in order to spell all the characters in the keyword.\r\n\r\nInitially, the first character of the ring is aligned at 12:00 direction. You need to spell all the characters in the string key one by one by rotating the ring clockwise or anticlockwise to make each character of the string key aligned at 12:00 direction and then by pressing the center button.\r\n\r\n\r\nAt the stage of rotating the ring to spell the key character key[i]:\r\n\r\nYou can rotate the ring clockwise or anticlockwise one place, which counts as 1 step. The final purpose of the rotation is to align one of the string ring's characters at the 12:00 direction, where this character must equal to the character key[i].\r\n\r\nIf the character key[i] has been aligned at the 12:00 direction, you need to press the center button to spell, which also counts as 1 step. After the pressing, you could begin to spell the next character in the key (next stage), otherwise, you've finished all the spelling.\r\n\r\n\r\n\r\n\r\nExample:\r\n\r\n\r\n\r\n\r\n\r\nInput: ring = \"godding\", key = \"gd\"\r\nOutput: 4\r\nExplanation: For the first key character 'g', since it is already in place, we just need 1 step to spell this character.  For the second key character 'd', we need to rotate the ring \"godding\" anticlockwise by two steps to make it become \"ddinggo\". Also, we need 1 more step for spelling. So the final output is 4.\r\n\r\n\r\n\r\nNote:\r\n\r\nLength of both ring and key will be in range 1 to 100.\r\nThere are only lowercase letters in both strings and might be some duplcate characters in both strings.\r\nIt's guaranteed that string key could always be spelled by rotating the string ring.",
        "level": 3,
        "paid_only": false,
        "question_id": 514,
        "slug": "freedom-trail",
        "tags": [
            "Divide and Conquer",
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "title": "Freedom Trail",
        "url": "https://leetcode.com/problems/freedom-trail/description/"
    },
    "515": {
        "description": "You need to find the largest value in each row of a binary tree.\r\n\r\nExample:\r\n\r\nInput: \r\n\r\n          1\r\n         / \\\r\n        3   2\r\n       / \\   \\  \r\n      5   3   9 \r\n\r\nOutput: [1, 3, 9]",
        "level": 2,
        "paid_only": false,
        "question_id": 515,
        "slug": "find-largest-value-in-each-tree-row",
        "tags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Find Largest Value in Each Tree Row",
        "url": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/description/"
    },
    "516": {
        "description": "Given a string s, find the longest palindromic subsequence's length in s. You may assume that the maximum length of s is 1000.\r\n\r\n\r\nExample 1:\r\nInput: \r\n\r\n\"bbbab\"\r\n\r\nOutput: \r\n\r\n4\r\n\r\nOne possible longest palindromic subsequence is \"bbbb\".\r\n\r\n\r\nExample 2:\r\nInput:\r\n\r\n\"cbbd\"\r\n\r\nOutput:\r\n\r\n2\r\n\r\nOne possible longest palindromic subsequence is \"bb\".",
        "level": 2,
        "paid_only": false,
        "question_id": 516,
        "slug": "longest-palindromic-subsequence",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Longest Palindromic Subsequence",
        "url": "https://leetcode.com/problems/longest-palindromic-subsequence/description/"
    },
    "517": {
        "description": "You have n super washing machines on a line. Initially, each washing machine has some dresses or is empty. \r\n\r\n\r\nFor each move, you could choose any m (1 ≤ m ≤ n) washing machines, and pass one dress of each washing machine to one of its adjacent washing machines  at the same time .  \r\n\r\nGiven an integer array representing the number of dresses in each washing machine from left to right on the line, you should find the minimum number of moves to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.\r\n\r\nExample1\r\n\r\nInput: [1,0,5]\r\n\r\nOutput: 3\r\n\r\nExplanation: \r\n1st move:    1     0 <-- 5    =>    1     1     4\r\n2nd move:    1 <-- 1 <-- 4    =>    2     1     3    \r\n3rd move:    2     1 <-- 3    =>    2     2     2   \r\n\r\n\r\nExample2\r\n\r\nInput: [0,3,0]\r\n\r\nOutput: 2\r\n\r\nExplanation: \r\n1st move:    0 <-- 3     0    =>    1     2     0    \r\n2nd move:    1     2 --> 0    =>    1     1     1     \r\n\r\n\r\nExample3\r\n\r\nInput: [0,2,0]\r\n\r\nOutput: -1\r\n\r\nExplanation: \r\nIt's impossible to make all the three washing machines have the same number of dresses. \r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe range of n is [1, 10000].\r\nThe range of dresses number in a super washing machine is [0, 1e5].",
        "level": 3,
        "paid_only": false,
        "question_id": 517,
        "slug": "super-washing-machines",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Super Washing Machines",
        "url": "https://leetcode.com/problems/super-washing-machines/description/"
    },
    "518": {
        "description": "You are given coins of different denominations and a total amount of money. Write a function to compute the number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.\r\n\r\n\r\nNote: \r\nYou can assume that\r\n\r\n 0 <= amount <= 5000\r\n 1 <= coin <= 5000\r\n the number of coins is less than 500 \r\n the answer is guaranteed to fit into signed 32-bit integer\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: amount = 5, coins = [1, 2, 5]\r\nOutput: 4\r\nExplanation: there are four ways to make up the amount:\r\n5=5\r\n5=2+2+1\r\n5=2+1+1+1\r\n5=1+1+1+1+1\r\n\r\n\r\nExample 2:\r\n\r\nInput: amount = 3, coins = [2]\r\nOutput: 0\r\nExplanation: the amount of 3 cannot be made up just with coins of 2.\r\n\r\n\r\nExample 3:\r\n\r\nInput: amount = 10, coins = [10] \r\nOutput: 1",
        "level": 2,
        "paid_only": false,
        "question_id": 518,
        "slug": "coin-change-2",
        "tags": [],
        "title": "Coin Change 2",
        "url": "https://leetcode.com/problems/coin-change-2/description/"
    },
    "520": {
        "description": "Given a word, you need to judge whether the usage of capitals in it is right or not.\r\n\r\n\r\n\r\nWe define the usage of capitals in a word to be right when one of the following cases holds:\r\n\r\nAll letters in this word are capitals, like \"USA\".\r\nAll letters in this word are not capitals, like \"leetcode\".\r\nOnly the first letter in this word is capital if it has more than one letter, like \"Google\".\r\n\r\nOtherwise, we define that this word doesn't use capitals in a right way.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"USA\"\r\nOutput: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"FlaG\"\r\nOutput: False\r\n\r\n\r\n\r\nNote:\r\nThe input will be a non-empty word consisting of uppercase and lowercase latin letters.",
        "level": 1,
        "paid_only": false,
        "question_id": 520,
        "slug": "detect-capital",
        "tags": [
            "String"
        ],
        "title": "Detect Capital",
        "url": "https://leetcode.com/problems/detect-capital/description/"
    },
    "521": {
        "description": "Given a group of two strings, you need to find the longest uncommon subsequence of this group of two strings.\r\nThe longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be any subsequence of the other strings.\r\n\r\n\r\n\r\nA subsequence is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\r\n\r\n\r\n\r\nThe input will be two strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn't exist, return -1.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"aba\", \"cdc\"\r\nOutput: 3\r\nExplanation: The longest uncommon subsequence is \"aba\" (or \"cdc\"), because \"aba\" is a subsequence of \"aba\", but not a subsequence of any other strings in the group of two strings. \r\n\r\n\r\n\r\nNote:\r\n\r\nBoth strings' lengths will not exceed 100.\r\nOnly letters from a ~ z will appear in input strings.",
        "level": 1,
        "paid_only": false,
        "question_id": 521,
        "slug": "longest-uncommon-subsequence-i",
        "tags": [
            "String"
        ],
        "title": "Longest Uncommon Subsequence I ",
        "url": "https://leetcode.com/problems/longest-uncommon-subsequence-i/description/"
    },
    "522": {
        "description": "Given a list of strings, you need to find the longest uncommon subsequence among them. The longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be any subsequence of the other strings.\r\n\r\n\r\n\r\nA subsequence is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\r\n\r\n\r\n\r\nThe input will be a list of strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn't exist, return -1.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"aba\", \"cdc\", \"eae\"\r\nOutput: 3\r\n\r\n\r\n\r\nNote:\r\n\r\nAll the given strings' lengths will not exceed 10.\r\nThe length of the given list will be in the range of [2, 50].",
        "level": 2,
        "paid_only": false,
        "question_id": 522,
        "slug": "longest-uncommon-subsequence-ii",
        "tags": [
            "String"
        ],
        "title": "Longest Uncommon Subsequence II",
        "url": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/description/"
    },
    "523": {
        "description": "Given a list of non-negative numbers and a target integer k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to the multiple of k, that is, sums up to n*k where n is also an integer.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [23, 2, 4, 6, 7],  k=6\r\nOutput: True\r\nExplanation: Because [2, 4] is a continuous subarray of size 2 and sums up to 6.\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [23, 2, 6, 4, 7],  k=6\r\nOutput: True\r\nExplanation: Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the array won't exceed 10,000.\r\nYou may assume the sum of all the numbers is in the range of a signed 32-bit integer.",
        "level": 2,
        "paid_only": false,
        "question_id": 523,
        "slug": "continuous-subarray-sum",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Continuous Subarray Sum",
        "url": "https://leetcode.com/problems/continuous-subarray-sum/description/"
    },
    "524": {
        "description": "Given a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\r\n\r\nExample 1:\r\n\r\nInput:\r\ns = \"abpcplea\", d = [\"ale\",\"apple\",\"monkey\",\"plea\"]\r\n\r\nOutput: \r\n\"apple\"\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\ns = \"abpcplea\", d = [\"a\",\"b\",\"c\"]\r\n\r\nOutput: \r\n\"a\"\r\n\r\n\r\n\r\nNote:\r\n\r\nAll the strings in the input will only contain lower-case letters.\r\nThe size of the dictionary won't exceed 1,000.\r\nThe length of all the strings in the input won't exceed 1,000.",
        "level": 2,
        "paid_only": false,
        "question_id": 524,
        "slug": "longest-word-in-dictionary-through-deleting",
        "tags": [
            "Two Pointers",
            "Sort"
        ],
        "title": "Longest Word in Dictionary through Deleting",
        "url": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/description/"
    },
    "525": {
        "description": "Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1. \r\n\r\n\r\nExample 1:\r\n\r\nInput: [0,1]\r\nOutput: 2\r\nExplanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [0,1,0]\r\nOutput: 2\r\nExplanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\r\n\r\n\r\n\r\nNote:\r\nThe length of the given binary array will not exceed 50,000.",
        "level": 2,
        "paid_only": false,
        "question_id": 525,
        "slug": "contiguous-array",
        "tags": [
            "Hash Table"
        ],
        "title": "Contiguous Array",
        "url": "https://leetcode.com/problems/contiguous-array/description/"
    },
    "526": {
        "description": "Suppose you have N integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these N numbers successfully if one of the following is true for the ith position (1 <= i <= N) in this array:\r\n\r\nThe number at the ith position is divisible by i.\r\ni is divisible by the number at the ith position.\r\n\r\n\r\n\r\n\r\nNow given N, how many beautiful arrangements can you construct?\r\n\r\n\r\nExample 1:\r\n\r\nInput: 2\r\nOutput: 2\r\nExplanation: \r\nThe first beautiful arrangement is [1, 2]:\r\nNumber at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).\r\nNumber at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).\r\nThe second beautiful arrangement is [2, 1]:\r\nNumber at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).\r\nNumber at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.\r\n\r\n\r\n\r\nNote:\r\n\r\nN is a positive integer and will not exceed 15.",
        "level": 2,
        "paid_only": false,
        "question_id": 526,
        "slug": "beautiful-arrangement",
        "tags": [
            "Backtracking"
        ],
        "title": "Beautiful Arrangement",
        "url": "https://leetcode.com/problems/beautiful-arrangement/description/"
    },
    "527": {
        "description": "Given an array of n distinct non-empty strings, you need to generate minimal\npossible abbreviations for every word following rules below.\n\n  1. Begin with the first character and then the number of characters abbreviated, which followed by the last character.\n  2. If there are any conflict, that is more than one words share the same abbreviation, a longer prefix is used instead of only the first character until making the map from word to abbreviation become unique. In other words, a final abbreviation cannot map to more than one original words.\n  3. If the abbreviation doesn't make the word shorter, then keep it as original.\n\nExample:\n\n\n\n    Input: [\"like\", \"god\", \"internal\", \"me\", \"internet\", \"interval\", \"intension\", \"face\", \"intrusion\"]\rOutput: [\"l2e\",\"god\",\"internal\",\"me\",\"i6t\",\"interval\",\"inte4n\",\"f2e\",\"intr4n\"]\r\n\n\n\nNote:\n\n  1. Both n and the length of each word will not exceed 400.\n  2. The length of each word is greater than 1.\n  3. The words consist of lowercase English letters only.\n  4. The return answers should be in the same order as the original array.",
        "level": 3,
        "paid_only": true,
        "question_id": 527,
        "slug": "word-abbreviation",
        "tags": [],
        "title": "Word Abbreviation",
        "url": "https://leetcode.com/problems/word-abbreviation/description/"
    },
    "529": {
        "description": "Let's play the minesweeper game (Wikipedia, online game)! \r\n\r\nYou are given a 2D char matrix representing the game board. 'M' represents an unrevealed mine, 'E' represents an unrevealed empty square, 'B' represents a revealed blank square that has no adjacent (above, below, left, right, and all 4 diagonals) mines, digit ('1' to '8') represents how many mines are adjacent to this revealed square, and finally 'X' represents a revealed mine.\r\n\r\nNow given the next click position (row and column indices) among all the unrevealed squares ('M' or 'E'), return the board after revealing this position according to the following rules: \r\n\r\n\r\n\r\nIf a mine ('M') is revealed, then the game is over - change it to 'X'.\r\nIf an empty square ('E') with no adjacent mines is revealed, then change it to revealed blank ('B') and all of its adjacent unrevealed squares should be revealed recursively.\r\nIf an empty square ('E') with at least one adjacent mine is revealed, then change it to a digit ('1' to '8') representing the number of adjacent mines.\r\nReturn the board when no more squares will be revealed.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\n\r\n[['E', 'E', 'E', 'E', 'E'],\r\n ['E', 'E', 'M', 'E', 'E'],\r\n ['E', 'E', 'E', 'E', 'E'],\r\n ['E', 'E', 'E', 'E', 'E']]\r\n\r\nClick : [3,0]\r\n\r\nOutput: \r\n\r\n[['B', '1', 'E', '1', 'B'],\r\n ['B', '1', 'M', '1', 'B'],\r\n ['B', '1', '1', '1', 'B'],\r\n ['B', 'B', 'B', 'B', 'B']]\r\n\r\nExplanation:\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\n\r\n[['B', '1', 'E', '1', 'B'],\r\n ['B', '1', 'M', '1', 'B'],\r\n ['B', '1', '1', '1', 'B'],\r\n ['B', 'B', 'B', 'B', 'B']]\r\n\r\nClick : [1,2]\r\n\r\nOutput: \r\n\r\n[['B', '1', 'E', '1', 'B'],\r\n ['B', '1', 'X', '1', 'B'],\r\n ['B', '1', '1', '1', 'B'],\r\n ['B', 'B', 'B', 'B', 'B']]\r\n\r\nExplanation:\r\n\r\n\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe range of the input matrix's height and width is [1,50].\r\nThe click position will only be an unrevealed square ('M' or 'E'), which also means the input board contains at least one clickable square.\r\nThe input board won't be a stage when game is over (some mines have been revealed).\r\nFor simplicity, not mentioned rules should be ignored in this problem. For example, you don't need to reveal all the unrevealed mines when the game is over, consider any cases that you will win the game or flag any squares.",
        "level": 2,
        "paid_only": false,
        "question_id": 529,
        "slug": "minesweeper",
        "tags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Minesweeper",
        "url": "https://leetcode.com/problems/minesweeper/description/"
    },
    "530": {
        "description": "Given a binary search tree with non-negative values, find the minimum absolute difference between values of any two nodes.\r\n\r\n\r\nExample:\r\n\r\nInput:\r\n\r\n   1\r\n    \\\r\n     3\r\n    /\r\n   2\r\n\r\nOutput:\r\n1\r\n\r\nExplanation:\r\nThe minimum absolute difference is 1, which is the difference between 2 and 1 (or between 2 and 3).\r\n\r\n\r\n\r\n\r\nNote:\r\nThere are at least two nodes in this BST.",
        "level": 1,
        "paid_only": false,
        "question_id": 530,
        "slug": "minimum-absolute-difference-in-bst",
        "tags": [
            "Binary Search Tree"
        ],
        "title": "Minimum Absolute Difference in BST",
        "url": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/description/"
    },
    "531": {
        "description": "Given a picture consisting of black and white pixels, find the number of black\nlonely pixels.\n\nThe picture is represented by a 2D char array consisting of 'B' and 'W', which\nmeans black and white pixels respectively.\n\nA black lonely pixel is character 'B' that located at a specific position\nwhere the same row and same column don't have any other black pixels.\n\nExample:\n\n\n\n    Input: \r[['W', 'W', 'B'],\r ['W', 'B', 'W'],\r ['B', 'W', 'W']]\r\rOutput: 3\rExplanation: All the three 'B's are black lonely pixels.\r\n\n\n\nNote:\n\n  1. The range of width and height of the input 2D array is [1,500].",
        "level": 2,
        "paid_only": true,
        "question_id": 531,
        "slug": "lonely-pixel-i",
        "tags": [],
        "title": "Lonely Pixel I",
        "url": "https://leetcode.com/problems/lonely-pixel-i/description/"
    },
    "532": {
        "description": "Given an array of integers and an integer k, you need to find the number of unique k-diff pairs in the array. Here a k-diff pair is defined as an integer pair (i, j), where i and j are both numbers in the array and their absolute difference is k.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [3, 1, 4, 1, 5], k = 2\r\nOutput: 2\r\nExplanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).Although we have two 1s in the input, we should only return the number of unique pairs.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:[1, 2, 3, 4, 5], k = 1\r\nOutput: 4\r\nExplanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [1, 3, 1, 5, 4], k = 0\r\nOutput: 1\r\nExplanation: There is one 0-diff pair in the array, (1, 1).\r\n\r\n\r\n\r\nNote:\r\n\r\nThe pairs (i, j) and (j, i) count as the same pair.\r\nThe length of the array won't exceed 10,000.\r\nAll the integers in the given input belong to the range: [-1e7, 1e7].",
        "level": 1,
        "paid_only": false,
        "question_id": 532,
        "slug": "k-diff-pairs-in-an-array",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "K-diff Pairs in an Array",
        "url": "https://leetcode.com/problems/k-diff-pairs-in-an-array/description/"
    },
    "533": {
        "description": "Given a picture consisting of black and white pixels, and a positive integer\nN, find the number of black pixels located at some specific row **R** and\ncolumn **C** that align with all the following rules:\n\n  1. Row R and column C both contain exactly N black pixels.\n  2. For all rows that have a black pixel at column C, they should be exactly the same as row R\n\nThe picture is represented by a 2D char array consisting of 'B' and 'W', which\nmeans black and white pixels respectively.\n\n**Example:**\n\n\n    **Input:**                                            \r[['W', 'B', 'W', 'B', 'B', 'W'],    \r ['W', 'B', 'W', 'B', 'B', 'W'],    \r ['W', 'B', 'W', 'B', 'B', 'W'],    \r ['W', 'W', 'B', 'W', 'B', 'W']] \r\rN = 3\r**Output:** 6\r**Explanation:** All the bold 'B' are the black pixels we need (all 'B's at column 1 and 3).\r        0    1    2    3    4    5         column index                                            \r0    [['W', **'B'**, 'W', **'B'**, 'B', 'W'],    \r1     ['W', **'B'**, 'W', **'B'**, 'B', 'W'],    \r2     ['W', **'B'**, 'W', **'B'**, 'B', 'W'],    \r3     ['W', 'W', 'B', 'W', 'B', 'W']]    \rrow index\r\rTake 'B' at row R = 0 and column C = 1 as an example:\rRule 1, row R = 0 and column C = 1 both have exactly N = 3 black pixels. \rRule 2, the rows have black pixel at column C = 1 are row 0, row 1 and row 2. They are exactly the same as row R = 0.\r\r\n\n**Note:**\n    1. The range of width and height of the input 2D array is [1,200].",
        "level": 2,
        "paid_only": true,
        "question_id": 533,
        "slug": "lonely-pixel-ii",
        "tags": [],
        "title": "Lonely Pixel II",
        "url": "https://leetcode.com/problems/lonely-pixel-ii/description/"
    },
    "534": {
        "description": "Note: For the coding companion problem, please see: Encode and Decode TinyURL.\r\n\r\nHow would you design a URL shortening service that is similar to TinyURL?\r\n\r\nBackground:\r\nTinyURL is a URL shortening service where you enter a URL such as https://leetcode.com/problems/design-tinyurl and it returns a short URL such as http://tinyurl.com/4e9iAk.\r\n\r\n\r\nRequirements:\r\n\r\nFor instance, \"http://tinyurl.com/4e9iAk\" is the tiny url for the page \"https://leetcode.com/problems/design-tinyurl\". The identifier (the highlighted part) can be any string with 6 alphanumeric characters containing 0-9, a-z, A-Z.\r\n\r\nEach shortened URL must be unique; that is, no two different URLs can be shortened to the same URL.\r\n\r\n\r\n\r\nNote about Questions:Below are just a small subset of questions to get you started. In real world, there could be many follow ups and questions possible and the discussion is open-ended (No one true or correct way to solve a problem). If you have more ideas or questions, please ask in Discuss and we may compile it here!\r\n\r\nQuestions:\r\n\r\nHow many unique identifiers possible? Will you run out of unique URLs?\r\nShould the identifier be increment or not? Which is easier to design? Pros and cons?\r\nMapping an identifier to an URL and its reversal - Does this problem ring a bell to you?\r\nHow do you store the URLs? Does a simple flat file database work?\r\nWhat is the bottleneck of the system? Is it read-heavy or write-heavy?\r\nEstimate the maximum number of URLs a single machine can store.\r\nEstimate the maximum number of queries per second (QPS) for decoding a shortened URL in a single machine.\r\nHow would you scale the service? For example, a viral link which is shared in social media could result in a peak QPS at a moment's notice.\r\nHow could you handle redundancy? i,e, if a server is down, how could you ensure the service is still operational?\r\nKeep URLs forever or prune, pros/cons? How we do pruning? (Contributed by @alex_svetkin)\r\nWhat API would you provide to a third-party developer? (Contributed by @alex_svetkin)\r\nIf you can enable caching, what would you cache and what's the expiry time? (Contributed by @Humandroid)\r\n\r\n\r\n\r\n\r\n.hilight {\r\n  color: #d14;\r\n  background-color: #f7f7f9;\r\n  padding: 1px 3px;\r\n  border: 1px solid #e1e1e8\"\r\n}",
        "level": 2,
        "question_id": 534,
        "slug": "design-tinyurl",
        "tags": [],
        "title": "Design TinyURL",
        "url": "https://leetcode.com/problems/design-tinyurl/description/"
    },
    "535": {
        "description": "Note: This is a companion problem to the System Design problem: Design TinyURL.\r\n\r\nTinyURL is a URL shortening service where you enter a URL such as https://leetcode.com/problems/design-tinyurl and it returns a short URL such as http://tinyurl.com/4e9iAk.\r\n\r\nDesign the encode and decode methods for the TinyURL service. There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.",
        "level": 2,
        "paid_only": false,
        "question_id": 535,
        "slug": "encode-and-decode-tinyurl",
        "tags": [
            "Hash Table",
            "Math"
        ],
        "title": "Encode and Decode TinyURL",
        "url": "https://leetcode.com/problems/encode-and-decode-tinyurl/description/"
    },
    "536": {
        "description": "You need to construct a binary tree from a string consisting of parenthesis\nand integers.\n\nThe whole input represents a binary tree. It contains an integer followed by\nzero, one or two pairs of parenthesis. The integer represents the root's value\nand a pair of parenthesis contains a child binary tree with the same\nstructure.\n\nYou always start to construct the left child node of the parent first if it\nexists.\n\nExample:\n\n\n\n    Input: \"4(2(3)(1))(6(5))\"\rOutput: return the tree root node representing the following tree:\r\r       4\r     /   \\\r    2     6\r   / \\   / \r  3   1 5   \r\n\n\n\nNote:\n\n  1. There will only be `'('`, `')'`, `'-'` and `'0'` ~ `'9'` in the input string.\n  2. An empty tree is represented by `\"\"` instead of `\"()\"`.",
        "level": 2,
        "paid_only": true,
        "question_id": 536,
        "slug": "construct-binary-tree-from-string",
        "tags": [],
        "title": "Construct Binary Tree from String",
        "url": "https://leetcode.com/problems/construct-binary-tree-from-string/description/"
    },
    "537": {
        "description": "Given two strings representing two complex numbers.\r\n\r\n\r\nYou need to return a string representing their multiplication. Note i2 = -1 according to the definition.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"1+1i\", \"1+1i\"\r\nOutput: \"0+2i\"\r\nExplanation: (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form of 0+2i.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"1+-1i\", \"1+-1i\"\r\nOutput: \"0+-2i\"\r\nExplanation: (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form of 0+-2i.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input strings will not have extra blank.\r\nThe input strings will be given in the form of a+bi, where the integer a and b will both belong to the range of [-100, 100]. And the output should be also in this form.",
        "level": 2,
        "paid_only": false,
        "question_id": 537,
        "slug": "complex-number-multiplication",
        "tags": [
            "Math",
            "String"
        ],
        "title": "Complex Number Multiplication",
        "url": "https://leetcode.com/problems/complex-number-multiplication/description/"
    },
    "538": {
        "description": "Given a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.\r\n\r\n\r\nExample:\r\n\r\nInput: The root of a Binary Search Tree like this:\r\n              5\r\n            /   \\\r\n           2     13\r\n\r\nOutput: The root of a Greater Tree like this:\r\n             18\r\n            /   \\\r\n          20     13",
        "level": 1,
        "paid_only": false,
        "question_id": 538,
        "slug": "convert-bst-to-greater-tree",
        "tags": [
            "Tree"
        ],
        "title": "Convert BST to Greater Tree",
        "url": "https://leetcode.com/problems/convert-bst-to-greater-tree/description/"
    },
    "539": {
        "description": "Given a list of 24-hour clock time points in \"Hour:Minutes\" format, find the minimum minutes difference between any two time points in the list. \r\n\r\nExample 1:\r\n\r\nInput: [\"23:59\",\"00:00\"]\r\nOutput: 1\r\n\r\n\r\n\r\nNote:\r\n\r\nThe number of time points in the given list is at least 2 and won't exceed 20000.\r\nThe input time is legal and ranges from 00:00 to 23:59.",
        "level": 2,
        "paid_only": false,
        "question_id": 539,
        "slug": "minimum-time-difference",
        "tags": [
            "String"
        ],
        "title": "Minimum Time Difference",
        "url": "https://leetcode.com/problems/minimum-time-difference/description/"
    },
    "540": {
        "description": "Given a sorted array consisting of only integers where every element appears twice except for one element which appears once. Find this single element that appears only once. \r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,1,2,3,3,4,4,8,8]\r\nOutput: 2\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [3,3,7,7,10,11,11]\r\nOutput: 10\r\n\r\n\r\n\r\nNote:\r\nYour solution should run in O(log n) time and O(1) space.",
        "level": 2,
        "paid_only": false,
        "question_id": 540,
        "slug": "single-element-in-a-sorted-array",
        "tags": [],
        "title": "Single Element in a Sorted Array",
        "url": "https://leetcode.com/problems/single-element-in-a-sorted-array/description/"
    },
    "541": {
        "description": "Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.\r\n\r\n\r\nExample:\r\n\r\nInput: s = \"abcdefg\", k = 2\r\nOutput: \"bacdfeg\"\r\n\r\n\r\n\r\nRestrictions: \r\n\r\n The string consists of lower English letters only.\r\n Length of the given string and k will in the range [1, 10000]",
        "level": 1,
        "paid_only": false,
        "question_id": 541,
        "slug": "reverse-string-ii",
        "tags": [
            "String"
        ],
        "title": "Reverse String II",
        "url": "https://leetcode.com/problems/reverse-string-ii/description/"
    },
    "542": {
        "description": "Given a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.\r\n\r\nThe distance between two adjacent cells is 1.\r\n\r\nExample 1: \r\nInput:\r\n\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n\r\nOutput:\r\n\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n\r\n\r\n\r\nExample 2: \r\nInput:\r\n\r\n0 0 0\r\n0 1 0\r\n1 1 1\r\n\r\nOutput:\r\n\r\n0 0 0\r\n0 1 0\r\n1 2 1\r\n\r\n\r\n\r\nNote:\r\n\r\nThe number of elements of the given matrix will not exceed 10,000.\r\nThere are at least one 0 in the given matrix.\r\nThe cells are adjacent in only four directions: up, down, left and right.",
        "level": 2,
        "paid_only": false,
        "question_id": 542,
        "slug": "01-matrix",
        "tags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "01 Matrix",
        "url": "https://leetcode.com/problems/01-matrix/description/"
    },
    "543": {
        "description": "Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.\r\n\r\n\r\n\r\nExample:\r\nGiven a binary tree \r\n\r\n          1\r\n         / \\\r\n        2   3\r\n       / \\     \r\n      4   5    \r\n\r\n\r\n\r\nReturn 3, which is the length of the path [4,2,1,3] or [5,2,1,3].\r\n\r\n\r\nNote:\r\nThe length of path between two nodes is represented by the number of edges between them.",
        "level": 1,
        "paid_only": false,
        "question_id": 543,
        "slug": "diameter-of-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Diameter of Binary Tree",
        "url": "https://leetcode.com/problems/diameter-of-binary-tree/description/"
    },
    "544": {
        "description": "During the NBA playoffs, we always arrange the rather strong team to play with\nthe rather weak team, like make the rank 1 team play with the rank nth team,\nwhich is a good strategy to make the contest more interesting. Now, you're\ngiven n teams, you need to output their final contest matches in the form of a\nstring.\n\nThe n teams are given in the form of positive integers from 1 to n, which\nrepresents their initial rank. (Rank 1 is the strongest team and Rank n is the\nweakest team.) We'll use parentheses('(', ')') and commas(',') to represent\nthe contest team pairing - parentheses('(' , ')') for pairing and commas(',')\nfor partition. During the pairing process in each round, you always need to\nfollow the strategy of making the rather strong one pair with the rather weak\none.\n\nExample 1:\n\n\n\n    Input: 2\rOutput: (1,2)\rExplanation: \rInitially, we have the team 1 and the team 2, placed like: 1,2.\rThen we pair the team (1,2) together with '(', ')' and ',', which is the final answer.\r\n\n\n\nExample 2:\n\n\n\n    Input: 4\rOutput: ((1,4),(2,3))\rExplanation: \rIn the first round, we pair the team 1 and 4, the team 2 and 3 together, as we need to make the strong team and weak team together.\rAnd we got (1,4),(2,3).\rIn the second round, the winners of (1,4) and (2,3) need to play again to generate the final winner, so you need to add the paratheses outside them.\rAnd we got the final answer ((1,4),(2,3)).\r\n\n\n\nExample 3:\n\n\n\n    Input: 8\rOutput: (((1,8),(4,5)),((2,7),(3,6)))\rExplanation: \rFirst round: (1,8),(2,7),(3,6),(4,5)\rSecond round: ((1,8),(4,5)),((2,7),(3,6))\rThird round: (((1,8),(4,5)),((2,7),(3,6)))\rSince the third round will generate the final winner, you need to output the answer (((1,8),(4,5)),((2,7),(3,6))).\r\n\n\n\nNote:\n\n  1. The n is in range [2, 212].\n  2. We ensure that the input n can be converted into the form 2k, where k is a positive integer.",
        "level": 2,
        "paid_only": true,
        "question_id": 544,
        "slug": "output-contest-matches",
        "tags": [],
        "title": "Output Contest Matches",
        "url": "https://leetcode.com/problems/output-contest-matches/description/"
    },
    "545": {
        "description": "Given a binary tree, return the values of its boundary in anti-clockwise\ndirection starting from root. Boundary includes left boundary, leaves, and\nright boundary in order without duplicate nodes.\n\nLeft boundary is defined as the path from root to the left-most node. Right\nboundary is defined as the path from root to the right-most node. If the root\ndoesn't have left subtree or right subtree, then the root itself is left\nboundary or right boundary. Note this definition only applies to the input\nbinary tree, and not applies to any subtrees.\n\nThe left-most node is defined as a leaf node you could reach when you always\nfirstly travel to the left subtree if exists. If not, travel to the right\nsubtree. Repeat until you reach a leaf node.\n\nThe right-most node is also defined by the same way with left and right\nexchanged.\n\nExample 1\n\n\n\n    Input:\r  1\r   \\\r    2\r   / \\\r  3   4\r\rOuput:\r[1, 3, 4, 2]\r\rExplanation:\rThe root doesn't have left subtree, so the root itself is left boundary.\rThe leaves are node 3 and 4.\rThe right boundary are node 1,2,4. Note the anti-clockwise direction means you should output reversed right boundary.\rSo order them in anti-clockwise without duplicates and we have [1,3,4,2].\r\n\n\n\nExample 2\n\n\n\n    Input:\r    ____1_____\r   /          \\\r  2            3\r / \\          / \r4   5        6   \r   / \\      / \\\r  7   8    9  10  \r       \rOuput:\r[1,2,4,7,8,9,10,6,3]\r\rExplanation:\rThe left boundary are node 1,2,4. (4 is the left-most node according to definition)\rThe leaves are node 4,7,8,9,10.\rThe right boundary are node 1,3,6,10. (10 is the right-most node).\rSo order them in anti-clockwise without duplicate nodes we have [1,2,4,7,8,9,10,6,3].",
        "level": 2,
        "paid_only": true,
        "question_id": 545,
        "slug": "boundary-of-binary-tree",
        "tags": [],
        "title": "Boundary of Binary Tree",
        "url": "https://leetcode.com/problems/boundary-of-binary-tree/description/"
    },
    "546": {
        "description": "Given several boxes with different colors represented by different positive numbers. \r\nYou may experience several rounds to remove boxes until there is no box left. Each time you can choose some continuous boxes with the same color (composed of k boxes, k >= 1), remove them and get k*k points.\r\nFind the maximum points you can get.\r\n\r\n\r\nExample 1:\r\nInput: \r\n\r\n[1, 3, 2, 2, 2, 3, 4, 3, 1]\r\n\r\nOutput:\r\n\r\n23\r\n\r\nExplanation: \r\n\r\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \r\n----> [1, 3, 3, 4, 3, 1] (3*3=9 points) \r\n----> [1, 3, 3, 3, 1] (1*1=1 points) \r\n----> [1, 1] (3*3=9 points) \r\n----> [] (2*2=4 points)\r\n\r\n\r\n\r\nNote:\r\nThe number of boxes n would not exceed 100.",
        "level": 3,
        "paid_only": false,
        "question_id": 546,
        "slug": "remove-boxes",
        "tags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "title": "Remove Boxes",
        "url": "https://leetcode.com/problems/remove-boxes/description/"
    },
    "547": {
        "description": "There are N students in a class. Some of them are friends, while some are not. Their friendship is transitive in nature. For example, if A is a direct friend of B, and B is a direct friend of C, then A is an indirect friend of C. And we defined a friend circle is a group of students who are direct or indirect friends.\r\n\r\n\r\n\r\nGiven a N*N matrix M representing the friend relationship between students in the class. If M[i][j] = 1, then the ith and jth students are direct friends with each other, otherwise not. And you have to output the total number of friend circles among all the students.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\n[[1,1,0],\r\n [1,1,0],\r\n [0,0,1]]\r\nOutput: 2\r\nExplanation:The 0th and 1st students are direct friends, so they are in a friend circle. The 2nd student himself is in a friend circle. So return 2.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\n[[1,1,0],\r\n [1,1,1],\r\n [0,1,1]]\r\nOutput: 1\r\nExplanation:The 0th and 1st students are direct friends, the 1st and 2nd students are direct friends, so the 0th and 2nd students are indirect friends. All of them are in the same friend circle, so return 1.\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nN is in range [1,200].\r\nM[i][i] = 1 for all students.\r\nIf M[i][j] = 1, then M[j][i] = 1.",
        "level": 2,
        "paid_only": false,
        "question_id": 547,
        "slug": "friend-circles",
        "tags": [
            "Depth-first Search",
            "Union Find"
        ],
        "title": "Friend Circles",
        "url": "https://leetcode.com/problems/friend-circles/description/"
    },
    "548": {
        "description": "Given an array with n integers, you need to find if there are triplets (i, j,\nk) which satisfies following conditions:\n\n  1. 0 < i, i + 1 < j, j + 1 < k < n - 1\n  2. Sum of subarrays (0, i - 1), (i + 1, j - 1), (j + 1, k - 1) and (k + 1, n - 1) should be equal.\n\nwhere we define that subarray (L, R) represents a slice of the original array\nstarting from the element indexed L to the element indexed R.\n\n**Example:**\n\n\n    **Input:** [1,2,1,2,1,2,1]\r**Output:** True\r**Explanation:**\ri = 1, j = 3, k = 5. \rsum(0, i - 1) = sum(0, 0) = 1\rsum(i + 1, j - 1) = sum(2, 2) = 1\rsum(j + 1, k - 1) = sum(4, 4) = 1\rsum(k + 1, n - 1) = sum(6, 6) = 1\r\n\n**Note:**\n\n  1. 1 <= n <= 2000.\n  2. Elements in the given array will be in range [-1,000,000, 1,000,000].",
        "level": 2,
        "paid_only": true,
        "question_id": 548,
        "slug": "split-array-with-equal-sum",
        "tags": [],
        "title": "Split Array with Equal Sum",
        "url": "https://leetcode.com/problems/split-array-with-equal-sum/description/"
    },
    "549": {
        "description": "Given a binary tree, you need to find the length of Longest Consecutive Path\nin Binary Tree.\n\nEspecially, this path can be either increasing or decreasing. For example,\n[1,2,3,4] and [4,3,2,1] are both considered valid, but the path [1,2,4,3] is\nnot valid. On the other hand, the path can be in the child-Parent-child order,\nwhere not necessarily be parent-child order.\n\nExample 1:\n\n\n\n    Input:\r        1\r       / \\\r      2   3\rOutput: 2\rExplanation: The longest consecutive path is [1, 2] or [2, 1].\r\n\n\n\nExample 2:\n\n\n\n    Input:\r        2\r       / \\\r      1   3\rOutput: 3\rExplanation: The longest consecutive path is [1, 2, 3] or [3, 2, 1].\r\n\n\n\nNote: All the values of tree nodes are in the range of [-1e7, 1e7].",
        "level": 2,
        "paid_only": true,
        "question_id": 549,
        "slug": "binary-tree-longest-consecutive-sequence-ii",
        "tags": [],
        "title": "Binary Tree Longest Consecutive Sequence II",
        "url": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii/description/"
    },
    "551": {
        "description": "You are given a string representing an attendance record for a student. The record only contains the following three characters:\r\n\r\n\r\n\r\n'A' : Absent. \r\n'L' : Late.\r\n 'P' : Present. \r\n\r\n\r\n\r\n\r\nA student could be rewarded if his attendance record doesn't contain more than one 'A' (absent) or more than two continuous 'L' (late).    \r\n\r\nYou need to return whether the student could be rewarded according to his attendance record.\r\n\r\nExample 1:\r\n\r\nInput: \"PPALLP\"\r\nOutput: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"PPALLL\"\r\nOutput: False",
        "level": 1,
        "paid_only": false,
        "question_id": 551,
        "slug": "student-attendance-record-i",
        "tags": [
            "String"
        ],
        "title": "Student Attendance Record I",
        "url": "https://leetcode.com/problems/student-attendance-record-i/description/"
    },
    "552": {
        "description": "Given a positive integer n, return the number of all possible attendance records with length n, which will be regarded as rewardable. The answer may be very large, return it after mod 109 + 7.\r\n\r\nA student attendance record is a string that only contains the following three characters:\r\n\r\n\r\n\r\n'A' : Absent. \r\n'L' : Late.\r\n 'P' : Present. \r\n\r\n\r\n\r\n\r\nA record is regarded as rewardable if it doesn't contain more than one 'A' (absent) or more than two continuous 'L' (late).\r\n\r\nExample 1:\r\n\r\nInput: n = 2\r\nOutput: 8 \r\nExplanation:\r\nThere are 8 records with length 2 will be regarded as rewardable:\r\n\"PP\" , \"AP\", \"PA\", \"LP\", \"PL\", \"AL\", \"LA\", \"LL\"\r\nOnly \"AA\" won't be regarded as rewardable owing to more than one absent times. \r\n\r\n\r\n\r\nNote:\r\nThe value of n won't exceed 100,000.",
        "level": 3,
        "paid_only": false,
        "question_id": 552,
        "slug": "student-attendance-record-ii",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Student Attendance Record II",
        "url": "https://leetcode.com/problems/student-attendance-record-ii/description/"
    },
    "553": {
        "description": "Given a list of positive integers, the adjacent integers will perform the float division. For example, [2,3,4] -> 2 / 3 / 4.\r\n\r\nHowever, you can add any number of parenthesis at any position to change the priority of operations. You should find out how to add parenthesis to get the maximum result, and return the corresponding expression in string format. Your expression should NOT contain redundant parenthesis.\r\n\r\nExample:\r\n\r\nInput: [1000,100,10,2]\r\nOutput: \"1000/(100/10/2)\"\r\nExplanation:\r\n1000/(100/10/2) = 1000/((100/10)/2) = 200\r\nHowever, the bold parenthesis in \"1000/((100/10)/2)\" are redundant, since they don't influence the operation priority. So you should return \"1000/(100/10/2)\". \r\n\r\nOther cases:\r\n1000/(100/10)/2 = 50\r\n1000/(100/(10/2)) = 50\r\n1000/100/10/2 = 0.5\r\n1000/100/(10/2) = 2\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the input array is [1, 10].\r\nElements in the given array will be in range [2, 1000].\r\nThere is only one optimal division for each test case.",
        "level": 2,
        "paid_only": false,
        "question_id": 553,
        "slug": "optimal-division",
        "tags": [
            "Math",
            "String"
        ],
        "title": "Optimal Division",
        "url": "https://leetcode.com/problems/optimal-division/description/"
    },
    "554": {
        "description": "There is a brick wall in front of you. The wall is rectangular and has several rows of bricks. The bricks have the same height but different width. You want to draw a vertical line from the top to the bottom and cross the least bricks. \r\n\r\n\r\nThe brick wall is represented by a list of rows. Each row is a list of integers representing the width of each brick in this row from left to right. \r\n\r\n\r\nIf your line go through the edge of a brick, then the brick is not considered as crossed. You need to find out how to draw the line to cross the least bricks and return the number of crossed bricks. \r\n\r\nYou cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks. \r\n\r\nExample:\r\n\r\nInput: \r\n[[1,2,2,1],\r\n [3,1,2],\r\n [1,3,2],\r\n [2,4],\r\n [3,1,2],\r\n [1,3,1,1]]\r\nOutput: 2\r\nExplanation: \r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe width sum of bricks in different rows are the same and won't exceed INT_MAX.\r\nThe number of bricks in each row is in range [1,10,000]. The height of wall is in range [1,10,000]. Total number of bricks of the wall won't exceed 20,000.",
        "level": 2,
        "paid_only": false,
        "question_id": 554,
        "slug": "brick-wall",
        "tags": [
            "Hash Table"
        ],
        "title": "Brick Wall",
        "url": "https://leetcode.com/problems/brick-wall/description/"
    },
    "555": {
        "description": "Given a list of strings, you could concatenate these strings together into a\nloop, where for each string you could choose to reverse it or not. Among all\nthe possible loops, you need to find the lexicographically biggest string\nafter cutting the loop, which will make the looped string into a regular one.\n\nSpecifically, to find the lexicographically biggest string, you need to\nexperience two phases:\n\n  1. Concatenate all the strings into a loop, where you can reverse some strings or not and connect them in the same order as given.\n  2. Cut and make one breakpoint in any place of the loop, which will make the looped string into a regular one starting from the character at the cutpoint.\n\n\n\nAnd your job is to find the lexicographically biggest one among all the\npossible regular strings.\n\nExample:\n\n\n\n    Input: \"abc\", \"xyz\"\rOutput: \"zyxcba\"\rExplanation: You can get the looped string \"-abcxyz-\", \"-abczyx-\", \"-cbaxyz-\", \"-cbazyx-\",\n    where '-' represents the looped status.\n    The answer string came from the fourth looped one,\n    where you could cut from the middle character 'a' and get \"zyxcba\".\r\n\n\n\nNote:\n\n  1. The input strings will only contain lowercase letters.\n  2. The total length of all the strings will not over 1,000.",
        "level": 2,
        "paid_only": true,
        "question_id": 555,
        "slug": "split-concatenated-strings",
        "tags": [],
        "title": "Split Concatenated Strings",
        "url": "https://leetcode.com/problems/split-concatenated-strings/description/"
    },
    "556": {
        "description": "Given a positive 32-bit integer n, you need to find the smallest 32-bit integer which has exactly the same digits existing in the integer n and is greater in value than n. If no such positive 32-bit integer exists, you need to return -1.\r\n\r\nExample 1:\r\n\r\nInput: 12\r\nOutput: 21\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 21\r\nOutput: -1",
        "level": 2,
        "paid_only": false,
        "question_id": 556,
        "slug": "next-greater-element-iii",
        "tags": [
            "String"
        ],
        "title": "Next Greater Element III",
        "url": "https://leetcode.com/problems/next-greater-element-iii/description/"
    },
    "557": {
        "description": "Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.\r\n\r\nExample 1:\r\n\r\nInput: \"Let's take LeetCode contest\"\r\nOutput: \"s'teL ekat edoCteeL tsetnoc\"\r\n\r\n\r\n\r\nNote:\r\nIn the string, each word is separated by single space and there will not be any extra space in the string.",
        "level": 1,
        "paid_only": false,
        "question_id": 557,
        "slug": "reverse-words-in-a-string-iii",
        "tags": [
            "String"
        ],
        "title": "Reverse Words in a String III",
        "url": "https://leetcode.com/problems/reverse-words-in-a-string-iii/description/"
    },
    "560": {
        "description": "Given an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.\r\n\r\nExample 1:\r\n\r\nInput:nums = [1,1,1], k = 2\r\nOutput: 2\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the array is in range [1, 20,000].\r\nThe range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].",
        "level": 2,
        "paid_only": false,
        "question_id": 560,
        "slug": "subarray-sum-equals-k",
        "tags": [
            "Array",
            "Map"
        ],
        "title": "Subarray Sum Equals K",
        "url": "https://leetcode.com/problems/subarray-sum-equals-k/description/"
    },
    "561": {
        "description": "Given an array of 2n integers, your task is to group these integers into n pairs of integer, say (a1, b1), (a2, b2), ..., (an, bn) which makes sum of min(ai, bi) for all i from 1 to n as large as possible.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,4,3,2]\r\n\r\nOutput: 4\r\nExplanation: n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).\r\n\r\n\r\n\r\nNote:\r\n\r\nn is a positive integer, which is in the range of [1, 10000].\r\nAll the integers in the array will be in the range of [-10000, 10000].",
        "level": 1,
        "paid_only": false,
        "question_id": 561,
        "slug": "array-partition-i",
        "tags": [
            "Array"
        ],
        "title": "Array Partition I",
        "url": "https://leetcode.com/problems/array-partition-i/description/"
    },
    "562": {
        "description": "Given a 01 matrix M, find the longest line of consecutive one in the matrix.\nThe line could be horizontal, vertical, diagonal or anti-diagonal.\n\nExample:\n\n\n\n    Input:\r[[0,1,1,0],\r [0,1,1,0],\r [0,0,0,1]]\rOutput: 3\r\n\n\n\nHint: The number of elements in the given matrix will not exceed 10,000.",
        "level": 2,
        "paid_only": true,
        "question_id": 562,
        "slug": "longest-line-of-consecutive-one-in-matrix",
        "tags": [],
        "title": "Longest Line of Consecutive One in Matrix",
        "url": "https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix/description/"
    },
    "563": {
        "description": "Given a binary tree, return the tilt of the whole tree.\r\n\r\nThe tilt of a tree node is defined as the absolute difference between the sum of all left subtree node values and the sum of all right subtree node values. Null node has tilt 0.\r\n\r\nThe tilt of the whole tree is defined as the sum of all nodes' tilt.\r\n\r\nExample:\r\n\r\nInput: \r\n         1\r\n       /   \\\r\n      2     3\r\nOutput: 1\r\nExplanation: \r\nTilt of node 2 : 0\r\nTilt of node 3 : 0\r\nTilt of node 1 : |2-3| = 1\r\nTilt of binary tree : 0 + 0 + 1 = 1\r\n\r\n\r\n\r\nNote:\r\n\r\nThe sum of node values in any subtree won't exceed the range of 32-bit integer. \r\nAll the tilt values won't exceed the range of 32-bit integer.",
        "level": 1,
        "paid_only": false,
        "question_id": 563,
        "slug": "binary-tree-tilt",
        "tags": [
            "Tree"
        ],
        "title": "Binary Tree Tilt",
        "url": "https://leetcode.com/problems/binary-tree-tilt/description/"
    },
    "564": {
        "description": "Given an integer n, find the closest integer (not including itself), which is a palindrome. \r\n\r\nThe 'closest' is defined as absolute difference minimized between two integers.\r\n\r\nExample 1:\r\n\r\nInput: \"123\"\r\nOutput: \"121\"\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input n is a positive integer represented by string, whose length will not exceed 18.\r\nIf there is a tie, return the smaller one as answer.",
        "level": 3,
        "paid_only": false,
        "question_id": 564,
        "slug": "find-the-closest-palindrome",
        "tags": [
            "String"
        ],
        "title": "Find the Closest Palindrome",
        "url": "https://leetcode.com/problems/find-the-closest-palindrome/description/"
    },
    "565": {
        "description": "A zero-indexed array A of length N contains all integers from 0 to N-1. Find and return the longest length of set S, where S[i] = {A[i], A[A[i]], A[A[A[i]]], ... } subjected to the rule below.\r\n\r\nSuppose the first element in S starts with the selection of element A[i] of index = i, the next element in S should be A[A[i]], and then A[A[A[i]]]… By that analogy, we stop adding right before a duplicate element occurs in S.\r\n\r\nExample 1:\r\n\r\nInput: A = [5,4,0,3,1,6,2]\r\nOutput: 4\r\nExplanation: \r\nA[0] = 5, A[1] = 4, A[2] = 0, A[3] = 3, A[4] = 1, A[5] = 6, A[6] = 2.\r\n\r\nOne of the longest S[K]:\r\nS[0] = {A[0], A[5], A[6], A[2]} = {5, 6, 2, 0}\r\n\r\n\r\n\r\nNote:\r\n\r\nN is an integer within the range [1, 20,000].\r\nThe elements of A are all distinct.\r\nEach element of A is an integer within the range [0, N-1].",
        "level": 2,
        "paid_only": false,
        "question_id": 565,
        "slug": "array-nesting",
        "tags": [],
        "title": "Array Nesting",
        "url": "https://leetcode.com/problems/array-nesting/description/"
    },
    "566": {
        "description": "In MATLAB, there is a very useful function called 'reshape', which can reshape a matrix into a new one with different size but keep its original data.\r\n\r\n\r\n\r\nYou're given a matrix represented by a two-dimensional array, and two positive integers r and c representing the row number and column number of the wanted reshaped matrix, respectively.\r\n\r\n The reshaped matrix need to be filled with all the elements of the original matrix in the same row-traversing order as they were.\r\n\r\n\r\n\r\nIf the 'reshape' operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\nnums = \r\n[[1,2],\r\n [3,4]]\r\nr = 1, c = 4\r\nOutput: \r\n[[1,2,3,4]]\r\nExplanation:The row-traversing of nums is [1,2,3,4]. The new reshaped matrix is a 1 * 4 matrix, fill it row by row by using the previous list.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nnums = \r\n[[1,2],\r\n [3,4]]\r\nr = 2, c = 4\r\nOutput: \r\n[[1,2],\r\n [3,4]]\r\nExplanation:There is no way to reshape a 2 * 2 matrix to a 2 * 4 matrix. So output the original matrix.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe height and width of the given matrix is in range [1, 100].\r\nThe given r and c are all positive.",
        "level": 1,
        "paid_only": false,
        "question_id": 566,
        "slug": "reshape-the-matrix",
        "tags": [
            "Array"
        ],
        "title": "Reshape the Matrix",
        "url": "https://leetcode.com/problems/reshape-the-matrix/description/"
    },
    "567": {
        "description": "Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.\r\n\r\nExample 1:\r\n\r\nInput:s1 = \"ab\" s2 = \"eidbaooo\"\r\nOutput:True\r\nExplanation: s2 contains one permutation of s1 (\"ba\").\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:s1= \"ab\" s2 = \"eidboaoo\"\r\nOutput: False\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input strings only contain lower case letters.\r\nThe length of both given strings is in range [1, 10,000].",
        "level": 2,
        "paid_only": false,
        "question_id": 567,
        "slug": "permutation-in-string",
        "tags": [
            "Two Pointers"
        ],
        "title": "Permutation in String",
        "url": "https://leetcode.com/problems/permutation-in-string/description/"
    },
    "568": {
        "description": "LeetCode wants to give one of its best employees the option to travel among N\ncities to collect algorithm problems. But all work and no play makes Jack a\ndull boy, you could take vacations in some particular cities and weeks. Your\njob is to schedule the traveling to maximize the number of vacation days you\ncould take, but there are certain rules and restrictions you need to follow.\n\nRules and restrictions:\n\n  1. You can only travel among N cities, represented by indexes from 0 to N-1. Initially, you are in the city indexed 0 on Monday.\n  2. The cities are connected by flights. The flights are represented as a N*N matrix (not necessary symmetrical), called flights representing the airline status from the city i to the city j. If there is no flight from the city i to the city j, flights[i][j] = 0; Otherwise, flights[i][j] = 1. Also, flights[i][i] = 0 for all i.\n  3. You totally have K weeks (each week has 7 days) to travel. You can only take flights at most once per day and can only take flights on each week's Monday morning. Since flight time is so short, we don't consider the impact of flight time.\n  4. For each city, you can only have restricted vacation days in different weeks, given an N*K matrix called days representing this relationship. For the value of days[i][j], it represents the maximum days you could take vacation in the city i in the week j.\n\n\n\nYou're given the flights matrix and days matrix, and you need to output the\nmaximum vacation days you could take during K weeks.\n\nExample 1:\n\n\n\n    Input:flights = [[0,1,1],[1,0,1],[1,1,0]], days = [[1,3,1],[6,0,3],[3,3,3]]\rOutput: 12\rExplanation:\n    Ans = 6 + 3 + 3 = 12.\n    \rOne of the best strategies is:\r1st week : fly from city 0 to city 1 on Monday, and play 6 days and work 1 day.\n    (Although you start at city 0, we could also fly to and start at other cities since it is Monday.) \r2nd week : fly from city 1 to city 2 on Monday, and play 3 days and work 4 days.\r3rd week : stay at city 2, and play 3 days and work 4 days.\r\n\n\n\nExample 2:\n\n\n\n    Input:flights = [[0,0,0],[0,0,0],[0,0,0]], days = [[1,1,1],[7,7,7],[7,7,7]]\rOutput: 3\rExplanation:\n    Ans = 1 + 1 + 1 = 3.\n    \rSince there is no flights enable you to move to another city, you have to stay at city 0 for the whole 3 weeks.\n    For each week, you only have one day to play and six days to work.\n    So the maximum number of vacation days is 3.\r\n\n\n\nExample 3:\n\n\n\n    Input:flights = [[0,1,1],[1,0,1],[1,1,0]], days = [[7,0,0],[0,7,0],[0,0,7]]\rOutput: 21\rExplanation:\n    Ans = 7 + 7 + 7 = 21\n    \rOne of the best strategies is:\r1st week : stay at city 0, and play 7 days. \r2nd week : fly from city 0 to city 1 on Monday, and play 7 days.\r3rd week : fly from city 1 to city 2 on Monday, and play 7 days.\r\n\n\n\nNote:\n\n  1. N and K are positive integers, which are in the range of [1, 100].\n  2. In the matrix flights, all the values are integers in the range of [0, 1].\n  3. In the matrix days, all the values are integers in the range [0, 7].\n  4. You could stay at a city beyond the number of vacation days, but you should work on the extra days, which won't be counted as vacation days.\n  5. If you fly from the city A to the city B and take the vacation on that day, the deduction towards vacation days will count towards the vacation days of city B in that week.\n  6. We don't consider the impact of flight hours towards the calculation of vacation days.",
        "level": 3,
        "paid_only": true,
        "question_id": 568,
        "slug": "maximum-vacation-days",
        "tags": [],
        "title": "Maximum Vacation Days",
        "url": "https://leetcode.com/problems/maximum-vacation-days/description/"
    },
    "569": {
        "description": "LeetCode wants to give one of its best employees the option to travel among N\ncities to collect algorithm problems. But all work and no play makes Jack a\ndull boy, you could take vacations in some particular cities and weeks. Your\njob is to schedule the traveling to maximize the number of vacation days you\ncould take, but there are certain rules and restrictions you need to follow.\n\nRules and restrictions:\n\n  1. You can only travel among N cities, represented by indexes from 0 to N-1. Initially, you are in the city indexed 0 on Monday.\n  2. The cities are connected by flights. The flights are represented as a N*N matrix (not necessary symmetrical), called flights representing the airline status from the city i to the city j. If there is no flight from the city i to the city j, flights[i][j] = 0; Otherwise, flights[i][j] = 1. Also, flights[i][i] = 0 for all i.\n  3. You totally have K weeks (each week has 7 days) to travel. You can only take flights at most once per day and can only take flights on each week's Monday morning. Since flight time is so short, we don't consider the impact of flight time.\n  4. For each city, you can only have restricted vacation days in different weeks, given an N*K matrix called days representing this relationship. For the value of days[i][j], it represents the maximum days you could take vacation in the city i in the week j.\n\n\n\nYou're given the flights matrix and days matrix, and you need to output the\nmaximum vacation days you could take during K weeks.\n\nExample 1:\n\n\n\n    Input:flights = [[0,1,1],[1,0,1],[1,1,0]], days = [[1,3,1],[6,0,3],[3,3,3]]\rOutput: 12\rExplanation:\n    Ans = 6 + 3 + 3 = 12.\n    \rOne of the best strategies is:\r1st week : fly from city 0 to city 1 on Monday, and play 6 days and work 1 day.\n    (Although you start at city 0, we could also fly to and start at other cities since it is Monday.) \r2nd week : fly from city 1 to city 2 on Monday, and play 3 days and work 4 days.\r3rd week : stay at city 2, and play 3 days and work 4 days.\r\n\n\n\nExample 2:\n\n\n\n    Input:flights = [[0,0,0],[0,0,0],[0,0,0]], days = [[1,1,1],[7,7,7],[7,7,7]]\rOutput: 3\rExplanation:\n    Ans = 1 + 1 + 1 = 3.\n    \rSince there is no flights enable you to move to another city, you have to stay at city 0 for the whole 3 weeks.\n    For each week, you only have one day to play and six days to work.\n    So the maximum number of vacation days is 3.\r\n\n\n\nExample 3:\n\n\n\n    Input:flights = [[0,1,1],[1,0,1],[1,1,0]], days = [[7,0,0],[0,7,0],[0,0,7]]\rOutput: 21\rExplanation:\n    Ans = 7 + 7 + 7 = 21\n    \rOne of the best strategies is:\r1st week : stay at city 0, and play 7 days. \r2nd week : fly from city 0 to city 1 on Monday, and play 7 days.\r3rd week : fly from city 1 to city 2 on Monday, and play 7 days.\r\n\n\n\nNote:\n\n  1. N and K are positive integers, which are in the range of [1, 100].\n  2. In the matrix flights, all the values are integers in the range of [0, 1].\n  3. In the matrix days, all the values are integers in the range [0, 7].\n  4. You could stay at a city beyond the number of vacation days, but you should work on the extra days, which won't be counted as vacation days.\n  5. If you fly from the city A to the city B and take the vacation on that day, the deduction towards vacation days will count towards the vacation days of city B in that week.\n  6. We don't consider the impact of flight hours towards the calculation of vacation days.",
        "level": 3,
        "paid_only": true,
        "question_id": 569,
        "slug": "median-employee-salary",
        "tags": [],
        "title": "Median Employee Salary",
        "url": "https://leetcode.com/problems/median-employee-salary/description/"
    },
    "572": {
        "description": "Given two non-empty binary trees s and t, check whether tree t has exactly the same structure and node values with a subtree of s. A subtree of s is a tree consists of a node in s and all of this node's descendants. The tree s could also be considered as a subtree of itself.\r\n\r\n\r\nExample 1:\r\n\r\nGiven tree s:\r\n\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\\r\n 1   2\r\n\r\nGiven tree t:\r\n\r\n   4 \r\n  / \\\r\n 1   2\r\n\r\nReturn true, because t has the same structure and node values with a subtree of s.\r\n\r\n\r\nExample 2:\r\n\r\nGiven tree s:\r\n\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\\r\n 1   2\r\n    /\r\n   0\r\n\r\nGiven tree t:\r\n\r\n   4\r\n  / \\\r\n 1   2\r\n\r\nReturn false.",
        "level": 1,
        "paid_only": false,
        "question_id": 572,
        "slug": "subtree-of-another-tree",
        "tags": [
            "Tree"
        ],
        "title": "Subtree of Another Tree",
        "url": "https://leetcode.com/problems/subtree-of-another-tree/description/"
    },
    "573": {
        "description": "There's a tree, a squirrel, and several nuts. Positions are represented by the\ncells in a 2D grid. Your goal is to find the minimal distance for the squirrel\nto collect all the nuts and put them under the tree one by one. The squirrel\ncan only take at most one nut at one time and can move in four directions -\nup, down, left and right, to the adjacent cell. The distance is represented by\nthe number of moves.\n\nExample 1:\n\n\n\n    Input: \rHeight : 5\rWidth : 7\rTree position : [2,2]\rSquirrel : [4,4]\rNuts : [[3,0], [2,5]]\rOutput: 12\rExplanation:\r\n\n![](https://leetcode.com/static/images/problemset/squirrel_simulation.png)\n\n\n\nNote:\n\n  1. All given positions won't overlap.\n  2. The squirrel can take at most one nut at one time.\n  3. The given positions of nuts have no order.\n  4. Height and width are positive integers. 3 <= height * width <= 10,000.\n  5. The given positions contain at least one nut, only one tree and one squirrel.",
        "level": 2,
        "paid_only": true,
        "question_id": 573,
        "slug": "squirrel-simulation",
        "tags": [],
        "title": "Squirrel Simulation",
        "url": "https://leetcode.com/problems/squirrel-simulation/description/"
    },
    "574": {
        "description": "There's a tree, a squirrel, and several nuts. Positions are represented by the\ncells in a 2D grid. Your goal is to find the minimal distance for the squirrel\nto collect all the nuts and put them under the tree one by one. The squirrel\ncan only take at most one nut at one time and can move in four directions -\nup, down, left and right, to the adjacent cell. The distance is represented by\nthe number of moves.\n\nExample 1:\n\n\n\n    Input: \rHeight : 5\rWidth : 7\rTree position : [2,2]\rSquirrel : [4,4]\rNuts : [[3,0], [2,5]]\rOutput: 12\rExplanation:\r\n\n![](https://leetcode.com/static/images/problemset/squirrel_simulation.png)\n\n\n\nNote:\n\n  1. All given positions won't overlap.\n  2. The squirrel can take at most one nut at one time.\n  3. The given positions of nuts have no order.\n  4. Height and width are positive integers. 3 <= height * width <= 10,000.\n  5. The given positions contain at least one nut, only one tree and one squirrel.",
        "level": 2,
        "paid_only": true,
        "question_id": 574,
        "slug": "winning-candidate",
        "tags": [],
        "title": "Winning Candidate",
        "url": "https://leetcode.com/problems/winning-candidate/description/"
    },
    "575": {
        "description": "Given an integer array with even length, where different numbers in this array represent different kinds of candies. Each number means one candy of the corresponding kind. You need to distribute these candies equally in number to brother and sister. Return the maximum number of kinds of candies the sister could gain. \r\n\r\nExample 1:\r\n\r\nInput: candies = [1,1,2,2,3,3]\r\nOutput: 3\r\nExplanation:\r\nThere are three different kinds of candies (1, 2 and 3), and two candies for each kind.\r\nOptimal distribution: The sister has candies [1,2,3] and the brother has candies [1,2,3], too. \r\nThe sister has three different kinds of candies. \r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: candies = [1,1,2,3]\r\nOutput: 2\r\nExplanation: For example, the sister has candies [2,3] and the brother has candies [1,1]. \r\nThe sister has two different kinds of candies, the brother has only one kind of candies. \r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the given array is in range [2, 10,000], and will be even.\r\nThe number in given array is in range [-100,000, 100,000].",
        "level": 1,
        "paid_only": false,
        "question_id": 575,
        "slug": "distribute-candies",
        "tags": [
            "Hash Table"
        ],
        "title": "Distribute Candies",
        "url": "https://leetcode.com/problems/distribute-candies/description/"
    },
    "576": {
        "description": "There is an m by n grid with a ball. Given the start coordinate (i,j) of the ball, you can move the ball to adjacent cell or cross the grid boundary in four directions (up, down, left, right). However, you can at most move N times. Find out the number of paths to move the ball out of grid boundary. The answer may be very large, return it after mod 109 + 7.\r\n\r\nExample 1:\r\n\r\nInput:m = 2, n = 2, N = 2, i = 0, j = 0\r\nOutput: 6\r\nExplanation:\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:m = 1, n = 3, N = 3, i = 0, j = 1\r\nOutput: 12\r\nExplanation:\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nOnce you move the ball out of boundary, you cannot move it back.\r\nThe length and height of the grid is in range [1,50].\r\nN is in range [0,50].",
        "level": 2,
        "paid_only": false,
        "question_id": 576,
        "slug": "out-of-boundary-paths",
        "tags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "title": "Out of Boundary Paths",
        "url": "https://leetcode.com/problems/out-of-boundary-paths/description/"
    },
    "581": {
        "description": "Given an integer array, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order, too.  \r\n\r\nYou need to find the shortest such subarray and output its length.\r\n\r\nExample 1:\r\n\r\nInput: [2, 6, 4, 8, 10, 9, 15]\r\nOutput: 5\r\nExplanation: You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\r\n\r\n\r\n\r\nNote:\r\n\r\nThen length of the input array is in range [1, 10,000].\r\nThe input array may contain duplicates, so ascending order here means <=.",
        "level": 1,
        "paid_only": false,
        "question_id": 581,
        "slug": "shortest-unsorted-continuous-subarray",
        "tags": [
            "Array"
        ],
        "title": "Shortest Unsorted Continuous Subarray",
        "url": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/description/"
    },
    "582": {
        "description": "Given n processes, each process has a unique PID (process id) and its PPID\n(parent process id).\n\nEach process only has one parent process, but may have one or more children\nprocesses. This is just like a tree structure. Only one process has PPID that\nis 0, which means this process has no parent process. All the PIDs will be\ndistinct positive integers.\n\nWe use two list of integers to represent a list of processes, where the first\nlist contains PID for each process and the second list contains the\ncorresponding PPID.\n\nNow given the two lists, and a PID representing a process you want to kill,\nreturn a list of PIDs of processes that will be killed in the end. You should\nassume that when a process is killed, all its children processes will be\nkilled. No order is required for the final answer.\n\nExample 1:\n\n\n\n    Input: \rpid =  [1, 3, 10, 5]\rppid = [3, 0, 5, 3]\rkill = 5\rOutput: [5,10]\rExplanation: \r           3\r         /   \\\r        1     5\r             /\r            10\rKill 5 will also kill 10.\r\n\n\n\nNote:\n\n  1. The given kill id is guaranteed to be one of the given PIDs.\n  2. n >= 1.",
        "level": 2,
        "paid_only": true,
        "question_id": 582,
        "slug": "kill-process",
        "tags": [],
        "title": "Kill Process",
        "url": "https://leetcode.com/problems/kill-process/description/"
    },
    "583": {
        "description": "Given two words word1 and word2, find the minimum number of steps required to make word1 and word2 the same, where in each step you can delete one character in either string.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"sea\", \"eat\"\r\nOutput: 2\r\nExplanation: You need one step to make \"sea\" to \"ea\" and another step to make \"eat\" to \"ea\".\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of given words won't exceed 500.\r\nCharacters in given words can only be lower-case letters.",
        "level": 2,
        "paid_only": false,
        "question_id": 583,
        "slug": "delete-operation-for-two-strings",
        "tags": [
            "String"
        ],
        "title": "Delete Operation for Two Strings",
        "url": "https://leetcode.com/problems/delete-operation-for-two-strings/description/"
    },
    "587": {
        "description": "There are some trees, where each tree is represented by (x,y) coordinate in a two-dimensional garden. Your job is to fence the entire garden using the minimum length of rope as it is expensive. The garden is well fenced only if all the trees are enclosed. Your task is to help find the coordinates of trees which are exactly located on the fence perimeter.\r\n\r\nExample 1:\r\n\r\nInput: [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]\r\nOutput: [[1,1],[2,0],[4,2],[3,3],[2,4]]\r\nExplanation:\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [[1,2],[2,2],[4,2]]\r\nOutput: [[1,2],[2,2],[4,2]]\r\nExplanation:\r\n\r\nEven you only have trees in a line, you need to use rope to enclose them. \r\n\r\n\r\n\r\n Note: \r\n\r\nAll trees should be enclosed together. You cannot cut the rope to enclose trees that will separate them in more than one group.\r\nAll input integers will range from 0 to 100. \r\nThe garden has at least one tree. \r\nAll coordinates are distinct. \r\nInput points have NO order. No order required for output.",
        "level": 3,
        "paid_only": false,
        "question_id": 587,
        "slug": "erect-the-fence",
        "tags": [
            "Geometry"
        ],
        "title": "Erect the Fence",
        "url": "https://leetcode.com/problems/erect-the-fence/description/"
    },
    "588": {
        "description": "Design an in-memory file system to simulate the following functions:\n\n`ls`: Given a path in string format. If it is a file path, return a list that\nonly contains this file's name. If it is a directory path, return the list of\nfile and directory names in this directory. Your output (file and directory\nnames together) should in lexicographic order.\n\n`mkdir`: Given a directory path that does not exist, you should make a new\ndirectory according to the path. If the middle directories in the path don't\nexist either, you should create them as well. This function has void return\ntype.\n\n`addContentToFile`: Given a file path and file content in string format. If\nthe file doesn't exist, you need to create that file containing given content.\nIf the file already exists, you need to append given content to original\ncontent. This function has void return type.\n\n`readContentFromFile`: Given a file path, return its content in string format.\n\nExample:\n\n\n\n    Input: \r[\"FileSystem\",\"ls\",\"mkdir\",\"addContentToFile\",\"ls\",\"readContentFromFile\"]\r[[],[\"/\"],[\"/a/b/c\"],[\"/a/b/c/d\",\"hello\"],[\"/\"],[\"/a/b/c/d\"]]\rOutput:\r[null,[],null,null,[\"a\"],\"hello\"]\rExplanation:\r\n\n![filesystem](https://leetcode.com/static/images/problemset/filesystem.png)\n\n\n\nNote:\n\n  1. You can assume all file or directory paths are absolute paths which begin with `/` and do not end with `/`except that the path is just `\"/\"`.\n  2. You can assume that all operations will be passed valid parameters and users will not attempt to retrieve file content or list a directory or file that does not exist.\n  3. You can assume that all directory names and file names only contain lower-case letters, and same names won't exist in the same directory.",
        "level": 3,
        "paid_only": true,
        "question_id": 588,
        "slug": "design-in-memory-file-system",
        "tags": [],
        "title": "Design In-Memory File System",
        "url": "https://leetcode.com/problems/design-in-memory-file-system/description/"
    },
    "591": {
        "description": "Given a string representing a code snippet, you need to implement a tag validator to parse the code and return whether it is valid. A code snippet is valid if all the following rules hold:\r\n\r\nThe code must be wrapped in a valid closed tag. Otherwise, the code is invalid.\r\nA closed tag (not necessarily valid) has exactly the following format : <TAG_NAME>TAG_CONTENT</TAG_NAME>. Among them, <TAG_NAME> is the start tag, and </TAG_NAME> is the end tag. The TAG_NAME in start and end tags should be the same. A closed tag is valid if and only if the TAG_NAME and TAG_CONTENT are valid.\r\nA valid TAG_NAME only contain upper-case letters, and has length in range [1,9]. Otherwise, the TAG_NAME is invalid.\r\nA valid TAG_CONTENT may contain other valid closed tags, cdata and any characters (see note1) EXCEPT unmatched <, unmatched start and end tag, and unmatched or closed tags with invalid TAG_NAME. Otherwise, the TAG_CONTENT is invalid.\r\nA start tag is unmatched if no end tag exists with the same TAG_NAME, and vice versa. However, you also need to consider the issue of unbalanced when tags are nested.\r\nA < is unmatched if you cannot find a subsequent >. And when you find a < or </, all the subsequent characters until the next > should be parsed as TAG_NAME  (not necessarily valid).\r\nThe cdata has the following format : <![CDATA[CDATA_CONTENT]]>. The range of CDATA_CONTENT is defined as the characters between <![CDATA[ and the first subsequent ]]>. \r\nCDATA_CONTENT may contain any characters. The function of cdata is to forbid the validator to parse CDATA_CONTENT, so even it has some characters that can be parsed as tag (no matter valid or invalid), you should treat it as regular characters. \r\n\r\n\r\nValid Code Examples:\r\n\r\nInput: \"<DIV>This is the first line <![CDATA[<div>]]></DIV>\"\r\nOutput: True\r\nExplanation: \r\nThe code is wrapped in a closed tag : <DIV> and </DIV>. \r\nThe TAG_NAME is valid, the TAG_CONTENT consists of some characters and cdata. \r\nAlthough CDATA_CONTENT has unmatched start tag with invalid TAG_NAME, it should be considered as plain text, not parsed as tag.\r\nSo TAG_CONTENT is valid, and then the code is valid. Thus return true.\r\n\r\nInput: \"<DIV>>>  ![cdata[]] <![CDATA[<div>]>]]>]]>>]</DIV>\"\r\nOutput: True\r\nExplanation:\r\nWe first separate the code into : start_tag|tag_content|end_tag.\r\nstart_tag -> \"<DIV>\"\r\nend_tag -> \"</DIV>\"\r\ntag_content could also be separated into : text1|cdata|text2.\r\ntext1 -> \">>  ![cdata[]] \"\r\ncdata -> \"<![CDATA[<div>]>]]>\", where the CDATA_CONTENT is \"<div>]>\"\r\ntext2 -> \"]]>>]\"\r\n\r\nThe reason why start_tag is NOT \"<DIV>>>\" is because of the rule 6.\r\nThe reason why cdata is NOT \"<![CDATA[<div>]>]]>]]>\" is because of the rule 7.\r\n\r\n\r\n\r\nInvalid Code Examples:\r\n\r\nInput: \"<A>  <B> </A>   </B>\"\r\nOutput: False\r\nExplanation: Unbalanced. If \"<A>\" is closed, then \"<B>\" must be unmatched, and vice versa.\r\n\r\nInput: \"<DIV>  div tag is not closed  <DIV>\"\r\nOutput: False\r\n\r\nInput: \"<DIV>  unmatched <  </DIV>\"\r\nOutput: False\r\n\r\nInput: \"<DIV> closed tags with invalid tag name  <b>123</b> </DIV>\"\r\nOutput: False\r\n\r\nInput: \"<DIV> unmatched tags with invalid tag name  </1234567890> and <CDATA[[]]>  </DIV>\"\r\nOutput: False\r\n\r\nInput: \"<DIV>  unmatched start tag <B>  and unmatched end tag </C>  </DIV>\"\r\nOutput: False\r\n\r\n\r\n\r\nNote:\r\n\r\nFor simplicity, you could assume the input code (including the any characters mentioned above) only contain letters, digits, '<','>','/','!','[',']' and ' '.",
        "level": 3,
        "paid_only": false,
        "question_id": 591,
        "slug": "tag-validator",
        "tags": [
            "String",
            "Stack"
        ],
        "title": "Tag Validator",
        "url": "https://leetcode.com/problems/tag-validator/description/"
    },
    "592": {
        "description": "Given a string representing an expression of fraction addition and subtraction, you need to return the calculation result in string format. The final result should be irreducible fraction. If your final result is an integer, say 2, you need to change it to the format of fraction that has denominator 1. So in this case, 2 should be converted to 2/1.\r\n\r\nExample 1:\r\n\r\nInput:\"-1/2+1/2\"\r\nOutput: \"0/1\"\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\"-1/2+1/2+1/3\"\r\nOutput: \"1/3\"\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput:\"1/3-1/2\"\r\nOutput: \"-1/6\"\r\n\r\n\r\n\r\nExample 4:\r\n\r\nInput:\"5/3+1/3\"\r\nOutput: \"2/1\"\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input string only contains '0' to '9', '/', '+' and '-'. So does the output.\r\nEach fraction (input and output) has format ±numerator/denominator. If the first input fraction or the output is positive, then '+' will be omitted.\r\nThe input only contains valid irreducible fractions, where the numerator and denominator of each fraction will always be in the range [1,10]. If the denominator is 1, it means this fraction is actually an integer in a fraction format defined above. \r\nThe number of given fractions will be in the range [1,10].\r\nThe numerator and denominator of the final result are guaranteed to be valid and in the range of 32-bit int.",
        "level": 2,
        "paid_only": false,
        "question_id": 592,
        "slug": "fraction-addition-and-subtraction",
        "tags": [
            "Math"
        ],
        "title": "Fraction Addition and Subtraction",
        "url": "https://leetcode.com/problems/fraction-addition-and-subtraction/description/"
    },
    "593": {
        "description": "Given the coordinates of four points in 2D space, return whether the four points could construct a square.\r\n\r\nThe coordinate (x,y) of a point is represented by an integer array with two integers.\r\n\r\nExample:\r\n\r\nInput: p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\r\nOutput: True\r\n\r\n\r\n\r\n Note: \r\n\r\nAll the input integers are in the range [-10000, 10000].\r\nA valid square has four equal sides with positive length and four equal angles (90-degree angles).\r\nInput points have no order.",
        "level": 2,
        "paid_only": false,
        "question_id": 593,
        "slug": "valid-square",
        "tags": [
            "Math"
        ],
        "title": "Valid Square",
        "url": "https://leetcode.com/problems/valid-square/description/"
    },
    "594": {
        "description": "We define a harmonious array is an array where the difference between its maximum value and its minimum value is exactly 1.\r\n\r\nNow, given an integer array, you need to find the length of its longest harmonious subsequence among all its possible subsequences.\r\n\r\nExample 1:\r\n\r\nInput: [1,3,2,2,5,2,3,7]\r\nOutput: 5\r\nExplanation: The longest harmonious subsequence is [3,2,2,2,3].\r\n\r\n\r\n\r\nNote:\r\nThe length of the input array will not exceed 20,000.",
        "level": 1,
        "paid_only": false,
        "question_id": 594,
        "slug": "longest-harmonious-subsequence",
        "tags": [
            "Hash Table"
        ],
        "title": "Longest Harmonious Subsequence",
        "url": "https://leetcode.com/problems/longest-harmonious-subsequence/description/"
    },
    "595": {
        "description": "There is a table World \r\n\r\n+-----------------+------------+------------+--------------+---------------+\r\n| name            | continent  | area       | population   | gdp           |\r\n+-----------------+------------+------------+--------------+---------------+\r\n| Afghanistan     | Asia       | 652230     | 25500100     | 20343000      |\r\n| Albania         | Europe     | 28748      | 2831741      | 12960000      |\r\n| Algeria         | Africa     | 2381741    | 37100000     | 188681000     |\r\n| Andorra         | Europe     | 468        | 78115        | 3712000       |\r\n| Angola          | Africa     | 1246700    | 20609294     | 100990000     |\r\n+-----------------+------------+------------+--------------+---------------+\r\n\r\n\r\nA country is big if it has an area of bigger than 3 million square km or a population of more than 25 million.\r\n\r\nWrite a SQL solution to output big countries' name, population and area.\r\n\r\n\r\nFor example, according to the above table, we should output:\r\n\r\n+--------------+-------------+--------------+\r\n| name         | population  | area         |\r\n+--------------+-------------+--------------+\r\n| Afghanistan  | 25500100    | 652230       |\r\n| Algeria      | 37100000    | 2381741      |\r\n+--------------+-------------+--------------+",
        "level": 1,
        "paid_only": false,
        "question_id": 595,
        "slug": "big-countries",
        "tags": [],
        "title": "Big Countries",
        "url": "https://leetcode.com/problems/big-countries/description/"
    },
    "596": {
        "description": "There is a table courses with columns: student and class\r\n\r\nPlease list out all classes which have more than or equal to 5 students.\r\n\r\n\r\nFor example, the table:\r\n\r\n\r\n+---------+------------+\r\n| student | class      |\r\n+---------+------------+\r\n| A       | Math       |\r\n| B       | English    |\r\n| C       | Math       |\r\n| D       | Biology    |\r\n| E       | Math       |\r\n| F       | Computer   |\r\n| G       | Math       |\r\n| H       | Math       |\r\n| I       | Math       |\r\n+---------+------------+\r\n\r\n\r\nShould output:\r\n\r\n+---------+\r\n| class   |\r\n+---------+\r\n| Math    |\r\n+---------+\r\n\r\n\r\n\r\nNote:\r\nThe students should not be counted duplicate in each course.",
        "level": 1,
        "paid_only": false,
        "question_id": 596,
        "slug": "classes-more-than-5-students",
        "tags": [],
        "title": "Classes More Than 5 Students",
        "url": "https://leetcode.com/problems/classes-more-than-5-students/description/"
    },
    "598": {
        "description": "Given an m * n matrix M initialized with all 0's and several update operations.\r\nOperations are represented by a 2D array, and each operation is represented by an array with two positive integers a and b, which means M[i][j] should be added by one for all 0 <= i < a and 0 <= j < b. \r\nYou need to count and return the number of maximum integers in the matrix after performing all the operations.\r\n\r\nExample 1:\r\n\r\nInput: \r\nm = 3, n = 3\r\noperations = [[2,2],[3,3]]\r\nOutput: 4\r\nExplanation: \r\nInitially, M = \r\n[[0, 0, 0],\r\n [0, 0, 0],\r\n [0, 0, 0]]\r\n\r\nAfter performing [2,2], M = \r\n[[1, 1, 0],\r\n [1, 1, 0],\r\n [0, 0, 0]]\r\n\r\nAfter performing [3,3], M = \r\n[[2, 2, 1],\r\n [2, 2, 1],\r\n [1, 1, 1]]\r\n\r\nSo the maximum integer in M is 2, and there are four of it in M. So return 4.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe range of m and n is [1,40000].\r\nThe range of a is [1,m], and the range of b is [1,n].\r\nThe range of operations size won't exceed 10,000.",
        "level": 1,
        "paid_only": false,
        "question_id": 598,
        "slug": "range-addition-ii",
        "tags": [
            "Math"
        ],
        "title": "Range Addition II",
        "url": "https://leetcode.com/problems/range-addition-ii/description/"
    },
    "599": {
        "description": "Suppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings. \r\n\r\n\r\nYou need to help them find out their common interest with the least list index sum. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n[\"Shogun\", \"Tapioca Express\", \"Burger King\", \"KFC\"]\r\n[\"Piatti\", \"The Grill at Torrey Pines\", \"Hungry Hunter Steakhouse\", \"Shogun\"]\r\nOutput: [\"Shogun\"]\r\nExplanation: The only restaurant they both like is \"Shogun\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n[\"Shogun\", \"Tapioca Express\", \"Burger King\", \"KFC\"]\r\n[\"KFC\", \"Shogun\", \"Burger King\"]\r\nOutput: [\"Shogun\"]\r\nExplanation: The restaurant they both like and have the least index sum is \"Shogun\" with index sum 1 (0+1).\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of both lists will be in the range of [1, 1000].\r\nThe length of strings in both lists will be in the range of [1, 30].\r\nThe index is starting from 0 to the list length minus 1.\r\nNo duplicates in both lists.",
        "level": 1,
        "paid_only": false,
        "question_id": 599,
        "slug": "minimum-index-sum-of-two-lists",
        "tags": [
            "Hash Table"
        ],
        "title": "Minimum Index Sum of Two Lists",
        "url": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/description/"
    },
    "600": {
        "description": "Given a positive integer n, find the number of non-negative integers less than or equal to n, whose binary representations do NOT contain consecutive ones.\r\n\r\nExample 1:\r\n\r\nInput: 5\r\nOutput: 5\r\nExplanation: \r\nHere are the non-negative integers <= 5 with their corresponding binary representations:\r\n0 : 0\r\n1 : 1\r\n2 : 10\r\n3 : 11\r\n4 : 100\r\n5 : 101\r\nAmong them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. \r\n\r\n\r\n\r\nNote:\r\n1 <= n <= 109",
        "level": 3,
        "paid_only": false,
        "question_id": 600,
        "slug": "non-negative-integers-without-consecutive-ones",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Non-negative Integers without Consecutive Ones",
        "url": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/description/"
    },
    "601": {
        "description": "X city built a new stadium, each day many people visit it and the stats are saved as these columns: id, date, people\r\n\r\nPlease write a query to display the records which have 3 or more consecutive rows and the  amount of people more than 100(inclusive).\r\n\r\n \r\nFor example, the table stadium:\r\n\r\n+------+------------+-----------+\r\n| id   | date       | people    |\r\n+------+------------+-----------+\r\n| 1    | 2017-01-01 | 10        |\r\n| 2    | 2017-01-02 | 109       |\r\n| 3    | 2017-01-03 | 150       |\r\n| 4    | 2017-01-04 | 99        |\r\n| 5    | 2017-01-05 | 145       |\r\n| 6    | 2017-01-06 | 1455      |\r\n| 7    | 2017-01-07 | 199       |\r\n| 8    | 2017-01-08 | 188       |\r\n+------+------------+-----------+\r\n\r\n\r\nFor the sample data above, the output is:\r\n\r\n\r\n+------+------------+-----------+\r\n| id   | date       | people    |\r\n+------+------------+-----------+\r\n| 5    | 2017-01-05 | 145       |\r\n| 6    | 2017-01-06 | 1455      |\r\n| 7    | 2017-01-07 | 199       |\r\n| 8    | 2017-01-08 | 188       |\r\n+------+------------+-----------+\r\n\r\n\r\nNote:\r\nEach day only have one row record, and the dates are increasing with id increasing.",
        "level": 3,
        "paid_only": false,
        "question_id": 601,
        "slug": "human-traffic-of-stadium",
        "tags": [],
        "title": "Human Traffic of Stadium",
        "url": "https://leetcode.com/problems/human-traffic-of-stadium/description/"
    },
    "604": {
        "description": "Design and implement a data structure for a compressed string iterator. It\nshould support the following operations: `next` and `hasNext`.\n\nThe given compressed string will be in the form of each letter followed by a\npositive integer representing the number of this letter existing in the\noriginal uncompressed string.\n\n`next()` \\- if the original string still has uncompressed characters, return\nthe next letter; Otherwise return a white space.\n`hasNext()` \\- Judge whether there is any letter needs to be uncompressed.\n\nNote:\nPlease remember to RESET your class variables declared in StringIterator, as\nstatic/class variables are persisted across multiple test cases. Please see\n[here](https://leetcode.com/faq/#different-output) for more details.\n\nExample:\n\n\n\n    StringIterator iterator = new StringIterator(\"L1e2t1C1o1d1e1\");\r\riterator.next(); // return 'L'\riterator.next(); // return 'e'\riterator.next(); // return 'e'\riterator.next(); // return 't'\riterator.next(); // return 'C'\riterator.next(); // return 'o'\riterator.next(); // return 'd'\riterator.hasNext(); // return true\riterator.next(); // return 'e'\riterator.hasNext(); // return false\riterator.next(); // return ' '",
        "level": 1,
        "paid_only": true,
        "question_id": 604,
        "slug": "design-compressed-string-iterator",
        "tags": [],
        "title": "Design Compressed String Iterator",
        "url": "https://leetcode.com/problems/design-compressed-string-iterator/description/"
    },
    "605": {
        "description": "Suppose you have a long flowerbed in which some of the plots are planted and some are not. However, flowers cannot be planted in adjacent plots - they would compete for water and both would die.\r\n\r\nGiven a flowerbed (represented as an array containing 0 and 1, where 0 means empty and 1 means not empty), and a number n, return if n new flowers can be planted in it without violating the no-adjacent-flowers rule.\r\n\r\nExample 1:\r\n\r\nInput: flowerbed = [1,0,0,0,1], n = 1\r\nOutput: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: flowerbed = [1,0,0,0,1], n = 2\r\nOutput: False\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input array won't violate no-adjacent-flowers rule.\r\nThe input array size is in the range of [1, 20000].\r\nn is a non-negative integer which won't exceed the input array size.",
        "level": 1,
        "paid_only": false,
        "question_id": 605,
        "slug": "can-place-flowers",
        "tags": [
            "Array"
        ],
        "title": "Can Place Flowers",
        "url": "https://leetcode.com/problems/can-place-flowers/description/"
    },
    "606": {
        "description": "You need to construct a string consists of parenthesis and integers from a binary tree with the preorder traversing way.\r\n\r\nThe null node needs to be represented by empty parenthesis pair \"()\". And you need to omit all the empty parenthesis pairs that don't affect the one-to-one mapping relationship between the string and the original binary tree.\r\n\r\nExample 1:\r\n\r\nInput: Binary tree: [1,2,3,4]\r\n       1\r\n     /   \\\r\n    2     3\r\n   /    \r\n  4     \r\n\r\nOutput: \"1(2(4))(3)\"\r\nExplanation: Originallay it needs to be \"1(2(4)())(3()())\", but you need to omit all the unnecessary empty parenthesis pairs. And it will be \"1(2(4))(3)\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: Binary tree: [1,2,3,null,4]\r\n       1\r\n     /   \\\r\n    2     3\r\n     \\  \r\n      4 \r\n\r\nOutput: \"1(2()(4))(3)\"\r\nExplanation: Almost the same as the first example, except we can't omit the first parenthesis pair to break the one-to-one mapping relationship between the input and the output.",
        "level": 1,
        "paid_only": false,
        "question_id": 606,
        "slug": "construct-string-from-binary-tree",
        "tags": [
            "String",
            "Tree"
        ],
        "title": "Construct String from Binary Tree",
        "url": "https://leetcode.com/problems/construct-string-from-binary-tree/description/"
    },
    "607": {
        "description": "You need to construct a string consists of parenthesis and integers from a\nbinary tree with the preorder traversing way.\n\nThe null node needs to be represented by empty parenthesis pair \"()\". And you\nneed to omit all the empty parenthesis pairs that don't affect the one-to-one\nmapping relationship between the string and the original binary tree.\n\nExample 1:\n\n\n\n    Input: Binary tree: [1,2,3,4]\r       1\r     /   \\\r    2     3\r   /    \r  4     \r\rOutput: \"1(2(4))(3)\"\r\n    Explanation: Originallay it needs to be \"1(2(4)())(3()())\",\n    but you need to omit all the unnecessary empty parenthesis pairs.\n    And it will be \"1(2(4))(3)\".\r\n\n\n\nExample 2:\n\n\n\n    Input: Binary tree: [1,2,3,null,4]\r       1\r     /   \\\r    2     3\r     \\  \r      4 \r\rOutput: \"1(2()(4))(3)\"\r\n    Explanation: Almost the same as the first example,\n    except we can't omit the first parenthesis pair to break the one-to-one mapping relationship between the input and the output.",
        "level": 1,
        "paid_only": true,
        "question_id": 607,
        "slug": "sales-person",
        "tags": [],
        "title": "Sales Person",
        "url": "https://leetcode.com/problems/sales-person/description/"
    },
    "609": {
        "description": "Given a list of directory info including directory path, and all the files with contents in this directory, you need to find out all the groups of duplicate files in the file system in terms of their paths.\r\n\r\nA group of duplicate files consists of at least two files that have exactly the same content.\r\n\r\nA single directory info string in the input list has the following format: \r\n\"root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)\"\r\nIt means there are n files (f1.txt, f2.txt ... fn.txt with content f1_content, f2_content ... fn_content, respectively) in directory root/d1/d2/.../dm. Note that n >= 1 and m >= 0. If m = 0, it means the directory is just the root directory.\r\n\r\nThe output is a list of group of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format: \r\n\"directory_path/file_name.txt\"\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n[\"root/a 1.txt(abcd) 2.txt(efgh)\", \"root/c 3.txt(abcd)\", \"root/c/d 4.txt(efgh)\", \"root 4.txt(efgh)\"]\r\nOutput:  \r\n[[\"root/a/2.txt\",\"root/c/d/4.txt\",\"root/4.txt\"],[\"root/a/1.txt\",\"root/c/3.txt\"]]\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nNo order is required for the final output.\r\nYou may assume the directory name, file name and file content only has letters and digits, and the length of file content is in the range of [1,50].\r\nThe number of files given is in the range of [1,20000].\r\nYou may assume no files or directories share the same name in the same directory.\r\nYou may assume each given directory info represents a unique directory. Directory path and file info are separated by a single blank space.\r\n\r\n\r\n\r\n\r\nFollow-up beyond contest: \r\n\r\n Imagine you are given a real file system, how will you search files? DFS or BFS?\r\n If the file content is very large (GB level), how will you modify your solution?\r\n If you can only read the file by 1kb each time, how will you modify your solution?\r\n What is the time complexity of your modified solution? What is the most time-consuming part and memory consuming part of it? How to optimize?\r\n How to make sure the duplicated files you find are not false positive?",
        "level": 2,
        "paid_only": false,
        "question_id": 609,
        "slug": "find-duplicate-file-in-system",
        "tags": [
            "Hash Table",
            "String"
        ],
        "title": "Find Duplicate File in System",
        "url": "https://leetcode.com/problems/find-duplicate-file-in-system/description/"
    },
    "611": {
        "description": "Given an array consists of non-negative integers,  your task is to count the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.\r\n\r\nExample 1:\r\n\r\nInput: [2,2,3,4]\r\nOutput: 3\r\nExplanation:\r\nValid combinations are: \r\n2,3,4 (using the first 2)\r\n2,3,4 (using the second 2)\r\n2,2,3\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the given array won't exceed 1000.\r\nThe integers in the given array are in the range of [0, 1000].",
        "level": 2,
        "paid_only": false,
        "question_id": 611,
        "slug": "valid-triangle-number",
        "tags": [
            "Array"
        ],
        "title": "Valid Triangle Number",
        "url": "https://leetcode.com/problems/valid-triangle-number/description/"
    },
    "616": {
        "description": "Given a string s and a list of strings dict, you need to add a closed pair of\nbold tag `<b>` and `</b>` to wrap the substrings in s that exist in dict. If\ntwo such substrings overlap, you need to wrap them together by only one pair\nof closed bold tag. Also, if two substrings wrapped by bold tags are\nconsecutive, you need to combine them.\n\nExample 1:\n\n\n\n    Input: \rs = \"abcxyz123\"\rdict = [\"abc\",\"123\"]\rOutput:\r\"<b>abc</b>xyz<b>123</b>\"\r\n\n\n\nExample 2:\n\n\n\n    Input: \rs = \"aaabbcc\"\rdict = [\"aaa\",\"aab\",\"bc\"]\rOutput:\r\"<b>aaabbc</b>c\"\r\n\n\n\nNote:\n\n  1. The given dict won't contain duplicates, and its length won't exceed 100.\n  2. All the strings in input have length in range [1, 1000].",
        "level": 2,
        "paid_only": true,
        "question_id": 616,
        "slug": "add-bold-tag-in-string",
        "tags": [],
        "title": "Add Bold Tag in String",
        "url": "https://leetcode.com/problems/add-bold-tag-in-string/description/"
    },
    "617": {
        "description": "Given two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not. \r\n\r\n\r\nYou need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\n\tTree 1                     Tree 2                  \r\n          1                         2                             \r\n         / \\                       / \\                            \r\n        3   2                     1   3                        \r\n       /                           \\   \\                      \r\n      5                             4   7                  \r\nOutput: \r\nMerged tree:\r\n\t     3\r\n\t    / \\\r\n\t   4   5\r\n\t  / \\   \\ \r\n\t 5   4   7\r\n\r\n\r\n\r\n\r\nNote:\r\nThe merging process must start from the root nodes of both trees.",
        "level": 1,
        "paid_only": false,
        "question_id": 617,
        "slug": "merge-two-binary-trees",
        "tags": [
            "Tree"
        ],
        "title": "Merge Two Binary Trees",
        "url": "https://leetcode.com/problems/merge-two-binary-trees/description/"
    },
    "620": {
        "description": "X city opened a new cinema, many people would like to go to this cinema.\r\nThe cinema also gives out a poster indicating the movies’ ratings and descriptions. \r\n \r\nPlease write a SQL query to output movies with an odd numbered ID and a description that is not 'boring'. Order the result by rating.\r\n\r\n\r\nFor example, table cinema:\r\n\r\n+---------+-----------+--------------+-----------+\r\n|   id    | movie     |  description |  rating   |\r\n+---------+-----------+--------------+-----------+\r\n|   1     | War       |   great 3D   |   8.9     |\r\n|   2     | Science   |   fiction    |   8.5     |\r\n|   3     | irish     |   boring     |   6.2     |\r\n|   4     | Ice song  |   Fantacy    |   8.6     |\r\n|   5     | House card|   Interesting|   9.1     |\r\n+---------+-----------+--------------+-----------+\r\n\r\nFor the example above, the output should be:\r\n\r\n+---------+-----------+--------------+-----------+\r\n|   id    | movie     |  description |  rating   |\r\n+---------+-----------+--------------+-----------+\r\n|   5     | House card|   Interesting|   9.1     |\r\n|   1     | War       |   great 3D   |   8.9     |\r\n+---------+-----------+--------------+-----------+",
        "level": 1,
        "paid_only": false,
        "question_id": 620,
        "slug": "not-boring-movies",
        "tags": [],
        "title": "Not Boring Movies",
        "url": "https://leetcode.com/problems/not-boring-movies/description/"
    },
    "621": {
        "description": "Given a char array representing tasks CPU need to do. It contains capital letters A to Z where different letters represent different tasks.Tasks could be done without original order. Each task could be done in one interval. For each interval, CPU could finish one task or just be idle.\r\n\r\nHowever, there is a non-negative cooling interval n that means between two same tasks, there must be at least n intervals that CPU are doing different tasks or just be idle. \r\n\r\nYou need to return the least number of intervals the CPU will take to finish all the given tasks.\r\n\r\nExample 1:\r\n\r\nInput: tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 2\r\nOutput: 8\r\nExplanation: A -> B -> idle -> A -> B -> idle -> A -> B.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe number of tasks is in the range [1, 10000].\r\nThe integer n is in the range [0, 100].",
        "level": 2,
        "paid_only": false,
        "question_id": 621,
        "slug": "task-scheduler",
        "tags": [
            "Array",
            "Greedy",
            "Queue"
        ],
        "title": "Task Scheduler",
        "url": "https://leetcode.com/problems/task-scheduler/description/"
    },
    "623": {
        "description": "Given the root of a binary tree, then value v and depth d, you need to add a row of nodes with value v at the given depth d. The root node is at depth 1. \r\n\r\nThe adding rule is: given a positive integer depth d, for each NOT null tree nodes N in depth d-1, create two tree nodes with value v as N's left subtree root and right subtree root. And N's original left subtree should be the left subtree of the new left subtree root, its original right subtree should be the right subtree of the new right subtree root. If depth d is 1 that means there is no depth d-1 at all, then create a tree node with value v as the new root of the whole original tree, and the original tree is the new root's left subtree.\r\n\r\nExample 1:\r\n\r\nInput: \r\nA binary tree as following:\r\n       4\r\n     /   \\\r\n    2     6\r\n   / \\   / \r\n  3   1 5   \r\n\r\nv = 1\r\n\r\nd = 2\r\n\r\nOutput: \r\n       4\r\n      / \\\r\n     1   1\r\n    /     \\\r\n   2       6\r\n  / \\     / \r\n 3   1   5   \r\n\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nA binary tree as following:\r\n      4\r\n     /   \r\n    2    \r\n   / \\   \r\n  3   1    \r\n\r\nv = 1\r\n\r\nd = 3\r\n\r\nOutput: \r\n      4\r\n     /   \r\n    2\r\n   / \\    \r\n  1   1\r\n /     \\  \r\n3       1\r\n\r\n\r\n\r\nNote:\r\n\r\nThe given d is in range [1, maximum depth of the given tree + 1].\r\nThe given binary tree has at least one tree node.",
        "level": 2,
        "paid_only": false,
        "question_id": 623,
        "slug": "add-one-row-to-tree",
        "tags": [
            "Tree"
        ],
        "title": "Add One Row to Tree",
        "url": "https://leetcode.com/problems/add-one-row-to-tree/description/"
    },
    "624": {
        "description": "Given `m` arrays, and each array is sorted in ascending order. Now you can\npick up two integers from two different arrays (each array picks one) and\ncalculate the distance. We define the distance between two integers `a` and\n`b` to be their absolute difference `|a-b|`. Your task is to find the maximum\ndistance.\n\nExample 1:\n\n\n\n    Input: \r[[1,2,3],\r [4,5],\r [1,2,3]]\rOutput: 4\rExplanation: \rOne way to reach the maximum distance 4 is to pick 1 in the first or third array and pick 5 in the second array.\r\n\n\n\nNote:\n\n  1. Each given array will have at least 1 number. There will be at least two non-empty arrays.\n  2. The total number of the integers in all the `m` arrays will be in the range of [2, 10000].\n  3. The integers in the `m` arrays will be in the range of [-10000, 10000].",
        "level": 1,
        "paid_only": true,
        "question_id": 624,
        "slug": "maximum-distance-in-arrays",
        "tags": [],
        "title": "Maximum Distance in Arrays",
        "url": "https://leetcode.com/problems/maximum-distance-in-arrays/description/"
    },
    "626": {
        "description": "Mary is a teacher in a middle school and she has a table seat storing students' names and their corresponding seat ids.\r\nThe column id is continuous increment.\r\nMary wants to change seats for the adjacent students.\r\nCan you write a SQL query to output the result for Mary?\r\n\r\n+---------+---------+\r\n|    id   | student |\r\n+---------+---------+\r\n|    1    | Abbot   |\r\n|    2    | Doris   |\r\n|    3    | Emerson |\r\n|    4    | Green   |\r\n|    5    | Jeames  |\r\n+---------+---------+\r\n\r\nFor the sample input, the output is:\r\n\r\n+---------+---------+\r\n|    id   | student |\r\n+---------+---------+\r\n|    1    | Doris   |\r\n|    2    | Abbot   |\r\n|    3    | Green   |\r\n|    4    | Emerson |\r\n|    5    | Jeames  |\r\n+---------+---------+\r\n\r\n\r\nNote:\r\nIf the number of students is odd, there is no need to change the last one's seat.",
        "level": 2,
        "paid_only": false,
        "question_id": 626,
        "slug": "exchange-seats",
        "tags": [],
        "title": "Exchange Seats",
        "url": "https://leetcode.com/problems/exchange-seats/description/"
    },
    "627": {
        "description": "Given a table salary, such as the one below, that has m=male and  f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update query and no intermediate temp table.\r\n \r\nFor example:\r\n \r\n\r\n| id | name | sex | salary |\r\n|----|------|-----|--------|\r\n| 1  | A    | m   | 2500   |\r\n| 2  | B    | f   | 1500   |\r\n| 3  | C    | m   | 5500   |\r\n| 4  | D    | f   | 500    |\r\n\r\nAfter running your query, the above salary table should have the following rows:\r\n\r\n| id | name | sex | salary |\r\n|----|------|-----|--------|\r\n| 1  | A    | f   | 2500   |\r\n| 2  | B    | m   | 1500   |\r\n| 3  | C    | f   | 5500   |\r\n| 4  | D    | m   | 500    |",
        "level": 1,
        "paid_only": false,
        "question_id": 627,
        "slug": "swap-salary",
        "tags": [],
        "title": "Swap Salary",
        "url": "https://leetcode.com/problems/swap-salary/description/"
    },
    "628": {
        "description": "Given an integer array, find three numbers whose product is maximum and output the maximum product.\r\n\r\nExample 1:\r\n\r\nInput: [1,2,3]\r\nOutput: 6\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2,3,4]\r\nOutput: 24\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].\r\nMultiplication of any three numbers in the input won't exceed the range of 32-bit signed integer.",
        "level": 1,
        "paid_only": false,
        "question_id": 628,
        "slug": "maximum-product-of-three-numbers",
        "tags": [
            "Array",
            "Math"
        ],
        "title": "Maximum Product of Three Numbers",
        "url": "https://leetcode.com/problems/maximum-product-of-three-numbers/description/"
    },
    "629": {
        "description": "Given two integers n and k, find how many different arrays consist of numbers from 1 to n such that there are exactly k inverse pairs. \r\n\r\n\r\nWe define an inverse pair as following:\r\nFor ith and jth element in the array, if i < j and a[i] > a[j] then it's an inverse pair; Otherwise, it's not.\r\n\r\n\r\n\r\nSince the answer may be very large, the answer should be modulo 109 + 7.\r\n\r\n\r\nExample 1:\r\n\r\nInput: n = 3, k = 0\r\nOutput: 1\r\nExplanation: \r\nOnly the array [1,2,3] which consists of numbers from 1 to 3 has exactly 0 inverse pair.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: n = 3, k = 1\r\nOutput: 2\r\nExplanation: \r\nThe array [1,3,2] and [2,1,3] have exactly 1 inverse pair.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe integer n is in the range [1, 1000] and k is in the range [0, 1000].",
        "level": 3,
        "paid_only": false,
        "question_id": 629,
        "slug": "k-inverse-pairs-array",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "K Inverse Pairs Array",
        "url": "https://leetcode.com/problems/k-inverse-pairs-array/description/"
    },
    "630": {
        "description": "There are n different online courses numbered from 1 to n. Each course has some duration(course length)  t and closed on dth day. A course should be taken continuously for t days and must be finished before or on the dth day. You will start at the 1st day.\r\n\r\n\r\n\r\nGiven n online courses represented by pairs (t,d), your task is to find the maximal number of courses that can be taken.\r\n\r\n\r\n\r\nExample:\r\n\r\nInput: [[100, 200], [200, 1300], [1000, 1250], [2000, 3200]]\r\nOutput: 3\r\nExplanation: \r\nThere're totally 4 courses, but you can take 3 courses at most:\r\nFirst, take the 1st course, it costs 100 days so you will finish it on the 100th day, and ready to take the next course on the 101st day.\r\nSecond, take the 3rd course, it costs 1000 days so you will finish it on the 1100th day, and ready to take the next course on the 1101st day. \r\nThird, take the 2nd course, it costs 200 days so you will finish it on the 1300th day. \r\nThe 4th course cannot be taken now, since you will finish it on the 3300th day, which exceeds the closed date.\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe integer 1 <= d, t, n <= 10,000. \r\nYou can't take two courses simultaneously.",
        "level": 3,
        "paid_only": false,
        "question_id": 630,
        "slug": "course-schedule-iii",
        "tags": [
            "Greedy"
        ],
        "title": "Course Schedule III",
        "url": "https://leetcode.com/problems/course-schedule-iii/description/"
    },
    "631": {
        "description": "Your task is to design the basic function of Excel and implement the function\nof sum formula. Specifically, you need to implement the following functions:\n\n`Excel(int H, char W):` This is the constructor. The inputs represents the\nheight and width of the Excel form. His a positive integer, range from 1 to\n26. It represents the height. W is a character range from 'A' to 'Z'. It\nrepresents that the width is the number of characters from 'A' to W. The Excel\nform content is represented by a height * width 2D integer array `C`, it\nshould be initialized to zero. You should assume that the first row of `C`\nstarts from 1, and the first column of `C` starts from 'A'.\n\n\n\n`void Set(int row, char column, int val):` Change the value at `C(row,\ncolumn)` to be val.\n\n\n\n`int Get(int row, char column):` Return the value at `C(row, column)`.\n\n\n\n`int Sum(int row, char column, List of Strings : numbers):` This function\ncalculate and set the value at `C(row, column)`, where the value should be the\nsum of cells represented by `numbers`. This function return the sum result at\n`C(row, column)`. This sum formula should exist until this cell is overlapped\nby another value or another sum formula.\n\n`numbers` is a list of strings that each string represent a cell or a range of\ncells. If the string represent a single cell, then it has the following format\n: `ColRow`. For example, \"F7\" represents the cell at (7, F).\n\nIf the string represent a range of cells, then it has the following format :\n`ColRow1:ColRow2`. The range will always be a rectangle, and ColRow1 represent\nthe position of the top-left cell, and ColRow2 represents the position of the\nbottom-right cell.\n\n\n\nExample 1:\n\n\n\n    Excel(3,\"C\"); \r// construct a 3*3 2D array with all zero.\r//   A B C\r// 1 0 0 0\r// 2 0 0 0\r// 3 0 0 0\r\rSet(1, \"A\", 2);\r// set C(1,\"A\") to be 2.\r//   A B C\r// 1 2 0 0\r// 2 0 0 0\r// 3 0 0 0\r\rSum(3, \"C\", [\"A1\", \"A1:B2\"]);\r// set C(3,\"C\") to be the sum of value at C(1,\"A\") and the values sum of the rectangle range whose top-left cell is C(1,\"A\") and bottom-right cell is C(2,\"B\"). Return 4. \r//   A B C\r// 1 2 0 0\r// 2 0 0 0\r// 3 0 0 4\r\rSet(2, \"B\", 2);\r// set C(2,\"B\") to be 2. Note C(3, \"C\") should also be changed.\r//   A B C\r// 1 2 0 0\r// 2 0 2 0\r// 3 0 0 6\r\n\n\n\nNote:\n\n  1. You could assume that there won't be any circular sum reference. For example, A1 = sum(B1) and B1 = sum(A1).\n  2. The test cases are using double-quotes to represent a character.\n  3. Please remember to RESET your class variables declared in class Excel, as static/class variables are persisted across multiple test cases. Please see [here](https://leetcode.com/faq/#different-output) for more details.",
        "level": 3,
        "paid_only": true,
        "question_id": 631,
        "slug": "design-excel-sum-formula",
        "tags": [],
        "title": "Design Excel Sum Formula",
        "url": "https://leetcode.com/problems/design-excel-sum-formula/description/"
    },
    "632": {
        "description": "You have k lists of sorted integers in ascending order. Find the smallest range that includes at least one number from each of the k lists. \r\n\r\nWe define the range [a,b] is smaller than range [c,d] if b-a < d-c or a < c if b-a == d-c.\r\n\r\nExample 1:\r\n\r\nInput:[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]]\r\nOutput: [20,24]\r\nExplanation: \r\nList 1: [4, 10, 15, 24,26], 24 is in range [20,24].\r\nList 2: [0, 9, 12, 20], 20 is in range [20,24].\r\nList 3: [5, 18, 22, 30], 22 is in range [20,24].\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe given list may contain duplicates, so ascending order means >= here.\r\n1 <= k <= 3500\r\n -105 <= value of elements <= 105.\r\nFor Java users, please note that the input type has been changed to List<List<Integer>>. And after you reset the code template, you'll see this point.",
        "level": 3,
        "paid_only": false,
        "question_id": 632,
        "slug": "smallest-range",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "String"
        ],
        "title": "Smallest Range",
        "url": "https://leetcode.com/problems/smallest-range/description/"
    },
    "633": {
        "description": "Given a non-negative integer c, your task is to decide whether there're two integers a and b such that a2 + b2 = c.\r\n\r\n\r\nExample 1:\r\n\r\nInput: 5\r\nOutput: True\r\nExplanation: 1 * 1 + 2 * 2 = 5\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 3\r\nOutput: False",
        "level": 1,
        "paid_only": false,
        "question_id": 633,
        "slug": "sum-of-square-numbers",
        "tags": [
            "Math"
        ],
        "title": "Sum of Square Numbers",
        "url": "https://leetcode.com/problems/sum-of-square-numbers/description/"
    },
    "634": {
        "description": "In combinatorial mathematics, a derangement is a permutation of the elements\nof a set, such that no element appears in its original position.\n\nThere's originally an array consisting of `n` integers from 1 to `n` in\nascending order, you need to find the number of derangement it can generate.\n\nAlso, since the answer may be very large, you should return the output mod 109\n\\+ 7.\n\nExample 1:\n\n\n\n    Input: 3\rOutput: 2\rExplanation: The original array is [1,2,3]. The two derangements are [2,3,1] and [3,1,2].\r\n\n\n\nNote:\n`n` is in the range of [1, 106].",
        "level": 2,
        "paid_only": true,
        "question_id": 634,
        "slug": "find-the-derangement-of-an-array",
        "tags": [],
        "title": "Find the Derangement of An Array",
        "url": "https://leetcode.com/problems/find-the-derangement-of-an-array/description/"
    },
    "635": {
        "description": "You are given several logs that each log contains a unique id and timestamp.\nTimestamp is a string that has the following format:\n`Year:Month:Day:Hour:Minute:Second`, for example, `2017:01:01:23:59:59`. All\ndomains are zero-padded decimal numbers.\n\nDesign a log storage system to implement the following functions:\n\n`void Put(int id, string timestamp)`: Given a log's unique id and timestamp,\nstore the log in your storage system.\n\n\n\n`int[] Retrieve(String start, String end, String granularity)`: Return the id\nof logs whose timestamps are within the range from start to end. Start and end\nall have the same format as timestamp. However, granularity means the time\nlevel for consideration. For example, start = \"2017:01:01:23:59:59\", end =\n\"2017:01:02:23:59:59\", granularity = \"Day\", it means that we need to find the\nlogs within the range from Jan. 1st 2017 to Jan. 2nd 2017.\n\nExample 1:\n\n\n\n    put(1, \"2017:01:01:23:59:59\");\rput(2, \"2017:01:01:22:59:59\");\rput(3, \"2016:01:01:00:00:00\");\rretrieve(\"2016:01:01:01:01:01\",\"2017:01:01:23:00:00\",\"Year\"); // return [1,2,3], because you need to return all logs within 2016 and 2017.\rretrieve(\"2016:01:01:01:01:01\",\"2017:01:01:23:00:00\",\"Hour\"); // return [1,2], because you need to return all logs start from 2016:01:01:01 to 2017:01:01:23, where log 3 is left outside the range.\r\n\n\n\nNote:\n\n  1. There will be at most 300 operations of Put or Retrieve.\n  2. Year ranges from [2000,2017]. Hour ranges from [00,23].\n  3. Output for Retrieve has no order required.",
        "level": 2,
        "paid_only": true,
        "question_id": 635,
        "slug": "design-log-storage-system",
        "tags": [],
        "title": "Design Log Storage System",
        "url": "https://leetcode.com/problems/design-log-storage-system/description/"
    },
    "636": {
        "description": "Given the running logs of n functions that are executed in a nonpreemptive single threaded CPU, find the exclusive time of these functions. \r\n\r\nEach function has a unique id, start from 0 to n-1. A function may be called recursively or by another function.\r\n\r\nA log is a string has this format : function_id:start_or_end:timestamp. For example, \"0:start:0\" means function 0 starts from the very beginning of time 0. \"0:end:0\" means function 0 ends to the very end of time 0. \r\n\r\nExclusive time of a function is defined as the time spent within this function, the time spent by calling other functions should not be considered as this function's exclusive time. You should return the exclusive time of each function sorted by their function id.\r\n\r\nExample 1:\r\n\r\nInput:\r\nn = 2\r\nlogs = \r\n[\"0:start:0\",\r\n \"1:start:2\",\r\n \"1:end:5\",\r\n \"0:end:6\"]\r\nOutput:[3, 4]\r\nExplanation:\r\nFunction 0 starts at time 0, then it executes 2 units of time and reaches the end of time 1. \r\nNow function 0 calls function 1, function 1 starts at time 2, executes 4 units of time and end at time 5.\r\nFunction 0 is running again at time 6, and also end at the time 6, thus executes 1 unit of time. \r\nSo function 0 totally execute 2 + 1 = 3 units of time, and function 1 totally execute 4 units of time.\r\n\r\n\r\n\r\nNote:\r\n\r\nInput logs will be sorted by timestamp, NOT log id.\r\nYour output should be sorted by function id, which means the 0th element of your output corresponds to the exclusive time of function 0.\r\nTwo functions won't start or end at the same time.\r\nFunctions could be called recursively, and will always end.\r\n1 <= n <= 100",
        "level": 2,
        "paid_only": false,
        "question_id": 636,
        "slug": "exclusive-time-of-functions",
        "tags": [
            "Stack"
        ],
        "title": "Exclusive Time of Functions",
        "url": "https://leetcode.com/problems/exclusive-time-of-functions/description/"
    },
    "637": {
        "description": "Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.\r\n\r\nExample 1:\r\n\r\nInput:\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\nOutput: [3, 14.5, 11]\r\nExplanation:\r\nThe average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].\r\n\r\n\r\n\r\nNote:\r\n\r\nThe range of node's value is in the range of 32-bit signed integer.",
        "level": 1,
        "paid_only": false,
        "question_id": 637,
        "slug": "average-of-levels-in-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Average of Levels in Binary Tree",
        "url": "https://leetcode.com/problems/average-of-levels-in-binary-tree/description/"
    },
    "638": {
        "description": "In LeetCode Store, there are some kinds of items to sell. Each item has a price.\r\n\r\n\r\n\r\nHowever, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\r\n\r\n\r\n\r\nYou are given the each item's price, a set of special offers, and the number we need to buy for each item.\r\nThe job is to output the lowest price you have to pay for exactly certain items as given, where you could make optimal use of the special offers.\r\n\r\n\r\n\r\nEach special offer is represented in the form of an array, the last number represents the price you need to pay for this special offer, other numbers represents how many specific items you could get if you buy this offer.\r\n\r\n\r\nYou could use any of special offers as many times as you want.\r\n\r\nExample 1:\r\n\r\nInput: [2,5], [[3,0,5],[1,2,10]], [3,2]\r\nOutput: 14\r\nExplanation: \r\nThere are two kinds of items, A and B. Their prices are $2 and $5 respectively. \r\nIn special offer 1, you can pay $5 for 3A and 0B\r\nIn special offer 2, you can pay $10 for 1A and 2B. \r\nYou need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1]\r\nOutput: 11\r\nExplanation: \r\nThe price of A is $2, and $3 for B, $4 for C. \r\nYou may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \r\nYou need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \r\nYou cannot add more items, though only $9 for 2A ,2B and 1C.\r\n\r\n\r\n\r\nNote:\r\n\r\nThere are at most 6 kinds of items, 100 special offers.\r\nFor each item, you need to buy at most 6 of them.\r\nYou are not allowed to buy more items than you want, even if that would lower the overall price.",
        "level": 2,
        "paid_only": false,
        "question_id": 638,
        "slug": "shopping-offers",
        "tags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "title": "Shopping Offers",
        "url": "https://leetcode.com/problems/shopping-offers/description/"
    },
    "639": {
        "description": "A message containing letters from A-Z is being encoded to numbers using the following mapping way:\r\n\r\n\r\n\r\n'A' -> 1\r\n'B' -> 2\r\n...\r\n'Z' -> 26\r\n\r\n\r\n\r\nBeyond that, now the encoded string can also contain the character '*', which can be treated as one of the numbers from 1 to 9.\r\n\r\n\r\n\r\n\r\nGiven the encoded message containing digits and the character '*', return the total number of ways to decode it.\r\n\r\n\r\n\r\nAlso, since the answer may be very large, you should return the output mod 109 + 7.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"*\"\r\nOutput: 9\r\nExplanation: The encoded message can be decoded to the string: \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"1*\"\r\nOutput: 9 + 9 = 18\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the input string will fit in range [1, 105].\r\nThe input string will only contain the character '*' and digits '0' - '9'.",
        "level": 3,
        "paid_only": false,
        "question_id": 639,
        "slug": "decode-ways-ii",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Decode Ways II",
        "url": "https://leetcode.com/problems/decode-ways-ii/description/"
    },
    "640": {
        "description": "Solve a given equation and return the value of x in the form of string \"x=#value\". The equation contains only '+', '-' operation, the variable x and its coefficient.\r\n\r\n\r\n\r\nIf there is no solution for the equation, return \"No solution\".\r\n\r\n\r\nIf there are infinite solutions for the equation, return \"Infinite solutions\".\r\n\r\n\r\nIf there is exactly one solution for the equation, we ensure that the value of x is an integer.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"x+5-3+x=6+x-2\"\r\nOutput: \"x=2\"\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"x=x\"\r\nOutput: \"Infinite solutions\"\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"2x=x\"\r\nOutput: \"x=0\"\r\n\r\n\r\n\r\nExample 4:\r\n\r\nInput: \"2x+3x-6x=x+2\"\r\nOutput: \"x=-1\"\r\n\r\n\r\n\r\nExample 5:\r\n\r\nInput: \"x=x+2\"\r\nOutput: \"No solution\"",
        "level": 2,
        "paid_only": false,
        "question_id": 640,
        "slug": "solve-the-equation",
        "tags": [
            "Math"
        ],
        "title": "Solve the Equation",
        "url": "https://leetcode.com/problems/solve-the-equation/description/"
    },
    "642": {
        "description": "Design a search autocomplete system for a search engine. Users may input a\nsentence (at least one word and end with a special character `'#'`). For each\ncharacter they type except '#', you need to return the top 3historical hot\nsentences that have prefix the same as the part of sentence already typed.\nHere are the specific rules:\n\n  1. The hot degree for a sentence is defined as the number of times a user typed the exactly same sentence before.\n  2. The returned top 3 hot sentences should be sorted by hot degree (The first is the hottest one). If several sentences have the same degree of hot, you need to use ASCII-code order (smaller one appears first).\n  3. If less than 3 hot sentences exist, then just return as many as you can.\n  4. When the input is a special character, it means the sentence ends, and in this case, you need to return an empty list.\n\nYour job is to implement the following functions:\n\nThe constructor function:\n\n`AutocompleteSystem(String[] sentences, int[] times):` This is the\nconstructor. The input is historical data. `Sentences` is a string array\nconsists of previously typed sentences. `Times` is the corresponding times a\nsentence has been typed. Your system should record these historical data.\n\nNow, the user wants to input a new sentence. The following function will\nprovide the next character the user types:\n\n`List<String> input(char c):` The input `c` is the next character typed by the\nuser. The character will only be lower-case letters (`'a'` to `'z'`), blank\nspace (`' '`) or a special character (`'#'`). Also, the previously typed\nsentence should be recorded in your system. The output will be the top 3\nhistorical hot sentences that have prefix the same as the part of sentence\nalready typed.\n\n\n\nExample:\nOperation: AutocompleteSystem([\"i love you\", \"island\",\"ironman\", \"i love\nleetcode\"], [5,3,2,2])\nThe system have already tracked down the following sentences and their\ncorresponding times:\n`\"i love you\"` : `5` times\n`\"island\"` : `3` times\n`\"ironman\"` : `2` times\n`\"i love leetcode\"` : `2` times\nNow, the user begins another search:\n\nOperation: input('i')\nOutput: [\"i love you\", \"island\",\"i love leetcode\"]\nExplanation:\nThere are four sentences that have prefix `\"i\"`. Among them, \"ironman\" and \"i\nlove leetcode\" have same hot degree. Since `' '` has ASCII code 32 and `'r'`\nhas ASCII code 114, \"i love leetcode\" should be in front of \"ironman\". Also we\nonly need to output top 3 hot sentences, so \"ironman\" will be ignored.\n\nOperation: input(' ')\nOutput: [\"i love you\",\"i love leetcode\"]\nExplanation:\nThere are only two sentences that have prefix `\"i \"`.\n\nOperation: input('a')\nOutput: []\nExplanation:\nThere are no sentences that have prefix `\"i a\"`.\n\nOperation: input('#')\nOutput: []\nExplanation:\nThe user finished the input, the sentence `\"i a\"` should be saved as a\nhistorical sentence in system. And the following input will be counted as a\nnew search.\n\n\n\nNote:\n\n    1. The input sentence will always start with a letter and end with '#', and only one blank space will exist between two words.\n    2. The number of complete sentences that to be searched won't exceed 100. The length of each sentence including those in the historical data won't exceed 100.\n    3. Please use double-quote instead of single-quote when you write test cases even for a character input.\n    4. Please remember to RESET your class variables declared in class AutocompleteSystem, as static/class variables are persisted across multiple test cases. Please see [here](https://leetcode.com/faq/#different-output) for more details.",
        "level": 3,
        "paid_only": true,
        "question_id": 642,
        "slug": "design-search-autocomplete-system",
        "tags": [],
        "title": "Design Search Autocomplete System",
        "url": "https://leetcode.com/problems/design-search-autocomplete-system/description/"
    },
    "643": {
        "description": "Given an array consisting of n integers, find the contiguous subarray of given length k that has the maximum average value. And you need to output the maximum average value.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,12,-5,-6,50,3], k = 4\r\nOutput: 12.75\r\nExplanation: Maximum average is (12-5-6+50)/4 = 51/4 = 12.75\r\n\r\n\r\n\r\nNote:\r\n\r\n1 <= k <= n <= 30,000.\r\nElements of the given array will be in the range [-10,000, 10,000].",
        "level": 1,
        "paid_only": false,
        "question_id": 643,
        "slug": "maximum-average-subarray-i",
        "tags": [
            "Array"
        ],
        "title": "Maximum Average Subarray I",
        "url": "https://leetcode.com/problems/maximum-average-subarray-i/description/"
    },
    "644": {
        "description": "Given an array consisting of `n` integers, find the contiguous subarray whose\nlength is greater than or equal to `k` that has the maximum average value. And\nyou need to output the maximum average value.\n\nExample 1:\n\n\n\n    Input: [1,12,-5,-6,50,3], k = 4\rOutput: 12.75\rExplanation:\rwhen length is 5, maximum average value is 10.8,\rwhen length is 6, maximum average value is 9.16667.\rThus return 12.75.\r\n\n\n\nNote:\n\n  1. 1 <= `k` <= `n` <= 10,000.\n  2. Elements of the given array will be in range [-10,000, 10,000].\n  3. The answer with the calculation error less than 10-5 will be accepted.",
        "level": 3,
        "paid_only": true,
        "question_id": 644,
        "slug": "maximum-average-subarray-ii",
        "tags": [],
        "title": "Maximum Average Subarray II",
        "url": "https://leetcode.com/problems/maximum-average-subarray-ii/description/"
    },
    "645": {
        "description": "The set S originally contains numbers from 1 to n. But unfortunately, due to the data error, one of the numbers in the set got duplicated to another number in the set, which results in repetition of one number and loss of another number. \r\n\r\n\r\n\r\nGiven an array nums representing the data status of this set after the error. Your task is to firstly find the number occurs twice and then find the number that is missing. Return them in the form of an array.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: nums = [1,2,2,4]\r\nOutput: [2,3]\r\n\r\n\r\n\r\nNote:\r\n\r\nThe given array size will in the range [2, 10000].\r\nThe given array's numbers won't have any order.",
        "level": 1,
        "paid_only": false,
        "question_id": 645,
        "slug": "set-mismatch",
        "tags": [
            "Hash Table",
            "Math"
        ],
        "title": "Set Mismatch",
        "url": "https://leetcode.com/problems/set-mismatch/description/"
    },
    "646": {
        "description": "You are given n pairs of numbers. In every pair, the first number is always smaller than the second number.\r\n\r\n\r\n\r\nNow, we define a pair (c, d) can follow another pair (a, b) if and only if b < c. Chain of pairs can be formed in this fashion. \r\n\r\n\r\n\r\nGiven a set of pairs, find the length longest chain which can be formed. You needn't use up all the given pairs. You can select pairs in any order.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [[1,2], [2,3], [3,4]]\r\nOutput: 2\r\nExplanation: The longest chain is [1,2] -> [3,4]\r\n\r\n\r\n\r\nNote:\r\n\r\nThe number of given pairs will be in the range [1, 1000].",
        "level": 2,
        "paid_only": false,
        "question_id": 646,
        "slug": "maximum-length-of-pair-chain",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Maximum Length of Pair Chain",
        "url": "https://leetcode.com/problems/maximum-length-of-pair-chain/description/"
    },
    "647": {
        "description": "Given a string, your task is to count how many palindromic substrings in this string.\r\n\r\n\r\n\r\nThe substrings with different start indexes or end indexes are counted as different substrings even they consist of same characters. \r\n\r\n\r\nExample 1:\r\n\r\nInput: \"abc\"\r\nOutput: 3\r\nExplanation: Three palindromic strings: \"a\", \"b\", \"c\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"aaa\"\r\nOutput: 6\r\nExplanation: Six palindromic strings: \"a\", \"a\", \"a\", \"aa\", \"aa\", \"aaa\".\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input string length won't exceed 1000.",
        "level": 2,
        "paid_only": false,
        "question_id": 647,
        "slug": "palindromic-substrings",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "title": "Palindromic Substrings",
        "url": "https://leetcode.com/problems/palindromic-substrings/description/"
    },
    "648": {
        "description": "In English, we have a concept called root, which can be followed by some other words to form another longer word - let's call this word successor. For example, the root an, followed by other, which can form another word another.\r\n\r\n\r\n\r\n\r\nNow, given a dictionary consisting of many roots and a sentence. You need to replace all the successor in the sentence with the root forming it. If a successor has many roots can form it, replace it with the root with the shortest length.\r\n\r\n\r\n\r\nYou need to output the sentence after the replacement.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: dict = [\"cat\", \"bat\", \"rat\"]\r\nsentence = \"the cattle was rattled by the battery\"\r\nOutput: \"the cat was rat by the bat\"\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input will only have lower-case letters.\r\n 1 <= dict words number <= 1000 \r\n 1 <= sentence words number <= 1000  \r\n 1 <= root length <= 100 \r\n 1 <= sentence words length <= 1000",
        "level": 2,
        "paid_only": false,
        "question_id": 648,
        "slug": "replace-words",
        "tags": [
            "Hash Table",
            "Trie"
        ],
        "title": "Replace Words",
        "url": "https://leetcode.com/problems/replace-words/description/"
    },
    "649": {
        "description": "In the world of Dota2, there are two parties: the Radiant and the Dire.\r\n\r\n\r\n\r\nThe Dota2 senate consists of senators coming from two parties. Now the senate wants to make a decision about a change in the Dota2 game. The voting for this change is a round-based procedure. In each round, each senator can exercise one of the two rights:\r\n\r\nBan one senator's right: A senator can make another senator lose all his rights in this and all the following rounds.\r\nAnnounce the victory: If this senator found the senators who still have rights to vote are all from the same party, he can announce the victory and make the decision about the change in the game.\r\n\r\n\r\n\r\n\r\nGiven a string representing each senator's party belonging. The character 'R' and 'D' represent the Radiant party and the Dire party respectively. Then if there are n senators, the size of the given string will be n.\r\n\r\n\r\n\r\nThe round-based procedure starts from the first senator to the last senator in the given order. This procedure will last until the end of voting. All the senators who have lost their rights will be skipped during the procedure.\r\n\r\n\r\n\r\nSuppose every senator is smart enough and will play the best strategy for his own party, you need to predict which party will finally announce the victory and make the change in the Dota2 game. The output should be Radiant or Dire.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"RD\"\r\nOutput: \"Radiant\"\r\nExplanation: The first senator comes from Radiant and he can just ban the next senator's right in the round 1. And the second senator can't exercise any rights any more since his right has been banned. And in the round 2, the first senator can just announce the victory since he is the only guy in the senate who can vote.\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"RDD\"\r\nOutput: \"Dire\"\r\nExplanation: \r\nThe first senator comes from Radiant and he can just ban the next senator's right in the round 1. And the second senator can't exercise any rights anymore since his right has been banned. And the third senator comes from Dire and he can ban the first senator's right in the round 1. And in the round 2, the third senator can just announce the victory since he is the only guy in the senate who can vote.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the given string will in the range [1, 10,000].",
        "level": 2,
        "paid_only": false,
        "question_id": 649,
        "slug": "dota2-senate",
        "tags": [
            "Greedy"
        ],
        "title": "Dota2 Senate",
        "url": "https://leetcode.com/problems/dota2-senate/description/"
    },
    "650": {
        "description": "Initially on a notepad only one character 'A' is present. You can perform two operations on this notepad for each step: \r\n\r\nCopy All: You can copy all the characters present on the notepad (partial copy is not allowed).\r\nPaste: You can paste the characters which are copied last time.\r\n\r\n\r\n\r\n\r\nGiven a number n. You have to get exactly n 'A' on the notepad by performing the minimum number of steps permitted. Output the minimum number of steps to get n 'A'. \r\n\r\n\r\nExample 1:\r\n\r\nInput: 3\r\nOutput: 3\r\nExplanation:\r\nIntitally, we have one character 'A'.\r\nIn step 1, we use Copy All operation.\r\nIn step 2, we use Paste operation to get 'AA'.\r\nIn step 3, we use Paste operation to get 'AAA'.\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe n will be in the range [1, 1000].",
        "level": 2,
        "paid_only": false,
        "question_id": 650,
        "slug": "2-keys-keyboard",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "2 Keys Keyboard",
        "url": "https://leetcode.com/problems/2-keys-keyboard/description/"
    },
    "651": {
        "description": "Imagine you have a special keyboard with the following keys:\n\n`Key 1: (A)`: Print one 'A' on screen.\n\n`Key 2: (Ctrl-A)`: Select the whole screen.\n\n`Key 3: (Ctrl-C)`: Copy selection to buffer.\n\n`Key 4: (Ctrl-V)`: Print buffer on screen appending it after what has already\nbeen printed.\n\nNow, you can only press the keyboard for N times (with the above four keys),\nfind out the maximum numbers of 'A' you can print on screen.\n\nExample 1:\n\n\n\n    Input: N = 3\rOutput: 3\rExplanation: \rWe can at most get 3 A's on screen by pressing following key sequence:\rA, A, A\r\n\n\n\nExample 2:\n\n\n\n    Input: N = 7\rOutput: 9\rExplanation: \rWe can at most get 9 A's on screen by pressing following key sequence:\rA, A, A, Ctrl A, Ctrl C, Ctrl V, Ctrl V\r\n\n\n\nNote:\n\n  1. 1 <= N <= 50\n  2. Answers will be in the range of 32-bit signed integer.",
        "level": 2,
        "paid_only": true,
        "question_id": 651,
        "slug": "4-keys-keyboard",
        "tags": [],
        "title": "4 Keys Keyboard",
        "url": "https://leetcode.com/problems/4-keys-keyboard/description/"
    },
    "652": {
        "description": "Given a binary tree, return all duplicate subtrees. For each kind of duplicate subtrees, you only need to return the root node of any one of them. \r\n\r\n\r\nTwo trees are duplicate if they have the same structure with same node values.\r\n\r\n\r\nExample 1: \r\n\r\n        1\r\n       / \\\r\n      2   3\r\n     /   / \\\r\n    4   2   4\r\n       /\r\n      4\r\n\r\nThe following are two duplicate subtrees:\r\n\r\n      2\r\n     /\r\n    4\r\n\r\nand\r\n\r\n    4\r\n\r\nTherefore, you need to return above trees' root in the form of a list.",
        "level": 2,
        "paid_only": false,
        "question_id": 652,
        "slug": "find-duplicate-subtrees",
        "tags": [
            "Tree"
        ],
        "title": "Find Duplicate Subtrees",
        "url": "https://leetcode.com/problems/find-duplicate-subtrees/description/"
    },
    "653": {
        "description": "Given a Binary Search Tree and a target number, return true if there exist two elements in the BST such that their sum is equal to the given target.\r\n\r\nExample 1:\r\n\r\nInput: \r\n    5\r\n   / \\\r\n  3   6\r\n / \\   \\\r\n2   4   7\r\n\r\nTarget = 9\r\n\r\nOutput: True\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\n    5\r\n   / \\\r\n  3   6\r\n / \\   \\\r\n2   4   7\r\n\r\nTarget = 28\r\n\r\nOutput: False",
        "level": 1,
        "paid_only": false,
        "question_id": 653,
        "slug": "two-sum-iv-input-is-a-bst",
        "tags": [
            "Tree"
        ],
        "title": "Two Sum IV - Input is a BST",
        "url": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/description/"
    },
    "654": {
        "description": "Given an integer array with no duplicates. A maximum tree building on this array is defined as follow:\r\n\r\nThe root is the maximum number in the array. \r\nThe left subtree is the maximum tree constructed from left part subarray divided by the maximum number.\r\nThe right subtree is the maximum tree constructed from right part subarray divided by the maximum number. \r\n\r\n\r\n\r\n\r\nConstruct the maximum tree by the given array and output the root node of this tree.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [3,2,1,6,0,5]\r\nOutput: return the tree root node representing the following tree:\r\n\r\n      6\r\n    /   \\\r\n   3     5\r\n    \\    / \r\n     2  0   \r\n       \\\r\n        1\r\n\r\n\r\n\r\nNote:\r\n\r\nThe size of the given array will be in the range [1,1000].",
        "level": 2,
        "paid_only": false,
        "question_id": 654,
        "slug": "maximum-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Maximum Binary Tree",
        "url": "https://leetcode.com/problems/maximum-binary-tree/description/"
    },
    "655": {
        "description": "Print a binary tree in an m*n 2D string array following these rules: \r\n\r\n\r\nThe row number m should be equal to the height of the given binary tree.\r\nThe column number n should always be an odd number.\r\nThe root node's value (in string format) should be put in the exactly middle of the first row it can be put. The column and the row where the root node belongs will separate the rest space into two parts (left-bottom part and right-bottom part). You should print the left subtree in the left-bottom part and print the right subtree in the right-bottom part. The left-bottom part and the right-bottom part should have the same size. Even if one subtree is none while the other is not, you don't need to print anything for the none subtree but still need to leave the space as large as that for the other subtree. However, if two subtrees are none, then you don't need to leave space for both of them. \r\nEach unused space should contain an empty string \"\".\r\nPrint the subtrees following the same rules.\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n     1\r\n    /\r\n   2\r\nOutput:\r\n[[\"\", \"1\", \"\"],\r\n [\"2\", \"\", \"\"]]\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n     1\r\n    / \\\r\n   2   3\r\n    \\\r\n     4\r\nOutput:\r\n[[\"\", \"\", \"\", \"1\", \"\", \"\", \"\"],\r\n [\"\", \"2\", \"\", \"\", \"\", \"3\", \"\"],\r\n [\"\", \"\", \"4\", \"\", \"\", \"\", \"\"]]\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput:\r\n      1\r\n     / \\\r\n    2   5\r\n   / \r\n  3 \r\n / \r\n4 \r\nOutput:\r\n\r\n[[\"\",  \"\",  \"\", \"\",  \"\", \"\", \"\", \"1\", \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]\r\n [\"\",  \"\",  \"\", \"2\", \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"5\", \"\", \"\", \"\"]\r\n [\"\",  \"3\", \"\", \"\",  \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]\r\n [\"4\", \"\",  \"\", \"\",  \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]]\r\n\r\n\r\n\r\nNote:\r\nThe height of binary tree is in the range of [1, 10].",
        "level": 2,
        "paid_only": false,
        "question_id": 655,
        "slug": "print-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Print Binary Tree",
        "url": "https://leetcode.com/problems/print-binary-tree/description/"
    },
    "656": {
        "description": "Given an array `A` (index starts at `1`) consisting of N integers: A1, A2,\n..., AN and an integer `B`. The integer `B`denotes that from any place\n(suppose the index is `i`) in the array `A`, you can jump to any one of the\nplace in the array `A` indexed `i+1`, `i+2`, …, `i+B` if this place can be\njumped to. Also, if you step on the index `i`, you have to pay Ai coins. If Ai\nis -1, it means you can't jump to the place indexed `i` in the array.\n\nNow, you start from the place indexed `1` in the array `A`, and your aim is to\nreach the place indexed `N` using the minimum coins. You need to return the\npath of indexes (starting from 1 to N) in the array you should take to get to\nthe place indexed `N` using minimum coins.\n\nIf there are multiple paths with the same cost, return the lexicographically\nsmallest such path.\n\nIf it's not possible to reach the place indexed N then you need to return an\nempty array.\n\nExample 1:\n\n\n\n    Input: [1,2,4,-1,2], 2\rOutput: [1,3,5]\r\n\n\n\nExample 2:\n\n\n\n    Input: [1,2,4,-1,2], 1\rOutput: []\r\n\n\n\nNote:\n\n  1. Path Pa1, Pa2, ..., Pan is lexicographically smaller than Pb1, Pb2, ..., Pbm, if and only if at the first `i` where Pai and Pbi differ, Pai < Pbi; when no such `i` exists, then `n` < `m`.\n  2. A1 >= 0. A2, ..., AN (if exist) will in the range of [-1, 100].\n  3. Length of A is in the range of [1, 1000].\n  4. B is in the range of [1, 100].",
        "level": 3,
        "paid_only": true,
        "question_id": 656,
        "slug": "coin-path",
        "tags": [],
        "title": "Coin Path",
        "url": "https://leetcode.com/problems/coin-path/description/"
    },
    "657": {
        "description": "Initially, there is a Robot at position (0, 0). Given a sequence of its moves, judge if this robot makes a circle, which means it moves back to the original place. \r\n\r\n\r\n\r\nThe move sequence is represented by a string. And each move is represent by a character. The valid robot moves are R (Right), L (Left), U (Up) and D (down). The output should be true or false representing whether the robot makes a circle.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"UD\"\r\nOutput: true\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"LL\"\r\nOutput: false",
        "level": 1,
        "paid_only": false,
        "question_id": 657,
        "slug": "judge-route-circle",
        "tags": [
            "String"
        ],
        "title": "Judge Route Circle",
        "url": "https://leetcode.com/problems/judge-route-circle/description/"
    },
    "658": {
        "description": "Given a sorted array, two integers k and x, find the k closest elements to x in the array.  The result should also be sorted in ascending order.\r\nIf there is a tie,  the smaller elements are always preferred.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,2,3,4,5], k=4, x=3\r\nOutput: [1,2,3,4]\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2,3,4,5], k=4, x=-1\r\nOutput: [1,2,3,4]\r\n\r\n\r\n\r\nNote:\r\n\r\nThe value k is positive and will always be smaller than the length of the sorted array.\r\n Length of the given array is positive and will not exceed 104\r\n Absolute value of elements in the array and x will not exceed 104\r\n\r\n\r\n\r\n\r\n\r\n\r\nUPDATE (2017/9/19):\r\nThe arr parameter had been changed to an array of integers (instead of a list of integers). Please reload the code definition to get the latest changes.",
        "level": 2,
        "paid_only": false,
        "question_id": 658,
        "slug": "find-k-closest-elements",
        "tags": [
            "Binary Search"
        ],
        "title": "Find K Closest Elements",
        "url": "https://leetcode.com/problems/find-k-closest-elements/description/"
    },
    "659": {
        "description": "You are given an integer array sorted in ascending order (may contain duplicates), you need to split them into several subsequences, where each subsequences consist of at least 3 consecutive integers. Return whether you can make such a split.\r\n\r\nExample 1:\r\n\r\nInput: [1,2,3,3,4,5]\r\nOutput: True\r\nExplanation:\r\nYou can split them into two consecutive subsequences : \r\n1, 2, 3\r\n3, 4, 5\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2,3,3,4,4,5,5]\r\nOutput: True\r\nExplanation:\r\nYou can split them into two consecutive subsequences : \r\n1, 2, 3, 4, 5\r\n3, 4, 5\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [1,2,3,4,4,5]\r\nOutput: False\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the input is in range of [1, 10000]",
        "level": 2,
        "paid_only": false,
        "question_id": 659,
        "slug": "split-array-into-consecutive-subsequences",
        "tags": [
            "Heap",
            "Greedy"
        ],
        "title": "Split Array into Consecutive Subsequences",
        "url": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/description/"
    },
    "660": {
        "description": "Start from integer 1, remove any integer that contains 9 such as 9, 19, 29...\n\nSo now, you will have a new integer sequence: 1, 2, 3, 4, 5, 6, 7, 8, 10, 11,\n...\n\nGiven a positive integer `n`, you need to return the n-th integer after\nremoving. Note that 1 will be the first integer.\n\n**Example 1:**\n\n\n    **Input:** 9\r**Output:** 10\r\n\n**Hint** : n will not exceed `9 x 10^8`.",
        "level": 3,
        "paid_only": true,
        "question_id": 660,
        "slug": "remove-9",
        "tags": [],
        "title": "Remove 9",
        "url": "https://leetcode.com/problems/remove-9/description/"
    },
    "661": {
        "description": "Given a 2D integer matrix M representing the gray scale of an image, you need to design a smoother to make the gray scale of each cell becomes the average gray scale (rounding down) of all the 8 surrounding cells and itself.  If a cell has less than 8 surrounding cells, then use as many as you can.\r\n\r\nExample 1:\r\n\r\nInput:\r\n[[1,1,1],\r\n [1,0,1],\r\n [1,1,1]]\r\nOutput:\r\n[[0, 0, 0],\r\n [0, 0, 0],\r\n [0, 0, 0]]\r\nExplanation:\r\nFor the point (0,0), (0,2), (2,0), (2,2): floor(3/4) = floor(0.75) = 0\r\nFor the point (0,1), (1,0), (1,2), (2,1): floor(5/6) = floor(0.83333333) = 0\r\nFor the point (1,1): floor(8/9) = floor(0.88888889) = 0\r\n\r\n\r\n\r\nNote:\r\n\r\nThe value in the given matrix is in the range of [0, 255].\r\nThe length and width of the given matrix are in the range of [1, 150].",
        "level": 1,
        "paid_only": false,
        "question_id": 661,
        "slug": "image-smoother",
        "tags": [
            "Array"
        ],
        "title": "Image Smoother",
        "url": "https://leetcode.com/problems/image-smoother/description/"
    },
    "662": {
        "description": "Given a binary tree, write a function to get the maximum width of the given tree. The width of a tree is the maximum width among all levels. The binary tree has the same structure as a full binary tree, but some nodes are null. \r\n\r\nThe width of one level is defined as the length between the end-nodes (the leftmost and right most non-null nodes in the level, where the null nodes between the end-nodes are also counted into the length calculation.\r\n\r\nExample 1:\r\n\r\nInput: \r\n\r\n           1\r\n         /   \\\r\n        3     2\r\n       / \\     \\  \r\n      5   3     9 \r\n\r\nOutput: 4\r\nExplanation: The maximum width existing in the third level with the length 4 (5,3,null,9).\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\n\r\n          1\r\n         /  \r\n        3    \r\n       / \\       \r\n      5   3     \r\n\r\nOutput: 2\r\nExplanation: The maximum width existing in the third level with the length 2 (5,3).\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \r\n\r\n          1\r\n         / \\\r\n        3   2 \r\n       /        \r\n      5      \r\n\r\nOutput: 2\r\nExplanation: The maximum width existing in the second level with the length 2 (3,2).\r\n\r\n\r\nExample 4:\r\n\r\nInput: \r\n\r\n          1\r\n         / \\\r\n        3   2\r\n       /     \\  \r\n      5       9 \r\n     /         \\\r\n    6           7\r\nOutput: 8\r\nExplanation:The maximum width existing in the fourth level with the length 8 (6,null,null,null,null,null,null,7).\r\n\r\n\r\n\r\n\r\nNote:\r\nAnswer will in the range of 32-bit signed integer.",
        "level": 2,
        "paid_only": false,
        "question_id": 662,
        "slug": "maximum-width-of-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Maximum Width of Binary Tree",
        "url": "https://leetcode.com/problems/maximum-width-of-binary-tree/description/"
    },
    "663": {
        "description": "Given a binary tree with `n` nodes, your task is to check if it's possible to\npartition the tree to two trees which have the equal sum of values after\nremoving exactly one edge on the original tree.\n\nExample 1:\n\n\n\n    Input:     \r    5\r   / \\\r  10 10\r    /  \\\r   2   3\r\rOutput: True\rExplanation: \r    5\r   / \r  10\r      \rSum: 15\r\r   10\r  /  \\\r 2    3\r\rSum: 15\r\n\n\n\nExample 2:\n\n\n\n    Input:     \r    1\r   / \\\r  2  10\r    /  \\\r   2   20\r\rOutput: False\rExplanation: You can't split the tree into two trees with equal sum after removing exactly one edge on the tree.",
        "level": 2,
        "paid_only": true,
        "question_id": 663,
        "slug": "equal-tree-partition",
        "tags": [],
        "title": "Equal Tree Partition",
        "url": "https://leetcode.com/problems/equal-tree-partition/description/"
    },
    "664": {
        "description": "There is a strange printer with the following two special requirements:\r\n\r\n\r\nThe printer can only print a sequence of the same character each time.\r\nAt each turn, the printer can print new characters starting from and ending at any places, and will cover the original existing characters.\r\n\r\n\r\n\r\n\r\n\r\nGiven a string consists of lower English letters only, your job is to count the minimum number of turns the printer needed in order to print it.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"aaabbb\"\r\nOutput: 2\r\nExplanation: Print \"aaa\" first and then print \"bbb\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"aba\"\r\nOutput: 2\r\nExplanation: Print \"aaa\" first and then print \"b\" from the second place of the string, which will cover the existing character 'a'.\r\n\r\n\r\n\r\nHint: Length of the given string will not exceed 100.",
        "level": 3,
        "paid_only": false,
        "question_id": 664,
        "slug": "strange-printer",
        "tags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "title": "Strange Printer",
        "url": "https://leetcode.com/problems/strange-printer/description/"
    },
    "665": {
        "description": "Given an array with n integers, your task is to check if it could become non-decreasing by modifying at most 1 element.\r\n\r\n\r\n\r\nWe define an array is non-decreasing if array[i] <= array[i + 1] holds for every i (1 <= i < n).\r\n\r\n\r\nExample 1:\r\n\r\nInput: [4,2,3]\r\nOutput: True\r\nExplanation: You could modify the first 4 to 1 to get a non-decreasing array.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [4,2,1]\r\nOutput: False\r\nExplanation: You can't get a non-decreasing array by modify at most one element.\r\n\r\n\r\n\r\nNote:\r\nThe n belongs to [1, 10,000].",
        "level": 1,
        "paid_only": false,
        "question_id": 665,
        "slug": "non-decreasing-array",
        "tags": [
            "Array"
        ],
        "title": "Non-decreasing Array",
        "url": "https://leetcode.com/problems/non-decreasing-array/description/"
    },
    "666": {
        "description": "If the depth of a tree is smaller than `5`, then this tree can be represented\nby a list of three-digits integers.\n\nFor each integer in this list:\n\n  1. The hundreds digit represents the depth `D` of this node, `1 <= D <= 4.`\n  2. The tens digit represents the position `P` of this node in the level it belongs to, `1 <= P <= 8`. The position is the same as that in a full binary tree.\n  3. The units digit represents the value `V` of this node, `0 <= V <= 9.`\n\n\n\nGiven a list of `ascending` three-digits integers representing a binary with\nthe depth smaller than 5. You need to return the sum of all paths from the\nroot towards the leaves.\n\nExample 1:\n\n\n\n    Input: [113, 215, 221]\rOutput: 12\rExplanation: \rThe tree that the list represents is:\r    3\r   / \\\r  5   1\r\rThe path sum is (3 + 5) + (3 + 1) = 12.\r\n\n\n\nExample 2:\n\n\n\n    Input: [113, 221]\rOutput: 4\rExplanation: \rThe tree that the list represents is: \r    3\r     \\\r      1\r\rThe path sum is (3 + 1) = 4.",
        "level": 2,
        "paid_only": true,
        "question_id": 666,
        "slug": "path-sum-iv",
        "tags": [],
        "title": "Path Sum IV",
        "url": "https://leetcode.com/problems/path-sum-iv/description/"
    },
    "667": {
        "description": "Given two integers n and k, you need to construct a list which contains n different positive integers ranging from 1 to n and obeys the following requirement: \r\n\r\nSuppose this list is [a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct integers.\r\n\r\n\r\n\r\nIf there are multiple answers, print any of them.\r\n\r\n\r\nExample 1:\r\n\r\nInput: n = 3, k = 1\r\nOutput: [1, 2, 3]\r\nExplanation: The [1, 2, 3] has three different positive integers ranging from 1 to 3, and the [1, 1] has exactly 1 distinct integer: 1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: n = 3, k = 2\r\nOutput: [1, 3, 2]\r\nExplanation: The [1, 3, 2] has three different positive integers ranging from 1 to 3, and the [2, 1] has exactly 2 distinct integers: 1 and 2.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe n and k are in the range 1 <= k < n <= 104.",
        "level": 2,
        "paid_only": false,
        "question_id": 667,
        "slug": "beautiful-arrangement-ii",
        "tags": [
            "Array"
        ],
        "title": "Beautiful Arrangement II",
        "url": "https://leetcode.com/problems/beautiful-arrangement-ii/description/"
    },
    "668": {
        "description": "Nearly every one have used the Multiplication Table. But could you find out the k-th smallest number quickly from the multiplication table?\r\n\r\n\r\n\r\nGiven the height m and the length n of a m * n Multiplication Table, and a positive integer k, you need to return the k-th smallest number in this table.\r\n\r\n\r\nExample 1:\r\n\r\nInput: m = 3, n = 3, k = 5\r\nOutput: \r\nExplanation: \r\nThe Multiplication Table:\r\n1\t2\t3\r\n2\t4\t6\r\n3\t6\t9\r\n\r\nThe 5-th smallest number is 3 (1, 2, 2, 3, 3).\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: m = 2, n = 3, k = 6\r\nOutput: \r\nExplanation: \r\nThe Multiplication Table:\r\n1\t2\t3\r\n2\t4\t6\r\n\r\nThe 6-th smallest number is 6 (1, 2, 2, 3, 4, 6).\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe m and n will be in the range [1, 30000].\r\nThe k will be in the range [1, m * n]",
        "level": 3,
        "paid_only": false,
        "question_id": 668,
        "slug": "kth-smallest-number-in-multiplication-table",
        "tags": [
            "Binary Search"
        ],
        "title": "Kth Smallest Number in Multiplication Table",
        "url": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/description/"
    },
    "669": {
        "description": "Given a binary search tree and the lowest and highest boundaries as L and R, trim the tree so that all its elements lies in [L, R] (R >= L). You might need to change the root of the tree, so the result should return the new root of the trimmed binary search tree.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\n    1\r\n   / \\\r\n  0   2\r\n\r\n  L = 1\r\n  R = 2\r\n\r\nOutput: \r\n    1\r\n      \\\r\n       2\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\n    3\r\n   / \\\r\n  0   4\r\n   \\\r\n    2\r\n   /\r\n  1\r\n\r\n  L = 1\r\n  R = 3\r\n\r\nOutput: \r\n      3\r\n     / \r\n   2   \r\n  /\r\n 1",
        "level": 1,
        "paid_only": false,
        "question_id": 669,
        "slug": "trim-a-binary-search-tree",
        "tags": [
            "Tree"
        ],
        "title": "Trim a Binary Search Tree",
        "url": "https://leetcode.com/problems/trim-a-binary-search-tree/description/"
    },
    "670": {
        "description": "Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.\r\n\r\n\r\nExample 1:\r\n\r\nInput: 2736\r\nOutput: 7236\r\nExplanation: Swap the number 2 and the number 7.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 9973\r\nOutput: 9973\r\nExplanation: No swap.\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe given number is in the range [0, 108]",
        "level": 2,
        "paid_only": false,
        "question_id": 670,
        "slug": "maximum-swap",
        "tags": [
            "Array",
            "Math"
        ],
        "title": "Maximum Swap",
        "url": "https://leetcode.com/problems/maximum-swap/description/"
    },
    "671": {
        "description": "Given a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly two or zero sub-node. If the node has two sub-nodes, then this node's value is the smaller value among its two sub-nodes. \r\n\r\n\r\n\r\nGiven such a binary tree, you need to output the second minimum value in the set made of all the nodes' value in the whole tree. \r\n\r\n\r\n\r\nIf no such second minimum value exists, output -1 instead.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\n    2\r\n   / \\\r\n  2   5\r\n     / \\\r\n    5   7\r\n\r\nOutput: 5\r\nExplanation: The smallest value is 2, the second smallest value is 5.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\n    2\r\n   / \\\r\n  2   2\r\n\r\nOutput: -1\r\nExplanation: The smallest value is 2, but there isn't any second smallest value.",
        "level": 1,
        "paid_only": false,
        "question_id": 671,
        "slug": "second-minimum-node-in-a-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Second Minimum Node In a Binary Tree",
        "url": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/description/"
    },
    "672": {
        "description": "There is a room with n lights which are turned on initially and 4 buttons on the wall. After performing exactly m unknown operations towards buttons, you need to return how many different kinds of status of the n lights could be.\r\n\r\n\r\n\r\nSuppose n lights are labeled as number [1, 2, 3 ..., n], function of these 4 buttons are given below:\r\n\r\n\r\nFlip all the lights.\r\nFlip lights with even numbers.\r\nFlip lights with odd numbers.\r\nFlip lights with (3k + 1) numbers, k = 0, 1, 2, ...\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: n = 1, m = 1.\r\nOutput: 2\r\nExplanation: Status can be: [on], [off]\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: n = 2, m = 1.\r\nOutput: 3\r\nExplanation: Status can be: [on, off], [off, on], [off, off]\r\n\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: n = 3, m = 1.\r\nOutput: 4\r\nExplanation: Status can be: [off, on, off], [on, off, on], [off, off, off], [off, on, on].\r\n\r\n\r\n\r\nNote:\r\nn and m both fit in range [0, 1000].",
        "level": 2,
        "paid_only": false,
        "question_id": 672,
        "slug": "bulb-switcher-ii",
        "tags": [
            "Math"
        ],
        "title": "Bulb Switcher II",
        "url": "https://leetcode.com/problems/bulb-switcher-ii/description/"
    },
    "673": {
        "description": "Given an unsorted array of integers, find the number of longest increasing subsequence.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,3,5,4,7]\r\nOutput: 2\r\nExplanation: The two longest increasing subsequence are [1, 3, 4, 7] and [1, 3, 5, 7].\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [2,2,2,2,2]\r\nOutput: 5\r\nExplanation: The length of longest continuous increasing subsequence is 1, and there are 5 subsequences' length is 1, so output 5.\r\n\r\n\r\n\r\nNote:\r\nLength of the given array will be not exceed 2000 and the answer is guaranteed to be fit in 32-bit signed int.",
        "level": 2,
        "paid_only": false,
        "question_id": 673,
        "slug": "number-of-longest-increasing-subsequence",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Number of Longest Increasing Subsequence",
        "url": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/description/"
    },
    "674": {
        "description": "Given an unsorted array of integers, find the length of longest continuous increasing subsequence.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,3,5,4,7]\r\nOutput: 3\r\nExplanation: The longest continuous increasing subsequence is [1,3,5], its length is 3. \r\nEven though [1,3,5,7] is also an increasing subsequence, it's not a continuous one where 5 and 7 are separated by 4. \r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [2,2,2,2,2]\r\nOutput: 1\r\nExplanation: The longest continuous increasing subsequence is [2], its length is 1. \r\n\r\n\r\n\r\nNote:\r\nLength of the array will not exceed 10,000.",
        "level": 1,
        "paid_only": false,
        "question_id": 674,
        "slug": "longest-continuous-increasing-subsequence",
        "tags": [
            "Array"
        ],
        "title": "Longest Continuous Increasing Subsequence",
        "url": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/description/"
    },
    "675": {
        "description": "You are asked to cut off trees in a forest for a golf event. The forest is represented as a non-negative 2D map, in this map:\r\n\r\n0 represents the obstacle can't be reached.\r\n1 represents the ground can be walked through.\r\nThe place with number bigger than 1 represents a tree can be walked through, and this positive number represents the tree's height.\r\n\r\n\r\n\r\n\r\nYou are asked to cut off all the trees in this forest in the order of tree's height - always cut off the tree with lowest height first. And after cutting, the original place has the tree will become a grass (value 1). \r\n\r\n\r\n\r\nYou will start from the point (0, 0) and you should output the minimum steps you need to walk to cut off all the trees. If you can't cut off all the trees, output -1 in that situation.\r\n\r\n\r\n\r\nYou are guaranteed that no two trees have the same height and there is at least one tree needs to be cut off.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\n[\r\n [1,2,3],\r\n [0,0,4],\r\n [7,6,5]\r\n]\r\nOutput: 6\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\n[\r\n [1,2,3],\r\n [0,0,0],\r\n [7,6,5]\r\n]\r\nOutput: -1\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \r\n[\r\n [2,3,4],\r\n [0,0,5],\r\n [8,7,6]\r\n]\r\nOutput: 6\r\nExplanation: You started from the point (0,0) and you can cut off the tree in (0,0) directly without walking.\r\n\r\n\r\n\r\n\r\nHint: size of the given matrix will not exceed 50x50.",
        "level": 3,
        "paid_only": false,
        "question_id": 675,
        "slug": "cut-off-trees-for-golf-event",
        "tags": [
            "Breadth-first Search"
        ],
        "title": "Cut Off Trees for Golf Event",
        "url": "https://leetcode.com/problems/cut-off-trees-for-golf-event/description/"
    },
    "676": {
        "description": "Implement a magic directory with buildDict, and search methods.\r\n\r\n\r\n\r\nFor the method buildDict, you'll be given a list of non-repetitive words to build a dictionary.\r\n\r\n\r\n\r\nFor the method search, you'll be given a word, and judge whether if you modify exactly one character into another character in this word, the modified word is in the dictionary you just built.\r\n\r\n\r\nExample 1:\r\n\r\nInput: buildDict([\"hello\", \"leetcode\"]), Output: Null\r\nInput: search(\"hello\"), Output: False\r\nInput: search(\"hhllo\"), Output: True\r\nInput: search(\"hell\"), Output: False\r\nInput: search(\"leetcoded\"), Output: False\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume that all the inputs are consist of lowercase letters a-z.\r\nFor contest purpose, the test data is rather small by now. You could think about highly efficient algorithm after the contest.\r\nPlease remember to RESET your class variables declared in class MagicDictionary, as static/class variables are persisted across multiple test cases. Please see here for more details.",
        "level": 2,
        "paid_only": false,
        "question_id": 676,
        "slug": "implement-magic-dictionary",
        "tags": [
            "Hash Table",
            "Trie"
        ],
        "title": "Implement Magic Dictionary",
        "url": "https://leetcode.com/problems/implement-magic-dictionary/description/"
    },
    "677": {
        "description": "Implement a MapSum class with insert, and sum methods.\r\n\r\n\r\n\r\nFor the method insert, you'll be given a pair of (string, integer). The string represents the key and the integer represents the value. If the key already existed, then the original key-value pair will be overridden to the new one.\r\n\r\n\r\n\r\nFor the method sum, you'll be given a string representing the prefix, and you need to return the sum of all the pairs' value whose key starts with the prefix.\r\n\r\n\r\nExample 1:\r\n\r\nInput: insert(\"apple\", 3), Output: Null\r\nInput: sum(\"ap\"), Output: 3\r\nInput: insert(\"app\", 2), Output: Null\r\nInput: sum(\"ap\"), Output: 5",
        "level": 2,
        "paid_only": false,
        "question_id": 677,
        "slug": "map-sum-pairs",
        "tags": [
            "Trie"
        ],
        "title": "Map Sum Pairs",
        "url": "https://leetcode.com/problems/map-sum-pairs/description/"
    },
    "678": {
        "description": "Given a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:\r\n\r\nAny left parenthesis '(' must have a corresponding right parenthesis ')'.\r\nAny right parenthesis ')' must have a corresponding left parenthesis '('.\r\nLeft parenthesis '(' must go before the corresponding right parenthesis ')'.\r\n'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string.\r\nAn empty string is also valid.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"()\"\r\nOutput: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"(*)\"\r\nOutput: True\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"(*))\"\r\nOutput: True\r\n\r\n\r\n\r\nNote:\r\n\r\nThe string size will be in the range [1, 100].",
        "level": 2,
        "paid_only": false,
        "question_id": 678,
        "slug": "valid-parenthesis-string",
        "tags": [
            "String"
        ],
        "title": "Valid Parenthesis String",
        "url": "https://leetcode.com/problems/valid-parenthesis-string/description/"
    },
    "679": {
        "description": "You have 4 cards each containing a number from 1 to 9.  You need to judge whether they could operated through *, /, +, -, (, ) to get the value of 24.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [4, 1, 8, 7]\r\nOutput: True\r\nExplanation: (8-4) * (7-1) = 24\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1, 2, 1, 2]\r\nOutput: False\r\n\r\n\r\n\r\nNote:\r\n\r\nThe division operator / represents real division, not integer division.  For example, 4 / (1 - 2/3) = 12.\r\nEvery operation done is between two numbers.  In particular, we cannot use - as a unary operator.  For example, with [1, 1, 1, 1] as input, the expression -1 - 1 - 1 - 1 is not allowed.\r\nYou cannot concatenate numbers together.  For example, if the input is [1, 2, 1, 2], we cannot write this as 12 + 12.",
        "level": 3,
        "paid_only": false,
        "question_id": 679,
        "slug": "24-game",
        "tags": [
            "Depth-first Search"
        ],
        "title": "24 Game",
        "url": "https://leetcode.com/problems/24-game/description/"
    },
    "680": {
        "description": "Given a non-empty string s, you may delete at most one character.  Judge whether you can make it a palindrome.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"aba\"\r\nOutput: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"abca\"\r\nOutput: True\r\nExplanation: You could delete the character 'c'.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe string will only contain lowercase characters a-z.\r\nThe maximum length of the string is 50000.",
        "level": 1,
        "paid_only": false,
        "question_id": 680,
        "slug": "valid-palindrome-ii",
        "tags": [
            "String"
        ],
        "title": "Valid Palindrome II",
        "url": "https://leetcode.com/problems/valid-palindrome-ii/description/"
    },
    "681": {
        "description": "Given a time represented in the format \"HH:MM\", form the next closest time by reusing the current digits. There is no limit on how many times a digit can be reused.\r\n\r\nYou may assume the given input string is always valid. For example, \"01:34\", \"12:09\" are all valid. \"1:34\", \"12:9\" are all invalid.\r\n\r\nExample 1:\r\n\r\nInput: \"19:34\"\r\nOutput: \"19:39\"\r\nExplanation: The next closest time choosing from digits 1, 9, 3, 4, is 19:39, which occurs 5 minutes later.  It is not 19:33, because this occurs 23 hours and 59 minutes later.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"23:59\"\r\nOutput: \"22:22\"\r\nExplanation: The next closest time choosing from digits 2, 3, 5, 9, is 22:22. It may be assumed that the returned time is next day's time since it is smaller than the input time numerically.",
        "level": 2,
        "paid_only": true,
        "question_id": 681,
        "slug": "next-closest-time",
        "tags": [
            "String"
        ],
        "title": "Next Closest Time",
        "url": "https://leetcode.com/problems/next-closest-time/description/"
    },
    "682": {
        "description": "You're now a baseball game point recorder.\r\n\r\n\r\n\r\nGiven a list of strings, each string can be one of the 4 following types:\r\n\r\nInteger (one round's score): Directly represents the number of points you get in this round.\r\n\"+\" (one round's score): Represents that the points you get in this round are the sum of the last two valid round's points.\r\n\"D\" (one round's score): Represents that the points you get in this round are the doubled data of the last valid round's points.\r\n\"C\" (an operation, which isn't a round's score): Represents the last valid round's points you get were invalid and should be removed.\r\n\r\n\r\n\r\n\r\nEach round's operation is permanent and could have an impact on the round before and the round after.\r\n\r\n\r\n\r\nYou need to return the sum of the points you could get in all the rounds.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [\"5\",\"2\",\"C\",\"D\",\"+\"]\r\nOutput: 30\r\nExplanation: \r\nRound 1: You could get 5 points. The sum is: 5.\r\nRound 2: You could get 2 points. The sum is: 7.\r\nOperation 1: The round 2's data was invalid. The sum is: 5.  \r\nRound 3: You could get 10 points (the round 2's data has been removed). The sum is: 15.\r\nRound 4: You could get 5 + 10 = 15 points. The sum is: 30.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [\"5\",\"-2\",\"4\",\"C\",\"D\",\"9\",\"+\",\"+\"]\r\nOutput: 27\r\nExplanation: \r\nRound 1: You could get 5 points. The sum is: 5.\r\nRound 2: You could get -2 points. The sum is: 3.\r\nRound 3: You could get 4 points. The sum is: 7.\r\nOperation 1: The round 3's data is invalid. The sum is: 3.  \r\nRound 4: You could get -4 points (the round 3's data has been removed). The sum is: -1.\r\nRound 5: You could get 9 points. The sum is: 8.\r\nRound 6: You could get -4 + 9 = 5 points. The sum is 13.\r\nRound 7: You could get 9 + 5 = 14 points. The sum is 27.\r\n\r\n\r\n\r\nNote:\r\nThe size of the input list will be between 1 and 1000.\r\nEvery integer represented in the list will be between -30000 and 30000.",
        "level": 1,
        "paid_only": false,
        "question_id": 682,
        "slug": "baseball-game",
        "tags": [
            "Stack"
        ],
        "title": "Baseball Game",
        "url": "https://leetcode.com/problems/baseball-game/description/"
    },
    "683": {
        "description": "There is a garden with N slots. In each slot, there is a flower. The N flowers will bloom one by one in N days. In each day, there will be exactly one flower blooming and it will be in the status of blooming since then.\r\n\r\n\r\n\r\nGiven an array flowers consists of number from 1 to N. Each number in the array represents the place where the flower will open in that day.\r\n\r\n\r\n\r\nFor example, flowers[i] = x means that the unique flower that blooms at day i will be at position x, where i and x will be in the range from 1 to N.\r\n\r\n\r\n\r\nAlso given an integer k, you need to output in which day there exists two flowers in the status of blooming, and also the number of flowers between them is k and these flowers are not blooming.\r\n\r\n\r\n\r\nIf there isn't such day, output -1.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\nflowers: [1,3,2]\r\nk: 1\r\nOutput: 2\r\nExplanation: In the second day, the first and the third flower have become blooming.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nflowers: [1,2,3]\r\nk: 1\r\nOutput: -1\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe given array will be in the range [1, 20000].",
        "level": 3,
        "paid_only": true,
        "question_id": 683,
        "slug": "k-empty-slots",
        "tags": [
            "Array",
            "Binary Search Tree"
        ],
        "title": "K Empty Slots",
        "url": "https://leetcode.com/problems/k-empty-slots/description/"
    },
    "684": {
        "description": "In this problem, a tree is an undirected graph that is connected and has no cycles.\r\n\r\nThe given input is a graph that started as a tree with N nodes (with distinct values 1, 2, ..., N), with one additional edge added.  The added edge has two different vertices chosen from 1 to N, and was not an edge that already existed.\r\n\r\nThe resulting graph is given as a 2D-array of edges.  Each element of edges is a pair [u, v] with u < v, that represents an undirected edge connecting nodes u and v.\r\n\r\nReturn an edge that can be removed so that the resulting graph is a tree of N nodes.  If there are multiple answers, return the answer that occurs last in the given 2D-array.  The answer edge [u, v] should be in the same format, with u < v.\r\nExample 1:\r\n\r\nInput: [[1,2], [1,3], [2,3]]\r\nOutput: [2,3]\r\nExplanation: The given undirected graph will be like this:\r\n  1\r\n / \\\r\n2 - 3\r\n\r\n\r\nExample 2:\r\n\r\nInput: [[1,2], [2,3], [3,4], [1,4], [1,5]]\r\nOutput: [1,4]\r\nExplanation: The given undirected graph will be like this:\r\n5 - 1 - 2\r\n    |   |\r\n    4 - 3\r\n\r\n\r\nNote:\r\nThe size of the input 2D-array will be between 3 and 1000.\r\nEvery integer represented in the 2D-array will be between 1 and N, where N is the size of the input array.\r\n\r\n\r\n\r\n\r\n\r\nUpdate (2017-09-26):\r\nWe have overhauled the problem description + test cases and specified clearly the graph is an undirected graph. For the directed graph follow up please see Redundant Connection II). We apologize for any inconvenience caused.",
        "level": 2,
        "paid_only": false,
        "question_id": 684,
        "slug": "redundant-connection",
        "tags": [
            "Tree",
            "Union Find",
            "Graph"
        ],
        "title": "Redundant Connection",
        "url": "https://leetcode.com/problems/redundant-connection/description/"
    },
    "685": {
        "description": "In this problem, a rooted tree is a directed graph such that, there is exactly one node (the root) for which all other nodes are descendants of this node, plus every node has exactly one parent, except for the root node which has no parents.\r\n\r\nThe given input is a directed graph that started as a rooted tree with N nodes (with distinct values 1, 2, ..., N), with one additional directed edge added.  The added edge has two different vertices chosen from 1 to N, and was not an edge that already existed.\r\n\r\nThe resulting graph is given as a 2D-array of edges.  Each element of edges is a pair [u, v] that represents a directed edge connecting nodes u and v, where u is a parent of child v.\r\n\r\nReturn an edge that can be removed so that the resulting graph is a rooted tree of N nodes.  If there are multiple answers, return the answer that occurs last in the given 2D-array.\r\nExample 1:\r\n\r\nInput: [[1,2], [1,3], [2,3]]\r\nOutput: [2,3]\r\nExplanation: The given directed graph will be like this:\r\n  1\r\n / \\\r\nv   v\r\n2-->3\r\n\r\n\r\nExample 2:\r\n\r\nInput: [[1,2], [2,3], [3,4], [4,1], [1,5]]\r\nOutput: [4,1]\r\nExplanation: The given directed graph will be like this:\r\n5 <- 1 -> 2\r\n     ^    |\r\n     |    v\r\n     4 <- 3\r\n\r\n\r\nNote:\r\nThe size of the input 2D-array will be between 3 and 1000.\r\nEvery integer represented in the 2D-array will be between 1 and N, where N is the size of the input array.",
        "level": 3,
        "paid_only": false,
        "question_id": 685,
        "slug": "redundant-connection-ii",
        "tags": [
            "Tree",
            "Depth-first Search",
            "Union Find",
            "Graph"
        ],
        "title": "Redundant Connection II",
        "url": "https://leetcode.com/problems/redundant-connection-ii/description/"
    },
    "686": {
        "description": "Given two strings A and B, find the minimum number of times A has to be repeated such that B is a substring of it. If no such solution, return -1.\r\n\r\n\r\nFor example, with A = \"abcd\" and B = \"cdabcdab\". \r\n\r\n\r\nReturn 3, because by repeating A three times (“abcdabcdabcd”), B is a substring of it; and B is not a substring of A repeated two times (\"abcdabcd\").\r\n\r\n\r\nNote:\r\nThe length of A and B will be between 1 and 10000.",
        "level": 1,
        "paid_only": false,
        "question_id": 686,
        "slug": "repeated-string-match",
        "tags": [
            "String"
        ],
        "title": "Repeated String Match",
        "url": "https://leetcode.com/problems/repeated-string-match/description/"
    },
    "687": {
        "description": "Given a binary tree, find the length of the longest path where each node in the path has the same value. This path may or may not pass through the root.\r\n\r\nNote: The length of path between two nodes is represented by the number of edges between them.\r\n\r\n\r\nExample 1:\r\n\r\n\r\n\r\n\r\nInput:\r\n\r\n              5\r\n             / \\\r\n            4   5\r\n           / \\   \\\r\n          1   1   5\r\n\r\n\r\n\r\n\r\nOutput:\r\n\r\n2\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\n\r\n\r\nInput:\r\n\r\n              1\r\n             / \\\r\n            4   5\r\n           / \\   \\\r\n          4   4   5\r\n\r\n\r\n\r\n\r\nOutput:\r\n\r\n2\r\n\r\n\r\n\r\nNote:\r\nThe given binary tree has not more than 10000 nodes.  The height of the tree is not more than 1000.",
        "level": 1,
        "paid_only": false,
        "question_id": 687,
        "slug": "longest-univalue-path",
        "tags": [
            "Tree",
            "Recursion"
        ],
        "title": "Longest Univalue Path",
        "url": "https://leetcode.com/problems/longest-univalue-path/description/"
    },
    "688": {
        "description": "On an NxN chessboard, a knight starts at the r-th row and c-th column and attempts to make exactly K moves.  The rows and columns are 0 indexed, so the top-left square is (0, 0), and the bottom-right square is (N-1, N-1).\r\n\r\n\r\n\r\nA chess knight has 8 possible moves it can make, as illustrated below.  Each move is two squares in a cardinal direction, then one square in an orthogonal direction.\r\n\r\n\r\n\r\n\r\n\r\nEach time the knight is to move, it chooses one of eight possible moves uniformly at random (even if the piece would go off the chessboard) and moves there.\r\n\r\n\r\n\r\nThe knight continues moving until it has made exactly K moves or has moved off the chessboard.  Return the probability that the knight remains on the board after it has stopped moving.\r\n\r\n\r\nExample:\r\n\r\nInput: 3, 2, 0, 0\r\nOutput: 0.0625\r\nExplanation: There are two moves (to (1,2), (2,1)) that will keep the knight on the board.\r\nFrom each of those positions, there are also two moves that will keep the knight on the board.\r\nThe total probability the knight stays on the board is 0.0625.\r\n\r\n\r\n\r\nNote:\r\nN will be between 1 and 25.\r\nK will be between 0 and 100.\r\nThe knight always initially starts on the board.",
        "level": 2,
        "paid_only": false,
        "question_id": 688,
        "slug": "knight-probability-in-chessboard",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Knight Probability in Chessboard",
        "url": "https://leetcode.com/problems/knight-probability-in-chessboard/description/"
    },
    "689": {
        "description": "In a given array nums of positive integers, find three non-overlapping subarrays with maximum sum.\r\n\r\n\r\nEach subarray will be of size k, and we want to maximize the sum of all 3*k entries.\r\n\r\n\r\nReturn the result as a list of indices representing the starting position of each interval (0-indexed).  If there are multiple answers, return the lexicographically smallest one.\r\n\r\nExample:\r\n\r\nInput: [1,2,1,2,6,7,5,1], 2\r\nOutput: [0, 3, 5]\r\nExplanation: Subarrays [1, 2], [2, 6], [7, 5] correspond to the starting indices [0, 3, 5].\r\nWe could have also taken [2, 1], but an answer of [1, 3, 5] would be lexicographically larger.\r\n\r\n\r\n\r\nNote:\r\nnums.length will be between 1 and 20000.\r\nnums[i] will be between 1 and 65535.\r\nk will be between 1 and floor(nums.length / 3).",
        "level": 3,
        "paid_only": false,
        "question_id": 689,
        "slug": "maximum-sum-of-3-non-overlapping-subarrays",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
        "url": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/description/"
    },
    "690": {
        "description": "You are given a data structure of employee information, which includes the employee's unique id, his importance value and his direct subordinates' id. \r\n\r\nFor example, employee 1 is the leader of employee 2, and employee 2 is the leader of employee 3. They have importance value 15, 10 and 5, respectively. Then employee 1 has a data structure like [1, 15, [2]], and employee 2 has [2, 10, [3]], and employee 3 has [3, 5, []]. Note that although employee 3 is also a subordinate of employee 1, the relationship is not direct.\r\n\r\nNow given the employee information of a company, and an employee id, you need to return the total importance value of this employee and all his subordinates.\r\n\r\nExample 1:\r\n\r\nInput: [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\r\nOutput: 11\r\nExplanation:\r\nEmployee 1 has importance value 5, and he has two direct subordinates: employee 2 and employee 3. They both have importance value 3. So the total importance value of employee 1 is 5 + 3 + 3 = 11.\r\n\r\n\r\n\r\nNote:\r\n\r\nOne employee has at most one direct leader and may have several subordinates.\r\nThe maximum number of employees won't exceed 2000.",
        "level": 1,
        "paid_only": false,
        "question_id": 690,
        "slug": "employee-importance",
        "tags": [
            "Hash Table",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Employee Importance",
        "url": "https://leetcode.com/problems/employee-importance/description/"
    },
    "691": {
        "description": "We are given N different types of stickers.  Each sticker has a lowercase English word on it.\r\n\r\nYou would like to spell out the given target string by cutting individual letters from your collection of stickers and rearranging them.\r\n\r\nYou can use each sticker more than once if you want, and you have infinite quantities of each sticker.\r\n\r\nWhat is the minimum number of stickers that you need to spell out the target?  If the task is impossible, return -1.\r\n\r\n\r\nExample 1:\r\nInput:\r\n[\"with\", \"example\", \"science\"], \"thehat\"\r\n\r\n\r\nOutput:\r\n3\r\n\r\n\r\nExplanation:\r\nWe can use 2 \"with\" stickers, and 1 \"example\" sticker.\r\nAfter cutting and rearrange the letters of those stickers, we can form the target \"thehat\".\r\nAlso, this is the minimum number of stickers necessary to form the target string.\r\n\r\n\r\nExample 2:\r\nInput:\r\n[\"notice\", \"possible\"], \"basicbasic\"\r\n\r\n\r\nOutput:\r\n-1\r\n\r\n\r\nExplanation:\r\nWe can't form the target \"basicbasic\" from cutting letters from the given stickers.\r\n\r\n\r\nNote:\r\nstickers has length in the range [1, 50].\r\nstickers consists of lowercase English words (without apostrophes).\r\ntarget has length in the range [1, 15], and consists of lowercase English letters.\r\nIn all test cases, all words were chosen randomly from the 1000 most common US English words, and the target was chosen as a concatenation of two random words.\r\nThe time limit may be more challenging than usual.  It is expected that a 50 sticker test case can be solved within 35ms on average.",
        "level": 3,
        "paid_only": false,
        "question_id": 691,
        "slug": "stickers-to-spell-word",
        "tags": [
            "Dynamic Programming",
            "Backtracking"
        ],
        "title": "Stickers to Spell Word",
        "url": "https://leetcode.com/problems/stickers-to-spell-word/description/"
    },
    "692": {
        "description": "Given a non-empty list of words, return the k most frequent elements.\r\nYour answer should be sorted by frequency from highest to lowest. If two words have the same frequency, then the word with the lower alphabetical order comes first.\r\n\r\nExample 1:\r\n\r\nInput: [\"i\", \"love\", \"leetcode\", \"i\", \"love\", \"coding\"], k = 2\r\nOutput: [\"i\", \"love\"]\r\nExplanation: \"i\" and \"love\" are the two most frequent words.\r\n    Note that \"i\" comes before \"love\" due to a lower alphabetical order.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [\"the\", \"day\", \"is\", \"sunny\", \"the\", \"the\", \"the\", \"sunny\", \"is\", \"is\"], k = 4\r\nOutput: [\"the\", \"is\", \"sunny\", \"day\"]\r\nExplanation: \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words,\r\n    with the number of occurrence being 4, 3, 2 and 1 respectively.\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume k is always valid, 1 ≤ k ≤ number of unique elements.\r\nInput words contain only lowercase letters.\r\n\r\n\r\n\r\nFollow up:\r\n\r\nTry to solve it in O(n log k) time and O(n) extra space.",
        "level": 2,
        "paid_only": false,
        "question_id": 692,
        "slug": "top-k-frequent-words",
        "tags": [
            "Hash Table",
            "Heap",
            "Trie"
        ],
        "title": "Top K Frequent Words",
        "url": "https://leetcode.com/problems/top-k-frequent-words/description/"
    },
    "693": {
        "description": "Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.\r\n\r\nExample 1:\r\n\r\nInput: 5\r\nOutput: True\r\nExplanation:\r\nThe binary representation of 5 is: 101\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 7\r\nOutput: False\r\nExplanation:\r\nThe binary representation of 7 is: 111.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: 11\r\nOutput: False\r\nExplanation:\r\nThe binary representation of 11 is: 1011.\r\n\r\n\r\n\r\nExample 4:\r\n\r\nInput: 10\r\nOutput: True\r\nExplanation:\r\nThe binary representation of 10 is: 1010.",
        "level": 1,
        "paid_only": false,
        "question_id": 693,
        "slug": "binary-number-with-alternating-bits",
        "tags": [
            "Bit Manipulation"
        ],
        "title": "Binary Number with Alternating Bits",
        "url": "https://leetcode.com/problems/binary-number-with-alternating-bits/description/"
    },
    "694": {
        "description": "Given a non-empty 2D array `grid` of 0's and 1's, an island is a group of\n`1`'s (representing land) connected 4-directionally (horizontal or vertical.)\nYou may assume all four edges of the grid are surrounded by water.\n\nCount the number of distinct islands. An island is considered to be the same\nas another if and only if one island can be translated (and not rotated or\nreflected) to equal the other.\n\nExample 1:\n\n\n\n    11000\r11000\r00011\r00011\r\n\nGiven the above grid map, return `1`.\n\n\n\nExample 2:\n\n\n\n    11011\r10000\r00001\r11011\n\nGiven the above grid map, return `3`.\n\nNotice that:\n\n\n\n    11\r1\r\n\nand\n\n\n\n     1\r11\r\n\nare considered different island shapes, because we do not consider reflection\n/ rotation.\n\n\n\nNote: The length of each dimension in the given `grid` does not exceed 50.",
        "level": 2,
        "paid_only": true,
        "question_id": 694,
        "slug": "number-of-distinct-islands",
        "tags": [],
        "title": "Number of Distinct Islands",
        "url": "https://leetcode.com/problems/number-of-distinct-islands/description/"
    },
    "695": {
        "description": "Given a non-empty 2D array grid of 0's and 1's, an island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.)  You may assume all four edges of the grid are surrounded by water.\r\n\r\nFind the maximum area of an island in the given 2D array.\r\n(If there is no island, the maximum area is 0.)\r\n\r\nExample 1:\r\n\r\n[[0,0,1,0,0,0,0,1,0,0,0,0,0],\r\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\r\n [0,1,1,0,1,0,0,0,0,0,0,0,0],\r\n [0,1,0,0,1,1,0,0,1,0,1,0,0],\r\n [0,1,0,0,1,1,0,0,1,1,1,0,0],\r\n [0,0,0,0,0,0,0,0,0,0,1,0,0],\r\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\r\n [0,0,0,0,0,0,0,1,1,0,0,0,0]]\r\n\r\nGiven the above grid, return 6.\r\n\r\nNote the answer is not 11, because the island must be connected 4-directionally.\r\n\r\n\r\nExample 2:\r\n[[0,0,0,0,0,0,0,0]]\r\nGiven the above grid, return 0.\r\n\r\n\r\nNote:\r\nThe length of each dimension in the given grid does not exceed 50.",
        "level": 1,
        "paid_only": false,
        "question_id": 695,
        "slug": "max-area-of-island",
        "tags": [
            "Array",
            "Depth-first Search"
        ],
        "title": "Max Area of Island",
        "url": "https://leetcode.com/problems/max-area-of-island/description/"
    },
    "696": {
        "description": "Give a string s, count the number of non-empty (contiguous) substrings that have the same number of 0's and 1's, and all the 0's and all the 1's in these substrings are grouped consecutively. \r\n\r\nSubstrings that occur multiple times are counted the number of times they occur.\r\n\r\nExample 1:\r\n\r\nInput: \"00110011\"\r\nOutput: 6\r\nExplanation: There are 6 substrings that have equal number of consecutive 1's and 0's: \"0011\", \"01\", \"1100\", \"10\", \"0011\", and \"01\".\r\nNotice that some of these substrings repeat and are counted the number of times they occur.\r\nAlso, \"00110011\" is not a valid substring because all the 0's (and 1's) are not grouped together.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"10101\"\r\nOutput: 4\r\nExplanation: There are 4 substrings: \"10\", \"01\", \"10\", \"01\" that have equal number of consecutive 1's and 0's.\r\n\r\n\r\n\r\nNote:\r\ns.length will be between 1 and 50,000.\r\ns will only consist of \"0\" or \"1\" characters.",
        "level": 1,
        "paid_only": false,
        "question_id": 696,
        "slug": "count-binary-substrings",
        "tags": [
            "String"
        ],
        "title": "Count Binary Substrings",
        "url": "https://leetcode.com/problems/count-binary-substrings/description/"
    },
    "697": {
        "description": "Given a non-empty array of non-negative integers nums, the degree of this array is defined as the maximum frequency of any one of its elements.\r\nYour task is to find the smallest possible length of a (contiguous) subarray of nums, that has the same degree as nums.\r\n\r\nExample 1:\r\n\r\nInput: [1, 2, 2, 3, 1]\r\nOutput: 2\r\nExplanation: \r\nThe input array has a degree of 2 because both elements 1 and 2 appear twice.\r\nOf the subarrays that have the same degree:\r\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\r\nThe shortest length is 2. So return 2.\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2,2,3,1,4,2]\r\nOutput: 6\r\n\r\n\r\n\r\nNote:\r\nnums.length will be between 1 and 50,000.\r\nnums[i] will be an integer between 0 and 49,999.",
        "level": 1,
        "paid_only": false,
        "question_id": 697,
        "slug": "degree-of-an-array",
        "tags": [
            "Array"
        ],
        "title": "Degree of an Array",
        "url": "https://leetcode.com/problems/degree-of-an-array/description/"
    },
    "698": {
        "description": "Given an array of integers nums and a positive integer k, find whether it's possible to divide this array into k non-empty subsets whose sums are all equal.\r\n\r\nExample 1:\r\n\r\nInput: nums = [4, 3, 2, 3, 5, 2, 1], k = 4\r\nOutput: True\r\nExplanation: It's possible to divide it into 4 subsets (5), (1, 4), (2,3), (2,3) with equal sums.\r\n\r\n\r\n\r\nNote:\r\n1 <= k <= len(nums) <= 16.\r\n0 < nums[i] < 10000.",
        "level": 2,
        "paid_only": false,
        "question_id": 698,
        "slug": "partition-to-k-equal-sum-subsets",
        "tags": [
            "Dynamic Programming",
            "Recursion"
        ],
        "title": "Partition to K Equal Sum Subsets",
        "url": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/description/"
    },
    "699": {
        "description": "On an infinite number line (x-axis), we drop given squares in the order they are given.\r\nThe i-th square dropped (positions[i] = (left, side_length)) is a square with the left-most point being positions[i][0] and sidelength positions[i][1].\r\nThe square is dropped with the bottom edge parallel to the number line, and from a higher height than all currently landed squares.  We wait for each square to stick before dropping the next.\r\nThe squares are infinitely sticky on their bottom edge, and will remain fixed to any positive length surface they touch (either the number line or another square).  Squares dropped adjacent to each other will not stick together prematurely.\r\n\r\n\r\nReturn a list ans of heights.  Each height ans[i] represents the current highest height of any square we have dropped, after dropping squares represented by positions[0], positions[1], ..., positions[i].\r\n\r\n\r\nExample 1:\r\n\r\nInput: [[1, 2], [2, 3], [6, 1]]\r\nOutput: [2, 5, 5]\r\nExplanation:\r\n\r\nAfter the first drop of positions[0] = [1, 2]:\r\n_aa\r\n_aa\r\n-------\r\nThe maximum height of any square is 2.\r\n\r\nAfter the second drop of positions[1] = [2, 3]:\r\n__aaa\r\n__aaa\r\n__aaa\r\n_aa__\r\n_aa__\r\n--------------\r\nThe maximum height of any square is 5.  \r\nThe larger square stays on top of the smaller square despite where its center\r\nof gravity is, because squares are infinitely sticky on their bottom edge.\r\n\r\nAfter the third drop of positions[1] = [6, 1]:\r\n__aaa\r\n__aaa\r\n__aaa\r\n_aa\r\n_aa___a\r\n--------------\r\nThe maximum height of any square is still 5.\r\n\r\nThus, we return an answer of [2, 5, 5].\r\n\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [[100, 100], [200, 100]]\r\nOutput: [100, 100]\r\nExplanation: Adjacent squares don't get stuck prematurely - only their bottom edge can stick to surfaces.\r\n\r\n\r\n\r\nNote:\r\n1 <= positions.length <= 1000.\r\n1 <= positions[i][0] <= 10^8.\r\n1 <= positions[i][1] <= 10^6.",
        "level": 3,
        "paid_only": false,
        "question_id": 699,
        "slug": "falling-squares",
        "tags": [
            "Segment Tree",
            "Binary Search Tree"
        ],
        "title": "Falling Squares",
        "url": "https://leetcode.com/problems/falling-squares/description/"
    },
    "711": {
        "description": "Given a non-empty 2D array `grid` of 0's and 1's, an island is a group of\n`1`'s (representing land) connected 4-directionally (horizontal or vertical.)\nYou may assume all four edges of the grid are surrounded by water.\n\nCount the number of distinct islands. An island is considered to be the same\nas another if they have the same shape, or have the same shape after rotation\n(90, 180, or 270 degrees only) or reflection (left/right direction or up/down\ndirection).\n\nExample 1:\n\n\n\n    11000\r10000\r00001\r00011\r\n\nGiven the above grid map, return `1`.\n\nNotice that:\n\n\n\n    11\r1\r\n\nand\n\n\n\n     1\r11\r\n\nare considered same island shapes. Because if we make a 180 degrees clockwise\nrotation on the first island, then two islands will have the same shapes.\n\n\n\nExample 2:\n\n\n\n    11100\r10001\r01001\r01110\n\nGiven the above grid map, return `2`.\n\nHere are the two distinct islands:\n\n\n\n    111\r1\r\n\nand\n\n\n\n    1\r1\r\n\n\nNotice that:\n\n\n\n    111\r1\r\n\nand\n\n\n\n    1\r111\r\n\nare considered same island shapes. Because if we flip the first array in the\nup/down direction, then they have the same shapes.\n\n\n\nNote: The length of each dimension in the given `grid` does not exceed 50.\n\n\n\ns\n\n\n\nposted @ 2018-03-10 23:55 [Grandyang](http://www.cnblogs.com/grandyang/)\n阅读(...) 评论(...) [编辑](https://i.cnblogs.com/EditPosts.aspx?postid=8542820) 收藏\n\n[刷新评论](javascript:void\\(0\\);)刷新页面返回顶部\n\n### 公告\n\nCopyright (C)2018 Grandyang",
        "level": 3,
        "paid_only": true,
        "question_id": 711,
        "slug": "number-of-distinct-islands-ii",
        "tags": [],
        "title": "Number of Distinct Islands II",
        "url": "https://leetcode.com/problems/number-of-distinct-islands-ii/description/"
    },
    "712": {
        "description": "Given two strings s1, s2, find the lowest ASCII sum of deleted characters to make two strings equal.\r\n\r\nExample 1:\r\n\r\nInput: s1 = \"sea\", s2 = \"eat\"\r\nOutput: 231\r\nExplanation: Deleting \"s\" from \"sea\" adds the ASCII value of \"s\" (115) to the sum.\r\nDeleting \"t\" from \"eat\" adds 116 to the sum.\r\nAt the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: s1 = \"delete\", s2 = \"leet\"\r\nOutput: 403\r\nExplanation: Deleting \"dee\" from \"delete\" to turn the string into \"let\",\r\nadds 100[d]+101[e]+101[e] to the sum.  Deleting \"e\" from \"leet\" adds 101[e] to the sum.\r\nAt the end, both strings are equal to \"let\", and the answer is 100+101+101+101 = 403.\r\nIf instead we turned both strings into \"lee\" or \"eet\", we would get answers of 433 or 417, which are higher.\r\n\r\n\r\n\r\nNote:\r\n0 < s1.length, s2.length <= 1000.\r\nAll elements of each string will have an ASCII value in [97, 122].",
        "level": 2,
        "paid_only": false,
        "question_id": 712,
        "slug": "minimum-ascii-delete-sum-for-two-strings",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Minimum ASCII Delete Sum for Two Strings",
        "url": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/description/"
    },
    "713": {
        "description": "Your are given an array of positive integers nums.\r\nCount and print the number of (contiguous) subarrays where the product of all the elements in the subarray is less than k.\r\n\r\nExample 1:\r\n\r\nInput: nums = [10, 5, 2, 6], k = 100\r\nOutput: 8\r\nExplanation: The 8 subarrays that have product less than 100 are: [10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6].\r\nNote that [10, 5, 2] is not included as the product of 100 is not strictly less than k.\r\n\r\n\r\n\r\nNote:\r\n0 < nums.length <= 50000.\r\n0 < nums[i] < 1000.\r\n0 <= k < 10^6.",
        "level": 2,
        "paid_only": false,
        "question_id": 713,
        "slug": "subarray-product-less-than-k",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "Subarray Product Less Than K",
        "url": "https://leetcode.com/problems/subarray-product-less-than-k/description/"
    },
    "714": {
        "description": "Your are given an array of integers prices, for which the i-th element is the price of a given stock on day i; and a non-negative integer fee representing a transaction fee.\r\nYou may complete as many transactions as you like, but you need to pay the transaction fee for each transaction.  You may not buy more than 1 share of a stock at a time (ie. you must sell the stock share before you buy again.)\r\nReturn the maximum profit you can make.\r\n\r\nExample 1:\r\n\r\nInput: prices = [1, 3, 2, 8, 4, 9], fee = 2\r\nOutput: 8\r\nExplanation: The maximum profit can be achieved by:\r\nBuying at prices[0] = 1Selling at prices[3] = 8Buying at prices[4] = 4Selling at prices[5] = 9The total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.\r\n\r\n\r\n\r\nNote:\r\n0 < prices.length <= 50000.\r\n0 < prices[i] < 50000.\r\n0 <= fee < 50000.",
        "level": 2,
        "paid_only": false,
        "question_id": 714,
        "slug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "title": "Best Time to Buy and Sell Stock with Transaction Fee",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/description/"
    },
    "715": {
        "description": "A Range Module is a module that tracks ranges of numbers. Your task is to design and implement the following interfaces in an efficient manner.\r\n\r\naddRange(int left, int right) Adds the half-open interval [left, right), tracking every real number in that interval.  Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval [left, right) that are not already tracked.\r\n\r\nqueryRange(int left, int right) Returns true if and only if every real number in the interval [left, right)\r\n is currently being tracked.\r\n\r\nremoveRange(int left, int right) Stops tracking every real number currently being tracked in the interval [left, right).\r\n\r\nExample 1:\r\n\r\naddRange(10, 20): null\r\nremoveRange(14, 16): null\r\nqueryRange(10, 14): true (Every number in [10, 14) is being tracked)\r\nqueryRange(13, 15): false (Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\r\nqueryRange(16, 17): true (The number 16 in [16, 17) is still being tracked, despite the remove operation)\r\n\r\n\r\n\r\nNote:\r\nA half open interval [left, right) denotes all real numbers left <= x < right.\r\n\r\n0 < left < right < 10^9 in all calls to addRange, queryRange, removeRange.\r\nThe total number of calls to addRange in a single test case is at most 1000.\r\nThe total number of calls to queryRange in a single test case is at most 5000.\r\nThe total number of calls to removeRange in a single test case is at most 1000.",
        "level": 3,
        "paid_only": false,
        "question_id": 715,
        "slug": "range-module",
        "tags": [
            "Array",
            "Segment Tree",
            "Binary Search Tree"
        ],
        "title": "Range Module",
        "url": "https://leetcode.com/problems/range-module/description/"
    },
    "716": {
        "description": "Design a max stack that supports push, pop, top, peekMax and popMax.\n\n\n\n  1. push(x) -- Push element x onto stack.\n  2. pop() -- Remove the element on top of the stack and return it.\n  3. top() -- Get the element on the top.\n  4. peekMax() -- Retrieve the maximum element in the stack.\n  5. popMax() -- Retrieve the maximum element in the stack, and remove it. If you find more than one maximum elements, only remove the top-most one.\n\n\n\nExample 1:\n\n\n\n    MaxStack stack = new MaxStack();\rstack.push(5); \rstack.push(1);\rstack.push(5);\rstack.top(); -> 5\rstack.popMax(); -> 5\rstack.top(); -> 1\rstack.peekMax(); -> 5\rstack.pop(); -> 1\rstack.top(); -> 5\r\n\n\n\nNote:\n\n  1. -1e7 <= x <= 1e7\n  2. Number of operations won't exceed 10000.\n  3. The last four operations won't be called when stack is empty.",
        "level": 3,
        "paid_only": true,
        "question_id": 716,
        "slug": "max-stack",
        "tags": [],
        "title": "Max Stack",
        "url": "https://leetcode.com/problems/max-stack/description/"
    },
    "717": {
        "description": "We have two special characters. The first character can be represented by one bit 0. The second character can be represented by two bits (10 or 11).  \r\n\r\nNow given a string represented by several bits. Return whether the last character must be a one-bit character or not. The given string will always end with a zero.\r\n\r\nExample 1:\r\n\r\nInput: \r\nbits = [1, 0, 0]\r\nOutput: True\r\nExplanation: \r\nThe only way to decode it is two-bit character and one-bit character. So the last character is one-bit character.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nbits = [1, 1, 1, 0]\r\nOutput: False\r\nExplanation: \r\nThe only way to decode it is two-bit character and two-bit character. So the last character is NOT one-bit character.\r\n\r\n\r\n\r\nNote:\r\n1 <= len(bits) <= 1000.\r\nbits[i] is always 0 or 1.",
        "level": 1,
        "paid_only": false,
        "question_id": 717,
        "slug": "1-bit-and-2-bit-characters",
        "tags": [
            "Array"
        ],
        "title": "1-bit and 2-bit Characters",
        "url": "https://leetcode.com/problems/1-bit-and-2-bit-characters/description/"
    },
    "718": {
        "description": "Given two integer arrays A and B, return the maximum length of an subarray that appears in both arrays.\r\n\r\nExample 1:\r\n\r\nInput:\r\nA: [1,2,3,2,1]\r\nB: [3,2,1,4,7]\r\nOutput: 3\r\nExplanation: \r\nThe repeated subarray with maximum length is [3, 2, 1].\r\n\r\n\r\n\r\nNote:\r\n\r\n1 <= len(A), len(B) <= 1000\r\n0 <= A[i], B[i] < 100",
        "level": 2,
        "paid_only": false,
        "question_id": 718,
        "slug": "maximum-length-of-repeated-subarray",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming"
        ],
        "title": "Maximum Length of Repeated Subarray",
        "url": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/description/"
    },
    "719": {
        "description": "Given an integer array, return the k-th smallest distance among all the pairs. The distance of a pair (A, B) is defined as the absolute difference between A and B. \r\n\r\nExample 1:\r\n\r\nInput:\r\nnums = [1,3,1]\r\nk = 1\r\nOutput: 0 \r\nExplanation:\r\nHere are all the pairs:\r\n(1,3) -> 2\r\n(1,1) -> 0\r\n(3,1) -> 2\r\nThen the 1st smallest distance pair is (1,1), and its distance is 0.\r\n\r\n\r\n\r\nNote:\r\n\r\n2 <= len(nums) <= 10000.\r\n0 <= nums[i] < 1000000.\r\n1 <= k <= len(nums) * (len(nums) - 1) / 2.",
        "level": 3,
        "paid_only": false,
        "question_id": 719,
        "slug": "find-k-th-smallest-pair-distance",
        "tags": [
            "Array",
            "Binary Search",
            "Heap"
        ],
        "title": "Find K-th Smallest Pair Distance",
        "url": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/description/"
    },
    "720": {
        "description": "Given a list of strings words representing an English Dictionary, find the longest word in words that can be built one character at a time by other words in words.  If there is more than one possible answer, return the longest word with the smallest lexicographical order.  If there is no answer, return the empty string.\r\n\r\nExample 1:\r\n\r\nInput: \r\nwords = [\"w\",\"wo\",\"wor\",\"worl\", \"world\"]\r\nOutput: \"world\"\r\nExplanation: \r\nThe word \"world\" can be built one character at a time by \"w\", \"wo\", \"wor\", and \"worl\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nwords = [\"a\", \"banana\", \"app\", \"appl\", \"ap\", \"apply\", \"apple\"]\r\nOutput: \"apple\"\r\nExplanation: \r\nBoth \"apply\" and \"apple\" can be built from other words in the dictionary. However, \"apple\" is lexicographically smaller than \"apply\".\r\n\r\n\r\n\r\nNote:\r\nAll the strings in the input will only contain lowercase letters.\r\nThe length of words will be in the range [1, 1000].\r\nThe length of words[i] will be in the range [1, 30].",
        "level": 1,
        "paid_only": false,
        "question_id": 720,
        "slug": "longest-word-in-dictionary",
        "tags": [
            "Hash Table",
            "Trie"
        ],
        "title": "Longest Word in Dictionary",
        "url": "https://leetcode.com/problems/longest-word-in-dictionary/description/"
    },
    "721": {
        "description": "Given a list accounts, each element accounts[i] is a list of strings, where the first element accounts[i][0] is a name, and the rest of the elements are emails representing emails of the account, in sorted order.\r\n\r\nNow, we would like to merge these accounts.  Two accounts definitely belong to the same person if there is some email that is common to both accounts.  Note that even if two accounts have the same name, they may belong to different people as people could have the same name.  A person can have any number of accounts initially, but all of their accounts definitely have the same name.\r\n\r\nAfter merging the accounts, return the accounts in the format they were given: the first element of each account is the name, and the rest of the elements are emails in sorted order.  The accounts themselves can be returned in any order.\r\n\r\nExample 1:\r\n\r\nInput: \r\naccounts = [[\"John\", \"johnsmith@mail.com\", \"john00@mail.com\"], [\"John\", \"johnnybravo@mail.com\"], [\"John\", \"johnsmith@mail.com\", \"john_newyork@mail.com\"], [\"Mary\", \"mary@mail.com\"]]\r\nOutput: [[\"John\", 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com'],  [\"John\", \"johnnybravo@mail.com\"], [\"Mary\", \"mary@mail.com\"]]\r\nExplanation: \r\nThe first and third John's are the same person as they have the common email \"johnsmith@mail.com\".\r\nThe second John and Mary are different people as none of their email addresses are used by other accounts.\r\nWe could return these lists in any order, for example the answer [['Mary', 'mary@mail.com'], ['John', 'johnnybravo@mail.com'], \r\n['John', 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com']] would still be accepted.\r\n\r\n\r\n\r\nNote:\r\nThe length of accounts will be in the range [1, 1000].\r\nThe length of accounts[i] will be in the range [1, 10].\r\nThe length of accounts[i][j] will be in the range [1, 30].",
        "level": 2,
        "paid_only": false,
        "question_id": 721,
        "slug": "accounts-merge",
        "tags": [
            "Depth-first Search",
            "Union Find"
        ],
        "title": "Accounts Merge",
        "url": "https://leetcode.com/problems/accounts-merge/description/"
    },
    "722": {
        "description": "Given a C++ program, remove comments from it. The program source is an array where source[i] is the i-th line of the source code.  This represents the result of splitting the original source code string by the newline character \\n.\r\n\r\nIn C++, there are two types of comments, line comments, and block comments.\r\n\r\nThe string // denotes a line comment, which represents that it and rest of the characters to the right of it in the same line should be ignored.\r\n\r\nThe string /* denotes a block comment, which represents that all characters until the next (non-overlapping) occurrence of */ should be ignored.  (Here, occurrences happen in reading order: line by line from left to right.)  To be clear, the string /*/ does not yet end the block comment, as the ending would be overlapping the beginning.\r\n\r\nThe first effective comment takes precedence over others: if the string // occurs in a block comment, it is ignored. Similarly, if the string /* occurs in a line or block comment, it is also ignored.\r\n\r\nIf a certain line of code is empty after removing comments, you must not output that line: each string in the answer list will be non-empty.\r\n\r\nThere will be no control characters, single quote, or double quote characters.  For example, source = \"string s = \"/* Not a comment. */\";\" will not be a test case.  (Also, nothing else such as defines or macros will interfere with the comments.)\r\n\r\nIt is guaranteed that every open block comment will eventually be closed, so /* outside of a line or block comment always starts a new comment.\r\n\r\nFinally, implicit newline characters can be deleted by block comments.  Please see the examples below for details.\r\n\r\n\r\nAfter removing the comments from the source code, return the source code in the same format.\r\n\r\nExample 1:\r\n\r\nInput: \r\nsource = [\"/*Test program */\", \"int main()\", \"{ \", \"  // variable declaration \", \"int a, b, c;\", \"/* This is a test\", \"   multiline  \", \"   comment for \", \"   testing */\", \"a = b + c;\", \"}\"]\r\n\r\nThe line by line code is visualized as below:\r\n/*Test program */\r\nint main()\r\n{ \r\n  // variable declaration \r\nint a, b, c;\r\n/* This is a test\r\n   multiline  \r\n   comment for \r\n   testing */\r\na = b + c;\r\n}\r\n\r\nOutput: [\"int main()\",\"{ \",\"  \",\"int a, b, c;\",\"a = b + c;\",\"}\"]\r\n\r\nThe line by line code is visualized as below:\r\nint main()\r\n{ \r\n  \r\nint a, b, c;\r\na = b + c;\r\n}\r\n\r\nExplanation: \r\nThe string /* denotes a block comment, including line 1 and lines 6-9. The string // denotes line 4 as comments.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nsource = [\"a/*comment\", \"line\", \"more_comment*/b\"]\r\nOutput: [\"ab\"]\r\nExplanation: The original source string is \"a/*comment\\nline\\nmore_comment*/b\", where we have bolded the newline characters.  After deletion, the implicit newline characters are deleted, leaving the string \"ab\", which when delimited by newline characters becomes [\"ab\"].\r\n\r\n\r\n\r\nNote:\r\nThe length of source is in the range [1, 100].\r\nThe length of source[i] is in the range [0, 80].\r\nEvery open block comment is eventually closed.\r\nThere are no single-quote, double-quote, or control characters in the source code.",
        "level": 2,
        "paid_only": false,
        "question_id": 722,
        "slug": "remove-comments",
        "tags": [
            "String"
        ],
        "title": "Remove Comments",
        "url": "https://leetcode.com/problems/remove-comments/description/"
    },
    "723": {
        "description": "This question is about implementing a basic elimination algorithm for Candy Crush.\r\n\r\nGiven a 2D integer array board representing the grid of candy, different positive integers board[i][j] represent different types of candies.  A value of board[i][j] = 0 represents that the cell at position (i, j) is empty.  The given board represents the state of the game following the player's move.  Now, you need to restore the board to a stable state by crushing candies according to the following rules:\r\n\r\n\r\nIf three or more candies of the same type are adjacent vertically or horizontally, \"crush\" them all at the same time - these positions become empty.\r\nAfter crushing all candies simultaneously, if an empty space on the board has candies on top of itself, then these candies will drop until they hit a candy or bottom at the same time. (No new candies will drop outside the top boundary.)\r\nAfter the above steps, there may exist more candies that can be crushed.  If so, you need to repeat the above steps.\r\nIf there does not exist more candies that can be crushed (ie. the board is stable), then return the current board.\r\n\r\n\r\nYou need to perform the above rules until the board becomes stable, then return the current board.\r\n\r\nExample 1:\r\n\r\nInput:\r\nboard = \r\n[[110,5,112,113,114],[210,211,5,213,214],[310,311,3,313,314],[410,411,412,5,414],[5,1,512,3,3],[610,4,1,613,614],[710,1,2,713,714],[810,1,2,1,1],[1,1,2,2,2],[4,1,4,4,1014]]\r\nOutput:\r\n[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[110,0,0,0,114],[210,0,0,0,214],[310,0,0,113,314],[410,0,0,213,414],[610,211,112,313,614],[710,311,412,613,714],[810,411,512,713,1014]]\r\nExplanation: \r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of board will be in the range [3, 50].\r\nThe length of board[i] will be in the range [3, 50].\r\nEach board[i][j] will initially start as an integer in the range [1, 2000].",
        "level": 2,
        "paid_only": true,
        "question_id": 723,
        "slug": "candy-crush",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "title": "Candy Crush",
        "url": "https://leetcode.com/problems/candy-crush/description/"
    },
    "724": {
        "description": "Given an array of integers nums, write a method that returns the \"pivot\" index of this array.\r\n\r\nWe define the pivot index as the index where the sum of the numbers to the left of the index is equal to the sum of the numbers to the right of the index.\r\n\r\nIf no such index exists, we should return -1. If there are multiple pivot indexes, you should return the left-most pivot index.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\nnums = [1, 7, 3, 6, 5, 6]\r\nOutput: 3\r\nExplanation: \r\nThe sum of the numbers to the left of index 3 (nums[3] = 6) is equal to the sum of numbers to the right of index 3.\r\nAlso, 3 is the first index where this occurs.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nnums = [1, 2, 3]\r\nOutput: -1\r\nExplanation: \r\nThere is no index that satisfies the conditions in the problem statement.\r\n\r\n\r\n\r\nNote:\r\nThe length of nums will be in the range [0, 10000].\r\nEach element nums[i] will be an integer in the range [-1000, 1000].",
        "level": 1,
        "paid_only": false,
        "question_id": 724,
        "slug": "find-pivot-index",
        "tags": [],
        "title": "Find Pivot Index",
        "url": "https://leetcode.com/problems/find-pivot-index/description/"
    },
    "725": {
        "description": "Given a (singly) linked list with head node root, write a function to split the linked list into k consecutive linked list \"parts\".\r\n\r\nThe length of each part should be as equal as possible: no two parts should have a size differing by more than 1.  This may lead to some parts being null.\r\n\r\nThe parts should be in order of occurrence in the input list, and parts occurring earlier should always have a size greater than or equal parts occurring later.\r\n\r\nReturn a List of ListNode's representing the linked list parts that are formed.\r\n\r\n\r\nExamples\r\n1->2->3->4, k = 5 // 5 equal parts\r\n[ [1], \r\n[2],\r\n[3],\r\n[4],\r\nnull ]\r\n\r\nExample 1:\r\n\r\nInput: \r\nroot = [1, 2, 3], k = 5\r\nOutput: [[1],[2],[3],[],[]]\r\nExplanation:\r\nThe input and each element of the output are ListNodes, not arrays.\r\nFor example, the input root has root.val = 1, root.next.val = 2, \\root.next.next.val = 3, and root.next.next.next = null.\r\nThe first element output[0] has output[0].val = 1, output[0].next = null.\r\nThe last element output[4] is null, but it's string representation as a ListNode is [].\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nroot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], k = 3\r\nOutput: [[1, 2, 3, 4], [5, 6, 7], [8, 9, 10]]\r\nExplanation:\r\nThe input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.\r\n\r\n\r\n\r\nNote:\r\nThe length of root will be in the range [0, 1000].\r\nEach value of a node in the input will be an integer in the range [0, 999].\r\nk will be an integer in the range [1, 50].",
        "level": 2,
        "paid_only": false,
        "question_id": 725,
        "slug": "split-linked-list-in-parts",
        "tags": [],
        "title": "Split Linked List in Parts",
        "url": "https://leetcode.com/problems/split-linked-list-in-parts/description/"
    },
    "726": {
        "description": "Given a chemical formula (given as a string), return the count of each atom.\r\n\r\nAn atomic element always starts with an uppercase character, then zero or more lowercase letters, representing the name.\r\n\r\n1 or more digits representing the count of that element may follow if the count is greater than 1.  If the count is 1, no digits will follow.  For example, H2O and H2O2 are possible, but H1O2 is impossible.\r\n\r\nTwo formulas concatenated together produce another formula.  For example, H2O2He3Mg4 is also a formula.  \r\n\r\nA formula placed in parentheses, and a count (optionally added) is also a formula.  For example, (H2O2) and (H2O2)3 are formulas.\r\n\r\nGiven a formula, output the count of all elements as a string in the following form: the first name (in sorted order), followed by its count (if that count is more than 1), followed by the second name (in sorted order), followed by its count (if that count is more than 1), and so on.\r\n\r\nExample 1:\r\n\r\nInput: \r\nformula = \"H2O\"\r\nOutput: \"H2O\"\r\nExplanation: \r\nThe count of elements are {'H': 2, 'O': 1}.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nformula = \"Mg(OH)2\"\r\nOutput: \"H2MgO2\"\r\nExplanation: \r\nThe count of elements are {'H': 2, 'Mg': 1, 'O': 2}.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \r\nformula = \"K4(ON(SO3)2)2\"\r\nOutput: \"K4N2O14S4\"\r\nExplanation: \r\nThe count of elements are {'K': 4, 'N': 2, 'O': 14, 'S': 4}.\r\n\r\n\r\n\r\nNote:\r\nAll atom names consist of lowercase letters, except for the first character which is uppercase.\r\nThe length of formula will be in the range [1, 1000].\r\nformula will only consist of letters, digits, and round parentheses, and is a valid formula as defined in the problem.",
        "level": 3,
        "paid_only": false,
        "question_id": 726,
        "slug": "number-of-atoms",
        "tags": [],
        "title": "Number of Atoms",
        "url": "https://leetcode.com/problems/number-of-atoms/description/"
    },
    "728": {
        "description": "A self-dividing number is a number that is divisible by every digit it contains.\r\n\r\nFor example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.\r\n\r\nAlso, a self-dividing number is not allowed to contain the digit zero.\r\n\r\nGiven a lower and upper number bound, output a list of every possible self dividing number, including the bounds if possible.\r\n\r\nExample 1:\r\n\r\nInput: \r\nleft = 1, right = 22\r\nOutput: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\r\n\r\n\r\n\r\nNote:\r\nThe boundaries of each input argument are 1 <= left <= right <= 10000.",
        "level": 1,
        "paid_only": false,
        "question_id": 728,
        "slug": "self-dividing-numbers",
        "tags": [],
        "title": "Self Dividing Numbers",
        "url": "https://leetcode.com/problems/self-dividing-numbers/description/"
    },
    "729": {
        "description": "Implement a MyCalendar class to store your events. A new event can be added if adding the event will not cause a double booking.\r\n\r\nYour class will have the method, book(int start, int end).  Formally, this represents a booking on the half open interval [start, end), the range of real numbers x such that start <= x < end.\r\n\r\nA double booking happens when two events have some non-empty intersection (ie., there is some time that is common to both events.)\r\n\r\nFor each call to the method MyCalendar.book, return true if the event can be added to the calendar successfully without causing a double booking.  Otherwise, return false and do not add the event to the calendar.\r\n\r\n\r\nYour class will be called like this:\r\nMyCalendar cal = new MyCalendar();\r\nMyCalendar.book(start, end)\r\n\r\nExample 1:\r\n\r\nMyCalendar();\r\nMyCalendar.book(10, 20); // returns true\r\nMyCalendar.book(15, 25); // returns false\r\nMyCalendar.book(20, 30); // returns true\r\nExplanation: \r\nThe first event can be booked.  The second can't because time 15 is already booked by another event.\r\nThe third event can be booked, as the first event takes every time less than 20, but not including 20.\r\n\r\n\r\n\r\nNote:\r\nThe number of calls to MyCalendar.book per test case will be at most 1000.\r\nIn calls to MyCalendar.book(start, end), start and end are integers in the range [0, 10^9].",
        "level": 2,
        "paid_only": false,
        "question_id": 729,
        "slug": "my-calendar-i",
        "tags": [],
        "title": "My Calendar I",
        "url": "https://leetcode.com/problems/my-calendar-i/description/"
    },
    "730": {
        "description": "Given a string S, find the number of different non-empty palindromic subsequences in S, and return that number modulo 10^9 + 7.\r\n\r\nA subsequence of a string S is obtained by deleting 0 or more characters from S.\r\n\r\nA sequence is palindromic if it is equal to the sequence reversed.\r\n\r\nTwo sequences A_1, A_2, ... and B_1, B_2, ... are different if there is some i for which A_i != B_i.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\nS = 'bccb'\r\nOutput: 6\r\nExplanation: \r\nThe 6 different non-empty palindromic subsequences are 'b', 'c', 'bb', 'cc', 'bcb', 'bccb'.\r\nNote that 'bcb' is counted only once, even though it occurs twice.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nS = 'abcdabcdabcdabcdabcdabcdabcdabcddcbadcbadcbadcbadcbadcbadcbadcba'\r\nOutput: 104860361\r\nExplanation: \r\nThere are 3104860382 different non-empty palindromic subsequences, which is 104860361 modulo 10^9 + 7.\r\n\r\n\r\n\r\nNote:\r\nThe length of S will be in the range [1, 1000].\r\nEach character S[i] will be in the set {'a', 'b', 'c', 'd'}.",
        "level": 3,
        "paid_only": false,
        "question_id": 730,
        "slug": "count-different-palindromic-subsequences",
        "tags": [],
        "title": "Count Different Palindromic Subsequences",
        "url": "https://leetcode.com/problems/count-different-palindromic-subsequences/description/"
    },
    "731": {
        "description": "Implement a MyCalendarTwo class to store your events. A new event can be added if adding the event will not cause a triple booking.\r\n\r\nYour class will have one method, book(int start, int end).  Formally, this represents a booking on the half open interval [start, end), the range of real numbers x such that start <= x < end.\r\n\r\nA triple booking happens when three events have some non-empty intersection (ie., there is some time that is common to all 3 events.)\r\n\r\nFor each call to the method MyCalendar.book, return true if the event can be added to the calendar successfully without causing a triple booking.  Otherwise, return false and do not add the event to the calendar.\r\n\r\n\r\nYour class will be called like this:\r\nMyCalendar cal = new MyCalendar();\r\nMyCalendar.book(start, end)\r\n\r\nExample 1:\r\n\r\nMyCalendar();\r\nMyCalendar.book(10, 20); // returns true\r\nMyCalendar.book(50, 60); // returns true\r\nMyCalendar.book(10, 40); // returns true\r\nMyCalendar.book(5, 15); // returns false\r\nMyCalendar.book(5, 10); // returns true\r\nMyCalendar.book(25, 55); // returns true\r\nExplanation: \r\nThe first two events can be booked.  The third event can be double booked.\r\nThe fourth event (5, 15) can't be booked, because it would result in a triple booking.\r\nThe fifth event (5, 10) can be booked, as it does not use time 10 which is already double booked.\r\nThe sixth event (25, 55) can be booked, as the time in [25, 40) will be double booked with the third event;\r\nthe time [40, 50) will be single booked, and the time [50, 55) will be double booked with the second event.\r\n\r\n\r\n\r\nNote:\r\nThe number of calls to MyCalendar.book per test case will be at most 1000.\r\nIn calls to MyCalendar.book(start, end), start and end are integers in the range [0, 10^9].",
        "level": 2,
        "paid_only": false,
        "question_id": 731,
        "slug": "my-calendar-ii",
        "tags": [],
        "title": "My Calendar II",
        "url": "https://leetcode.com/problems/my-calendar-ii/description/"
    },
    "732": {
        "description": "Implement a MyCalendarThree class to store your events. A new event can always be added.\r\n\r\nYour class will have one method, book(int start, int end).  Formally, this represents a booking on the half open interval [start, end), the range of real numbers x such that start <= x < end.\r\n\r\nA K-booking happens when K events have some non-empty intersection (ie., there is some time that is common to all K events.)\r\n\r\nFor each call to the method MyCalendar.book, return an integer K representing the largest integer such that there exists a K-booking in the calendar.\r\n\r\n\r\nYour class will be called like this:\r\nMyCalendarThree cal = new MyCalendarThree();\r\nMyCalendarThree.book(start, end)\r\n\r\nExample 1:\r\n\r\nMyCalendarThree();\r\nMyCalendarThree.book(10, 20); // returns 1\r\nMyCalendarThree.book(50, 60); // returns 1\r\nMyCalendarThree.book(10, 40); // returns 2\r\nMyCalendarThree.book(5, 15); // returns 3\r\nMyCalendarThree.book(5, 10); // returns 3\r\nMyCalendarThree.book(25, 55); // returns 3\r\nExplanation: \r\nThe first two events can be booked and are disjoint, so the maximum K-booking is a 1-booking.\r\nThe third event [10, 40) intersects the first event, and the maximum K-booking is a 2-booking.\r\nThe remaining events cause the maximum K-booking to be only a 3-booking.\r\nNote that the last event locally causes a 2-booking, but the answer is still 3 because\r\neg. [10, 20), [10, 40), and [5, 15) are still triple booked.\r\n\r\n\r\n\r\nNote:\r\nThe number of calls to MyCalendarThree.book per test case will be at most 400.\r\nIn calls to MyCalendarThree.book(start, end), start and end are integers in the range [0, 10^9].",
        "level": 3,
        "paid_only": false,
        "question_id": 732,
        "slug": "my-calendar-iii",
        "tags": [],
        "title": "My Calendar III",
        "url": "https://leetcode.com/problems/my-calendar-iii/description/"
    },
    "733": {
        "description": "An image is represented by a 2-D array of integers, each integer representing the pixel value of the image (from 0 to 65535).\r\n\r\nGiven a coordinate (sr, sc) representing the starting pixel (row and column) of the flood fill, and a pixel value newColor, \"flood fill\" the image.\r\n\r\nTo perform a \"flood fill\", consider the starting pixel, plus any pixels connected 4-directionally to the starting pixel of the same color as the starting pixel, plus any pixels connected 4-directionally to those pixels (also with the same color as the starting pixel), and so on.  Replace the color of all of the aforementioned pixels with the newColor.\r\n\r\nAt the end, return the modified image.\r\n\r\nExample 1:\r\n\r\nInput: \r\nimage = [[1,1,1],[1,1,0],[1,0,1]]\r\nsr = 1, sc = 1, newColor = 2\r\nOutput: [[2,2,2],[2,2,0],[2,0,1]]\r\nExplanation: \r\nFrom the center of the image (with position (sr, sc) = (1, 1)), all pixels connected \r\nby a path of the same color as the starting pixel are colored with the new color.\r\nNote the bottom corner is not colored 2, because it is not 4-directionally connected\r\nto the starting pixel.\r\n\r\n\r\n\r\nNote:\r\nThe length of image and image[0] will be in the range [1, 50].\r\nThe given starting pixel will satisfy 0 <= sr < image.length and 0 <= sc < image[0].length.\r\nThe value of each color in image[i][j] and newColor will be an integer in [0, 65535].",
        "level": 1,
        "paid_only": false,
        "question_id": 733,
        "slug": "flood-fill",
        "tags": [],
        "title": "Flood Fill",
        "url": "https://leetcode.com/problems/flood-fill/description/"
    },
    "734": {
        "description": "Given two sentences `words1, words2` (each represented as an array of\nstrings), and a list of similar word pairs `pairs`, determine if two sentences\nare similar.\n\nFor example, \"great acting skills\" and \"fine drama talent\" are similar, if the\nsimilar word pairs are `pairs = [[\"great\", \"fine\"], [\"acting\",\"drama\"],\n[\"skills\",\"talent\"]]`.\n\nNote that the similarity relation is not transitive. For example, if \"great\"\nand \"fine\" are similar, and \"fine\" and \"good\" are similar, \"great\" and \"good\"\nare not necessarily similar.\n\nHowever, similarity is symmetric. For example, \"great\" and \"fine\" being\nsimilar is the same as \"fine\" and \"great\" being similar.\n\nAlso, a word is always similar with itself. For example, the sentences `words1\n= [\"great\"], words2 = [\"great\"], pairs = []` are similar, even though there\nare no specified similar word pairs.\n\nFinally, sentences can only be similar if they have the same number of words.\nSo a sentence like `words1 = [\"great\"]` can never be similar to `words2 =\n[\"doubleplus\",\"good\"]`.\n\nNote:\n\n  * The length of `words1` and `words2` will not exceed `1000`.\n  * The length of `pairs` will not exceed `2000`.\n  * The length of each `pairs[i]` will be `2`.\n  * The length of each `words[i]` and `pairs[i][j]` will be in the range `[1, 20]`.",
        "level": 1,
        "paid_only": true,
        "question_id": 734,
        "slug": "sentence-similarity",
        "tags": [],
        "title": "Sentence Similarity",
        "url": "https://leetcode.com/problems/sentence-similarity/description/"
    },
    "735": {
        "description": "We are given an array asteroids of integers representing asteroids in a row.\r\n\r\nFor each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left).  Each asteroid moves at the same speed.\r\n\r\nFind out the state of the asteroids after all collisions.  If two asteroids meet, the smaller one will explode.  If both are the same size, both will explode.  Two asteroids moving in the same direction will never meet.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\nasteroids = [5, 10, -5]\r\nOutput: [5, 10]\r\nExplanation: \r\nThe 10 and -5 collide resulting in 10.  The 5 and 10 never collide.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nasteroids = [8, -8]\r\nOutput: []\r\nExplanation: \r\nThe 8 and -8 collide exploding each other.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \r\nasteroids = [10, 2, -5]\r\nOutput: [10]\r\nExplanation: \r\nThe 2 and -5 collide resulting in -5.  The 10 and -5 collide resulting in 10.\r\n\r\n\r\n\r\nExample 4:\r\n\r\nInput: \r\nasteroids = [-2, -1, 1, 2]\r\nOutput: [-2, -1, 1, 2]\r\nExplanation: \r\nThe -2 and -1 are moving left, while the 1 and 2 are moving right.\r\nAsteroids moving the same direction never meet, so no asteroids will meet each other.\r\n\r\n\r\n\r\nNote:\r\nThe length of asteroids will be at most 10000.\r\nEach asteroid will be a non-zero integer in the range [-1000, 1000]..",
        "level": 2,
        "paid_only": false,
        "question_id": 735,
        "slug": "asteroid-collision",
        "tags": [],
        "title": "Asteroid Collision",
        "url": "https://leetcode.com/problems/asteroid-collision/description/"
    },
    "736": {
        "description": "You are given a string expression representing a Lisp-like expression to return the integer value of.\r\n\r\nThe syntax for these expressions is given as follows.\r\n\r\nAn expression is either an integer, a let-expression, an add-expression, a mult-expression, or an assigned variable.  Expressions always evaluate to a single integer.\r\n\r\n(An integer could be positive or negative.)\r\n\r\nA let-expression takes the form (let v1 e1 v2 e2 ... vn en expr), where let is always the string \"let\", then there are 1 or more pairs of alternating variables and expressions, meaning that the first variable v1 is assigned the value of the expression e1, the second variable v2 is assigned the value of the expression e2, and so on sequentially; and then the value of this let-expression is the value of the expression expr.\r\n\r\nAn add-expression takes the form (add e1 e2) where add is always the string \"add\", there are always two expressions e1, e2, and this expression evaluates to the addition of the evaluation of e1 and the evaluation of e2.\r\n\r\nA mult-expression takes the form (mult e1 e2) where mult is always the string \"mult\", there are always two expressions e1, e2, and this expression evaluates to the multiplication of the evaluation of e1 and the evaluation of e2.\r\n\r\nFor the purposes of this question, we will use a smaller subset of variable names.  A variable starts with a lowercase letter, then zero or more lowercase letters or digits.  Additionally for your convenience, the names \"add\", \"let\", or \"mult\" are protected and will never be used as variable names.\r\n\r\nFinally, there is the concept of scope.  When an expression of a variable name is evaluated, within the context of that evaluation, the innermost scope (in terms of parentheses) is checked first for the value of that variable, and then outer scopes are checked sequentially.  It is guaranteed that every expression is legal.  Please see the examples for more details on scope.\r\n\r\n\r\nEvaluation Examples:\r\n\r\nInput: (add 1 2)\r\nOutput: 3\r\n\r\nInput: (mult 3 (add 2 3))\r\nOutput: 15\r\n\r\nInput: (let x 2 (mult x 5))\r\nOutput: 10\r\n\r\nInput: (let x 2 (mult x (let x 3 y 4 (add x y))))\r\nOutput: 14\r\nExplanation: In the expression (add x y), when checking for the value of the variable x,\r\nwe check from the innermost scope to the outermost in the context of the variable we are trying to evaluate.\r\nSince x = 3 is found first, the value of x is 3.\r\n\r\nInput: (let x 3 x 2 x)\r\nOutput: 2\r\nExplanation: Assignment in let statements is processed sequentially.\r\n\r\nInput: (let x 1 y 2 x (add x y) (add x y))\r\nOutput: 5\r\nExplanation: The first (add x y) evaluates as 3, and is assigned to x.\r\nThe second (add x y) evaluates as 3+2 = 5.\r\n\r\nInput: (let x 2 (add (let x 3 (let x 4 x)) x))\r\nOutput: 6\r\nExplanation: Even though (let x 4 x) has a deeper scope, it is outside the context\r\nof the final x in the add-expression.  That final x will equal 2.\r\n\r\nInput: (let a1 3 b2 (add a1 1) b2) \r\nOutput 4\r\nExplanation: Variable names can contain digits after the first character.\r\n\r\n\r\n\r\nNote:\r\nThe given string expression is well formatted: There are no leading or trailing spaces, there is only a single space separating different components of the string, and no space between adjacent parentheses.  The expression is guaranteed to be legal and evaluate to an integer.\r\nThe length of expression is at most 2000.  (It is also non-empty, as that would not be a legal expression.)\r\nThe answer and all intermediate calculations of that answer are guaranteed to fit in a 32-bit integer.",
        "level": 3,
        "paid_only": false,
        "question_id": 736,
        "slug": "parse-lisp-expression",
        "tags": [],
        "title": "Parse Lisp Expression",
        "url": "https://leetcode.com/problems/parse-lisp-expression/description/"
    },
    "737": {
        "description": "Given two sentences `words1, words2` (each represented as an array of\nstrings), and a list of similar word pairs `pairs`, determine if two sentences\nare similar.\n\nFor example, `words1 = [\"great\", \"acting\", \"skills\"]` and `words2 = [\"fine\",\n\"drama\", \"talent\"]` are similar, if the similar word pairs are `pairs =\n[[\"great\", \"good\"], [\"fine\", \"good\"], [\"acting\",\"drama\"],\n[\"skills\",\"talent\"]]`.\n\nNote that the similarity relation is transitive. For example, if \"great\" and\n\"good\" are similar, and \"fine\" and \"good\" are similar, then \"great\" and \"fine\"\nare similar.\n\nSimilarity is also symmetric. For example, \"great\" and \"fine\" being similar is\nthe same as \"fine\" and \"great\" being similar.\n\nAlso, a word is always similar with itself. For example, the sentences `words1\n= [\"great\"], words2 = [\"great\"], pairs = []` are similar, even though there\nare no specified similar word pairs.\n\nFinally, sentences can only be similar if they have the same number of words.\nSo a sentence like `words1 = [\"great\"]` can never be similar to `words2 =\n[\"doubleplus\",\"good\"]`.\n\nNote:\n\n  * The length of `words1` and `words2` will not exceed `1000`.\n  * The length of `pairs` will not exceed `2000`.\n  * The length of each `pairs[i]` will be `2`.\n  * The length of each `words[i]` and `pairs[i][j]` will be in the range `[1, 20]`.",
        "level": 2,
        "paid_only": true,
        "question_id": 737,
        "slug": "sentence-similarity-ii",
        "tags": [],
        "title": "Sentence Similarity II",
        "url": "https://leetcode.com/problems/sentence-similarity-ii/description/"
    },
    "738": {
        "description": "Given a non-negative integer N, find the largest number that is less than or equal to N with monotone increasing digits.\r\n\r\n(Recall that an integer has monotone increasing digits if and only if each pair of adjacent digits x and y satisfy x <= y.)\r\n\r\n\r\nExample 1:\r\n\r\nInput: N = 10\r\nOutput: 9\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: N = 1234\r\nOutput: 1234\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: N = 332\r\nOutput: 299\r\n\r\n\r\n\r\nNote:\r\nN is an integer in the range [0, 10^9].",
        "level": 2,
        "paid_only": false,
        "question_id": 738,
        "slug": "monotone-increasing-digits",
        "tags": [],
        "title": "Monotone Increasing Digits",
        "url": "https://leetcode.com/problems/monotone-increasing-digits/description/"
    },
    "739": {
        "description": "Given a list of daily temperatures, produce a list that, for each day in the input, tells you how many days you would have to wait until a warmer temperature.  If there is no future day for which this is possible, put 0 instead.\r\n\r\nFor example, given the list temperatures = [73, 74, 75, 71, 69, 72, 76, 73], your output should be [1, 1, 4, 2, 1, 1, 0, 0].\r\n\r\n\r\nNote:\r\nThe length of temperatures will be in the range [1, 30000].\r\nEach temperature will be an integer in the range [30, 100].",
        "level": 2,
        "paid_only": false,
        "question_id": 739,
        "slug": "daily-temperatures",
        "tags": [],
        "title": "Daily Temperatures",
        "url": "https://leetcode.com/problems/daily-temperatures/description/"
    },
    "740": {
        "description": "Given an array nums of integers, you can perform operations on the array.\r\n\r\nIn each operation, you pick any nums[i] and delete it to earn nums[i] points.  After, you must delete every element equal to nums[i] - 1 or nums[i] + 1.\r\n\r\nYou start with 0 points.  Return the maximum number of points you can earn by applying such operations.\r\n\r\n\r\nExample 1:\r\n\r\nInput: nums = [3, 4, 2]\r\nOutput: 6\r\nExplanation: \r\nDelete 4 to earn 4 points, consequently 3 is also deleted.\r\nThen, delete 2 to earn 2 points. 6 total points are earned.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: nums = [2, 2, 3, 3, 3, 4]\r\nOutput: 9\r\nExplanation: \r\nDelete 3 to earn 3 points, deleting both 2's and the 4.\r\nThen, delete 3 again to earn 3 points, and 3 again to earn 3 points.\r\n9 total points are earned.\r\n\r\n\r\n\r\nNote:\r\nThe length of nums is at most 20000.\r\nEach element nums[i] is an integer in the range [1, 10000].",
        "level": 2,
        "paid_only": false,
        "question_id": 740,
        "slug": "delete-and-earn",
        "tags": [],
        "title": "Delete and Earn",
        "url": "https://leetcode.com/problems/delete-and-earn/description/"
    },
    "741": {
        "description": "In a N x N grid representing a field of cherries, each cell is one of three possible integers.\r\n\r\n0 means the cell is empty, so you can pass through;\r\n1 means the cell contains a cherry, that you can pick up and pass through;\r\n-1 means the cell contains a thorn that blocks your way.\r\n\r\nYour task is to collect maximum number of cherries possible by following the rules below:\r\n\r\nStarting at the position (0, 0) and reaching (N-1, N-1) by moving right or down through valid path cells (cells with value 0 or 1);\r\nAfter reaching (N-1, N-1), returning to (0, 0) by moving left or up through valid path cells;\r\nWhen passing through a path cell containing a cherry, you pick it up and the cell becomes an empty cell (0);\r\nIf there is no valid path between (0, 0) and (N-1, N-1), then no cherries can be collected.\r\n\r\n\r\nExample 1:\r\n\r\nInput: grid =\r\n[[0, 1, -1],\r\n [1, 0, -1],\r\n [1, 1,  1]]\r\nOutput: 5\r\nExplanation: \r\nThe player started at (0, 0) and went down, down, right right to reach (2, 2).\r\n4 cherries were picked up during this single trip, and the matrix becomes [[0,1,-1],[0,0,-1],[0,0,0]].\r\nThen, the player went left, up, up, left to return home, picking up one more cherry.\r\nThe total number of cherries picked up is 5, and this is the maximum possible.\r\n\r\n\r\n\r\nNote:\r\ngrid is an N by N 2D array, with 1 <= N <= 50.\r\nEach grid[i][j] is an integer in the set {-1, 0, 1}.\r\nIt is guaranteed that grid[0][0] and grid[N-1][N-1] are not -1.",
        "level": 3,
        "paid_only": false,
        "question_id": 741,
        "slug": "cherry-pickup",
        "tags": [],
        "title": "Cherry Pickup",
        "url": "https://leetcode.com/problems/cherry-pickup/description/"
    },
    "742": {
        "description": "Implement function ToLowerCase() that has a string parameter str, and returns the same string in lowercase.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: \"Hello\"\r\nOutput: \"hello\"\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"here\"\r\nOutput: \"here\"\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: \"LOVELY\"\r\nOutput: \"lovely\"",
        "level": 1,
        "paid_only": false,
        "question_id": 742,
        "slug": "to-lower-case",
        "tags": [],
        "title": "To Lower Case",
        "url": "https://leetcode.com/problems/to-lower-case/description/"
    },
    "744": {
        "description": "There are N network nodes, labelled 1 to N.\r\n\r\nGiven times, a list of travel times as directed edges times[i] = (u, v, w), where u is the source node, v is the target node, and w is the time it takes for a signal to travel from source to target.\r\n\r\nNow, we send a signal from a certain node K.  How long will it take for all nodes to receive the signal?  If it is impossible, return -1.\r\n\r\n\r\nNote:\r\n\r\nN will be in the range [1, 100].\r\nK will be in the range [1, N].\r\nThe length of times will be in the range [1, 6000].\r\nAll edges times[i] = (u, v, w) will have 1 <= u, v <= N and 1 <= w <= 100.",
        "level": 2,
        "paid_only": false,
        "question_id": 744,
        "slug": "network-delay-time",
        "tags": [],
        "title": "Network Delay Time",
        "url": "https://leetcode.com/problems/network-delay-time/description/"
    },
    "745": {
        "description": "Given a list of sorted characters letters containing only lowercase letters, and given a target letter target, find the smallest element in the list that is larger than the given target.\r\n\r\nLetters also wrap around.  For example, if the target is target = 'z' and letters = ['a', 'b'], the answer is 'a'.\r\n\r\n\r\nExamples:\r\n\r\nInput:\r\nletters = [\"c\", \"f\", \"j\"]\r\ntarget = \"a\"\r\nOutput: \"c\"\r\n\r\nInput:\r\nletters = [\"c\", \"f\", \"j\"]\r\ntarget = \"c\"\r\nOutput: \"f\"\r\n\r\nInput:\r\nletters = [\"c\", \"f\", \"j\"]\r\ntarget = \"d\"\r\nOutput: \"f\"\r\n\r\nInput:\r\nletters = [\"c\", \"f\", \"j\"]\r\ntarget = \"g\"\r\nOutput: \"j\"\r\n\r\nInput:\r\nletters = [\"c\", \"f\", \"j\"]\r\ntarget = \"j\"\r\nOutput: \"c\"\r\n\r\nInput:\r\nletters = [\"c\", \"f\", \"j\"]\r\ntarget = \"k\"\r\nOutput: \"c\"\r\n\r\n\r\n\r\nNote:\r\n\r\nletters has a length in range [2, 10000].\r\nletters consists of lowercase letters, and contains at least 2 unique letters.\r\ntarget is a lowercase letter.",
        "level": 1,
        "paid_only": false,
        "question_id": 745,
        "slug": "find-smallest-letter-greater-than-target",
        "tags": [],
        "title": "Find Smallest Letter Greater Than Target",
        "url": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/description/"
    },
    "746": {
        "description": "Given many words, words[i] has weight i.\r\n\r\nDesign a class WordFilter that supports one function, WordFilter.f(String prefix, String suffix).\r\nIt will return the word with given prefix and suffix with maximum weight.  If no word exists, return -1.\r\n\r\n\r\nExamples:\r\n\r\nInput:\r\nWordFilter([\"apple\"])\r\nWordFilter.f(\"a\", \"e\") // returns 0\r\nWordFilter.f(\"b\", \"\") // returns -1\r\n\r\n\r\nNote:\r\n\r\nwords has length in range [1, 15000].\r\nFor each test case, up to words.length queries WordFilter.f may be made.\r\nwords[i] has length in range [1, 10].\r\nprefix, suffix have lengths in range [0, 10].\r\nwords[i] and prefix, suffix queries consist of lowercase letters only.",
        "level": 3,
        "paid_only": false,
        "question_id": 746,
        "slug": "prefix-and-suffix-search",
        "tags": [],
        "title": "Prefix and Suffix Search",
        "url": "https://leetcode.com/problems/prefix-and-suffix-search/description/"
    },
    "747": {
        "description": "On a staircase, the i-th step has some non-negative cost cost[i] assigned (0 indexed).\r\n\r\nOnce you pay the cost, you can either climb one or two steps. You need to find minimum cost to reach the top of the floor, and you can either start from the step with index 0, or the step with index 1.\r\n\r\n\r\nExample 1:\r\n\r\nInput: cost = [10, 15, 20]\r\nOutput: 15\r\nExplanation: Cheapest is start on cost[1], pay that cost and go to the top.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: cost = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1]\r\nOutput: 6\r\nExplanation: Cheapest is start on cost[0], and only step on 1s, skipping cost[3].\r\n\r\n\r\n\r\nNote:\r\n\r\ncost will have a length in the range [2, 1000].\r\nEvery cost[i] will be an integer in the range [0, 999].",
        "level": 1,
        "paid_only": false,
        "question_id": 747,
        "slug": "min-cost-climbing-stairs",
        "tags": [],
        "title": "Min Cost Climbing Stairs",
        "url": "https://leetcode.com/problems/min-cost-climbing-stairs/description/"
    },
    "748": {
        "description": "In a given integer array nums, there is always exactly one largest element.\r\n\r\nFind whether the largest element in the array is at least twice as much as every other number in the array.\r\n\r\nIf it is, return the index of the largest element, otherwise return -1.\r\n\r\nExample 1:\r\n\r\n\r\nInput: nums = [3, 6, 1, 0]\r\nOutput: 1\r\nExplanation: 6 is the largest integer, and for every other number in the array x,\r\n6 is more than twice as big as x.  The index of value 6 is 1, so we return 1.\r\n\r\n\r\n \r\n\r\nExample 2:\r\n\r\n\r\nInput: nums = [1, 2, 3, 4]\r\nOutput: -1\r\nExplanation: 4 isn't at least as big as twice the value of 3, so we return -1.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tnums will have a length in the range [1, 50].\r\n\tEvery nums[i] will be an integer in the range [0, 99].\r\n\r\n\r\n ",
        "level": 1,
        "paid_only": false,
        "question_id": 748,
        "slug": "largest-number-at-least-twice-of-others",
        "tags": [],
        "title": "Largest Number At Least Twice of Others",
        "url": "https://leetcode.com/problems/largest-number-at-least-twice-of-others/description/"
    },
    "749": {
        "description": "Find the minimum length word from a given dictionary words, which has all the letters from the string licensePlate.  Such a word is said to complete the given string licensePlate\r\n\r\nHere, for letters we ignore case.  For example, \"P\" on the licensePlate still matches \"p\" on the word.\r\n\r\nIt is guaranteed an answer exists.  If there are multiple answers, return the one that occurs first in the array.\r\n\r\nThe license plate might have the same letter occurring multiple times.  For example, given a licensePlate of \"PP\", the word \"pair\" does not complete the licensePlate, but the word \"supper\" does.\r\n\r\n\r\nExample 1:\r\n\r\nInput: licensePlate = \"1s3 PSt\", words = [\"step\", \"steps\", \"stripe\", \"stepple\"]\r\nOutput: \"steps\"\r\nExplanation: The smallest length word that contains the letters \"S\", \"P\", \"S\", and \"T\".\r\nNote that the answer is not \"step\", because the letter \"s\" must occur in the word twice.\r\nAlso note that we ignored case for the purposes of comparing whether a letter exists in the word.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: licensePlate = \"1s3 456\", words = [\"looks\", \"pest\", \"stew\", \"show\"]\r\nOutput: \"pest\"\r\nExplanation: There are 3 smallest length words that contains the letters \"s\".\r\nWe return the one that occurred first.\r\n\r\n\r\n\r\nNote:\r\n\r\nlicensePlate will be a string with length in range [1, 7].\r\nlicensePlate will contain digits, spaces, or letters (uppercase or lowercase).\r\nwords will have a length in the range [10, 1000].\r\nEvery words[i] will consist of lowercase letters, and have length in range [1, 15].",
        "level": 2,
        "paid_only": false,
        "question_id": 749,
        "slug": "shortest-completing-word",
        "tags": [],
        "title": "Shortest Completing Word",
        "url": "https://leetcode.com/problems/shortest-completing-word/description/"
    },
    "750": {
        "description": "A virus is spreading rapidly, and your task is to quarantine the infected area by installing walls.\r\n\r\nThe world is modeled as a 2-D array of cells, where 0 represents uninfected cells, and 1 represents cells contaminated with the virus.  A wall (and only one wall) can be installed between any two 4-directionally adjacent cells, on the shared boundary.\r\n\r\nEvery night, the virus spreads to all neighboring cells in all four directions unless blocked by a wall.\r\nResources are limited. Each day, you can install walls around only one region -- the affected area (continuous block of infected cells) that threatens the most uninfected cells the following night. There will never be a tie.\r\n\r\nCan you save the day? If so, what is the number of walls required? If not, and the world becomes fully infected, return the number of walls used.\r\n\r\n\r\nExample 1:\r\n\r\nInput: grid = \r\n[[0,1,0,0,0,0,0,1],\r\n [0,1,0,0,0,0,0,1],\r\n [0,0,0,0,0,0,0,1],\r\n [0,0,0,0,0,0,0,0]]\r\nOutput: 10\r\nExplanation:\r\nThere are 2 contaminated regions.\r\nOn the first day, add 5 walls to quarantine the viral region on the left. The board after the virus spreads is:\r\n\r\n[[0,1,0,0,0,0,1,1],\r\n [0,1,0,0,0,0,1,1],\r\n [0,0,0,0,0,0,1,1],\r\n [0,0,0,0,0,0,0,1]]\r\n\r\nOn the second day, add 5 walls to quarantine the viral region on the right. The virus is fully contained.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: grid = \r\n[[1,1,1],\r\n [1,0,1],\r\n [1,1,1]]\r\nOutput: 4\r\nExplanation: Even though there is only one cell saved, there are 4 walls built.\r\nNotice that walls are only built on the shared boundary of two different cells.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: grid = \r\n[[1,1,1,0,0,0,0,0,0],\r\n [1,0,1,0,1,1,1,1,1],\r\n [1,1,1,0,0,0,0,0,0]]\r\nOutput: 13\r\nExplanation: The region on the left only builds two new walls.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe number of rows and columns of grid will each be in the range [1, 50].\r\nEach grid[i][j] will be either 0 or 1.\r\nThroughout the described process, there is always a contiguous viral region that will infect strictly more uncontaminated squares in the next round.",
        "level": 3,
        "paid_only": false,
        "question_id": 750,
        "slug": "contain-virus",
        "tags": [],
        "title": "Contain Virus",
        "url": "https://leetcode.com/problems/contain-virus/description/"
    },
    "751": {
        "description": "Given a start IP address `ip` and a number of ips we need to cover `n`, return\na representation of the range as a list (of smallest possible length) of CIDR\nblocks.\n\nA CIDR block is a string consisting of an IP, followed by a slash, and then\nthe prefix length. For example: \"123.45.67.89/20\". That prefix length \"20\"\nrepresents the number of common prefix bits in the specified range.\n\n**Example 1:**\n\n\n    **Input:** ip = \"255.0.0.7\", n = 10\r**Output:** [\"255.0.0.7/32\",\"255.0.0.8/29\",\"255.0.0.16/32\"]\r**Explanation:**\rThe initial ip address, when converted to binary, looks like this (spaces added for clarity):\r255.0.0.7 - > 11111111 00000000 00000000 00000111\rThe address \"255.0.0.7/32\" specifies all addresses with a common prefix of 32 bits to the given address,\rie. just this one address.\r\rThe address \"255.0.0.8/29\" specifies all addresses with a common prefix of 29 bits to the given address:\r255.0.0.8 -> 11111111 00000000 00000000 00001000\rAddresses with common prefix of 29 bits are:\r11111111 00000000 00000000 00001000\r11111111 00000000 00000000 00001001\r11111111 00000000 00000000 00001010\r11111111 00000000 00000000 00001011\r11111111 00000000 00000000 00001100\r11111111 00000000 00000000 00001101\r11111111 00000000 00000000 00001110\r11111111 00000000 00000000 00001111\r\rThe address \"255.0.0.16/32\" specifies all addresses with a common prefix of 32 bits to the given address,\rie. just 11111111 00000000 00000000 00010000.\r\rIn total, the answer specifies the range of 10 ips starting with the address 255.0.0.7 .\r\rThere were other representations, such as:\r[\"255.0.0.7/32\",\"255.0.0.8/30\", \"255.0.0.12/30\", \"255.0.0.16/32\"],\rbut our answer was the shortest possible.\r\rAlso note that a representation beginning with say, \"255.0.0.7/30\" would be incorrect,\rbecause it includes addresses like 255.0.0.4 = 11111111 00000000 00000000 00000100 \rthat are outside the specified range.\r\n\n**Note:**\n    1. `ip` will be a valid IPv4 address.\n    2. Every implied address `ip + x` (for `x < n`) will be a valid IPv4 address.\n    3. `n` will be an integer in the range `[1, 1000]`.",
        "level": 2,
        "paid_only": true,
        "question_id": 751,
        "slug": "number-of-corner-rectangles",
        "tags": [],
        "title": "Number Of Corner Rectangles",
        "url": "https://leetcode.com/problems/number-of-corner-rectangles/description/"
    },
    "753": {
        "description": "You have a lock in front of you with 4 circular wheels.  Each wheel has 10 slots: '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'.  The wheels can rotate freely and wrap around: for example we can turn '9' to be '0', or '0' to be '9'.  Each move consists of turning one wheel one slot.\r\n\r\nThe lock initially starts at '0000', a string representing the state of the 4 wheels.\r\n\r\nYou are given a list of deadends dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.\r\n\r\nGiven a target representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.\r\n\r\n\r\nExample 1:\r\n\r\nInput: deadends = [\"0201\",\"0101\",\"0102\",\"1212\",\"2002\"], target = \"0202\"\r\nOutput: 6\r\nExplanation:\r\nA sequence of valid moves would be \"0000\" -> \"1000\" -> \"1100\" -> \"1200\" -> \"1201\" -> \"1202\" -> \"0202\".\r\nNote that a sequence like \"0000\" -> \"0001\" -> \"0002\" -> \"0102\" -> \"0202\" would be invalid,\r\nbecause the wheels of the lock become stuck after the display becomes the dead end \"0102\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: deadends = [\"8888\"], target = \"0009\"\r\nOutput: 1\r\nExplanation:\r\nWe can turn the last wheel in reverse to move from \"0000\" -> \"0009\".\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: deadends = [\"8887\",\"8889\",\"8878\",\"8898\",\"8788\",\"8988\",\"7888\",\"9888\"], target = \"8888\"\r\nOutput: -1\r\nExplanation:\r\nWe can't reach the target without getting stuck.\r\n\r\n\r\n\r\nExample 4:\r\n\r\nInput: deadends = [\"0000\"], target = \"8888\"\r\nOutput: -1\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of deadends will be in the range [1, 500].\r\ntarget will not be in the list deadends.\r\nEvery string in deadends and the string target will be a string of 4 digits from the 10,000 possibilities '0000' to '9999'.",
        "level": 2,
        "paid_only": false,
        "question_id": 753,
        "slug": "open-the-lock",
        "tags": [],
        "title": "Open the Lock",
        "url": "https://leetcode.com/problems/open-the-lock/description/"
    },
    "754": {
        "description": "There is a box protected by a password.  The password is n digits, where each letter can be one of the first k digits 0, 1, ..., k-1.\r\n\r\nYou can keep inputting the password, the password will automatically be matched against the last n digits entered.\r\n\r\nFor example, assuming the password is \"345\", I can open it when I type \"012345\", but I enter a total of 6 digits.\r\n\r\nPlease return any string of minimum length that is guaranteed to open the box after the entire string is inputted.\r\n\r\n\r\nExample 1:\r\n\r\nInput: n = 1, k = 2\r\nOutput: \"01\"\r\nNote: \"10\" will be accepted too.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: n = 2, k = 2\r\nOutput: \"00110\"\r\nNote: \"01100\", \"10011\", \"11001\" will be accepted too.\r\n\r\n\r\n\r\nNote:\r\n\r\nn will be in the range [1, 4].\r\nk will be in the range [1, 10].\r\nk^n will be at most 4096.",
        "level": 3,
        "paid_only": false,
        "question_id": 754,
        "slug": "cracking-the-safe",
        "tags": [],
        "title": "Cracking the Safe",
        "url": "https://leetcode.com/problems/cracking-the-safe/description/"
    },
    "755": {
        "description": "You are standing at position 0 on an infinite number line.  There is a goal at position target.\r\n\r\nOn each move, you can either go left or right.  During the n-th move (starting from 1), you take n steps.\r\n\r\nReturn the minimum number of steps required to reach the destination.\r\n\r\n\r\nExample 1:\r\n\r\nInput: target = 3\r\nOutput: 2\r\nExplanation:\r\nOn the first move we step from 0 to 1.\r\nOn the second step we step from 1 to 3.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: target = 2\r\nOutput: 3\r\nExplanation:\r\nOn the first move we step from 0 to 1.\r\nOn the second move we step  from 1 to -1.\r\nOn the third move we step from -1 to 2.\r\n\r\n\r\n\r\nNote:\r\ntarget will be a non-zero integer in the range [-10^9, 10^9].",
        "level": 2,
        "paid_only": false,
        "question_id": 755,
        "slug": "reach-a-number",
        "tags": [],
        "title": "Reach a Number",
        "url": "https://leetcode.com/problems/reach-a-number/description/"
    },
    "757": {
        "description": "We are stacking blocks to form a pyramid.  Each block has a color which is a one letter string, like `'Z'`.\r\n\r\nFor every block of color `C` we place not in the bottom row, we are placing it on top of a left block of color `A` and right block of color `B`.  We are allowed to place the block there only if `(A, B, C)` is an allowed triple.\r\n\r\nWe start with a bottom row of bottom, represented as a single string.  We also start with a list of allowed triples allowed.  Each allowed triple is represented as a string of length 3.\r\n\r\nReturn true if we can build the pyramid all the way to the top, otherwise false.\r\n\r\n\r\nExample 1:\r\n\r\nInput: bottom = \"XYZ\", allowed = [\"XYD\", \"YZE\", \"DEA\", \"FFF\"]\r\nOutput: true\r\nExplanation:\r\nWe can stack the pyramid like this:\r\n    A\r\n   / \\\r\n  D   E\r\n / \\ / \\\r\nX   Y   Z\r\n\r\nThis works because ('X', 'Y', 'D'), ('Y', 'Z', 'E'), and ('D', 'E', 'A') are allowed triples.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: bottom = \"XXYX\", allowed = [\"XXX\", \"XXY\", \"XYX\", \"XYY\", \"YXZ\"]\r\nOutput: false\r\nExplanation:\r\nWe can't stack the pyramid to the top.\r\nNote that there could be allowed triples (A, B, C) and (A, B, D) with C != D.\r\n\r\n\r\n\r\nNote:\r\n\r\nbottom will be a string with length in range [2, 8].\r\nallowed will have length in range [0, 200].\r\nLetters in all strings will be chosen from the set {'A', 'B', 'C', 'D', 'E', 'F', 'G'}.",
        "level": 2,
        "paid_only": false,
        "question_id": 757,
        "slug": "pyramid-transition-matrix",
        "tags": [],
        "title": "Pyramid Transition Matrix",
        "url": "https://leetcode.com/problems/pyramid-transition-matrix/description/"
    },
    "758": {
        "description": "Given a set of keywords `words` and a string `S`, make all appearances of all\nkeywords in `S` bold. Any letters between `<b>` and `</b>` tags become bold.\n\nThe returned string should use the least number of tags possible, and of\ncourse the tags should form a valid combination.\n\nFor example, given that `words = [\"ab\", \"bc\"]` and `S = \"aabcd\"`, we should\nreturn `\"a<b>abc</b>d\"`. Note that returning `\"a<b>a<b>b</b>c</b>d\"` would use\nmore tags, so it is incorrect.\n\nNote:\n\n  1. `words` has length in range `[0, 50]`.\n  2. `words[i]` has length in range `[1, 10]`.\n  3. `S` has length in range `[0, 500]`.\n  4. All characters in `words[i]` and `S` are lowercase letters.",
        "level": 2,
        "paid_only": true,
        "question_id": 758,
        "slug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
        "tags": [],
        "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
        "url": "https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/description/"
    },
    "759": {
        "description": "An integer interval [a, b] (for integers a < b) is a set of all consecutive integers from a to b, including a and b.\r\n\r\nFind the minimum size of a set S such that for every integer interval A in intervals, the intersection of S with A has size at least 2.\r\n\r\n\r\nExample 1:\r\n\r\nInput: intervals = [[1, 3], [1, 4], [2, 5], [3, 5]]\r\nOutput: 3\r\nExplanation:\r\nConsider the set S = {2, 3, 4}.  For each interval, there are at least 2 elements from S in the interval.\r\nAlso, there isn't a smaller size set that fulfills the above condition.\r\nThus, we output the size of this set, which is 3.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: intervals = [[1, 2], [2, 3], [2, 4], [4, 5]]\r\nOutput: 5\r\nExplanation:\r\nAn example of a minimum sized set is {1, 2, 3, 4, 5}.\r\n\r\n\r\n\r\nNote:\r\nintervals will have length in range [1, 3000].\r\nintervals[i] will have length 2, representing some integer interval.\r\nintervals[i][j] will be an integer in [0, 10^8].",
        "level": 3,
        "paid_only": false,
        "question_id": 759,
        "slug": "set-intersection-size-at-least-two",
        "tags": [],
        "title": "Set Intersection Size At Least Two",
        "url": "https://leetcode.com/problems/set-intersection-size-at-least-two/description/"
    },
    "760": {
        "description": "Given two lists `A `and `B`, and `B` is an anagram of `A`. `B` is an anagram\nof `A` means `B` is made by randomizing the order of the elements in `A`.\n\nWe want to find an  _index mapping_  `P`, from `A` to `B`. A mapping `P[i] =\nj` means the `i`th element in `A` appears in `B` at index `j`.\n\nThese lists `A` and `B` may contain duplicates. If there are multiple answers,\noutput any of them.\n\nFor example, given\n\n\n\n    A = [12, 28, 46, 32, 50]\rB = [50, 12, 32, 46, 28]\r\n\n\n\nWe should return\n\n\n\n    [1, 4, 3, 2, 0]\r\n\nas `P[0] = 1` because the `0`th element of `A` appears at `B[1]`, and `P[1] =\n4` because the `1`st element of `A`appears at `B[4]`, and so on.\n\n\n\nNote:\n\n  1. `A, B` have equal lengths in range `[1, 100]`.\n  2. `A[i], B[i]` are integers in range `[0, 10^5]`.",
        "level": 1,
        "paid_only": true,
        "question_id": 760,
        "slug": "bold-words-in-string",
        "tags": [],
        "title": "Bold Words in String",
        "url": "https://leetcode.com/problems/bold-words-in-string/description/"
    },
    "763": {
        "description": "Special binary strings are binary strings with the following two properties:\r\n\r\nThe number of 0's is equal to the number of 1's.\r\nEvery prefix of the binary string has at least as many 1's as 0's.\r\n\r\nGiven a special string S, a move consists of choosing two consecutive, non-empty, special substrings of S, and swapping them.  (Two strings are consecutive if the last character of the first string is exactly one index before the first character of the second string.)\r\n\r\nAt the end of any number of moves, what is the lexicographically largest resulting string possible?\r\n\r\n\r\nExample 1:\r\n\r\nInput: S = \"11011000\"\r\nOutput: \"11100100\"\r\nExplanation:\r\nThe strings \"10\" [occuring at S[1]] and \"1100\" [at S[3]] are swapped.\r\nThis is the lexicographically largest string possible after some number of swaps.\r\n\r\n\r\n\r\nNote:\r\nS has length at most 50.\r\nS is guaranteed to be a special binary string as defined above.",
        "level": 3,
        "paid_only": false,
        "question_id": 763,
        "slug": "special-binary-string",
        "tags": [],
        "title": "Special Binary String",
        "url": "https://leetcode.com/problems/special-binary-string/description/"
    },
    "764": {
        "description": "Given an n-ary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\r\n\r\nFor example, given a 3-ary tree:\r\n \r\n\r\n\r\n \r\n\r\nWe should return its level order traversal:\r\n\r\n \r\n\r\n \r\n\r\n\r\n[\r\n     [1],\r\n     [3,2,4],\r\n     [5,6]\r\n]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tThe depth of the tree is at most 1000.\r\n\tThe total number of nodes is at most 5000.\r\n\r\n\r\n ",
        "level": 1,
        "paid_only": false,
        "question_id": 764,
        "slug": "n-ary-tree-level-order-traversal",
        "tags": [],
        "title": "N-ary Tree Level Order Traversal",
        "url": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/description/"
    },
    "766": {
        "description": "You are given a doubly linked list which in addition to the next and previous pointers, it could have a child pointer, which may or may not point to a separate doubly linked list. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure, as shown in the example below.\r\n\r\nFlatten the list so that all the nodes appear in a single-level, doubly linked list. You are given the head of the first level of the list.\r\n\r\nExample:\r\n\r\n\r\nInput:\r\n 1---2---3---4---5---6--NULL\r\n         |\r\n         7---8---9---10--NULL\r\n             |\r\n             11--12--NULL\r\n\r\nOutput:\r\n1-2-3-7-8-11-12-9-10-4-5-6-NULL\r\n\r\n\r\nExplanation for the above example:\r\n\r\nGiven the following multilevel doubly linked list:\r\n\r\n\r\n\r\nWe should return the following flattened doubly linked list:",
        "level": 2,
        "paid_only": false,
        "question_id": 766,
        "slug": "flatten-a-multilevel-doubly-linked-list",
        "tags": [],
        "title": "Flatten a Multilevel Doubly Linked List",
        "url": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/description/"
    },
    "767": {
        "description": "Given two integers L and R, find the count of numbers in the range [L, R] (inclusive) having a prime number of set bits in their binary representation.\r\n\r\n(Recall that the number of set bits an integer has is the number of 1s present when written in binary.  For example, 21 written in binary is 10101 which has 3 set bits.  Also, 1 is not a prime.)\r\n\r\n\r\nExample 1:\r\nInput: L = 6, R = 10\r\nOutput: 4\r\nExplanation:\r\n6 -> 110 (2 set bits, 2 is prime)\r\n7 -> 111 (3 set bits, 3 is prime)\r\n9 -> 1001 (2 set bits , 2 is prime)\r\n10->1010 (2 set bits , 2 is prime)\r\n\r\n\r\nExample 2:\r\nInput: L = 10, R = 15\r\nOutput: 5\r\nExplanation:\r\n10 -> 1010 (2 set bits, 2 is prime)\r\n11 -> 1011 (3 set bits, 3 is prime)\r\n12 -> 1100 (2 set bits, 2 is prime)\r\n13 -> 1101 (3 set bits, 3 is prime)\r\n14 -> 1110 (3 set bits, 3 is prime)\r\n15 -> 1111 (4 set bits, 4 is not prime)\r\n\r\n\r\nNote:\r\nL, R will be integers L <= R in the range [1, 10^6].\r\nR - L will be at most 10000.",
        "level": 1,
        "paid_only": false,
        "question_id": 767,
        "slug": "prime-number-of-set-bits-in-binary-representation",
        "tags": [],
        "title": "Prime Number of Set Bits in Binary Representation",
        "url": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/description/"
    },
    "768": {
        "description": "A string S of lowercase letters is given.  We want to partition this string into as many parts as possible so that each letter appears in at most one part, and return a list of integers representing the size of these parts.\r\n\r\n\r\nExample 1:\r\n\r\nInput: S = \"ababcbacadefegdehijhklij\"\r\nOutput: [9,7,8]\r\nExplanation:\r\nThe partition is \"ababcbaca\", \"defegde\", \"hijhklij\".\r\nThis is a partition so that each letter appears in at most one part.\r\nA partition like \"ababcbacadefegde\", \"hijhklij\" is incorrect, because it splits S into less parts.\r\n\r\n\r\n\r\nNote:\r\nS will have length in range [1, 500].\r\nS will consist of lowercase letters ('a' to 'z') only.",
        "level": 2,
        "paid_only": false,
        "question_id": 768,
        "slug": "partition-labels",
        "tags": [],
        "title": "Partition Labels",
        "url": "https://leetcode.com/problems/partition-labels/description/"
    },
    "769": {
        "description": "In a 2D grid from (0, 0) to (N-1, N-1), every cell contains a 1, except those cells in the given list mines which are 0.  What is the largest axis-aligned plus sign of 1s contained in the grid?  Return the order of the plus sign.  If there is none, return 0.\r\n\r\nAn \"axis-aligned plus sign of 1s of order k\" has some center grid[x][y] = 1 along with 4 arms of length k-1 going up, down, left, and right, and made of 1s.  This is demonstrated in the diagrams below.  Note that there could be 0s or 1s beyond the arms of the plus sign, only the relevant area of the plus sign is checked for 1s.\r\n\r\n\r\nExamples of Axis-Aligned Plus Signs of Order k:\r\nOrder 1:\r\n000\r\n010\r\n000\r\n\r\nOrder 2:\r\n00000\r\n00100\r\n01110\r\n00100\r\n00000\r\n\r\nOrder 3:\r\n0000000\r\n0001000\r\n0001000\r\n0111110\r\n0001000\r\n0001000\r\n0000000\r\n\r\n\r\nExample 1:\r\nInput: N = 5, mines = [[4, 2]]\r\nOutput: 2\r\nExplanation:\r\n11111\r\n11111\r\n11111\r\n11111\r\n11011\r\nIn the above grid, the largest plus sign can only be order 2.  One of them is marked in bold.\r\n\r\n\r\nExample 2:\r\nInput: N = 2, mines = []\r\nOutput: 1\r\nExplanation:\r\nThere is no plus sign of order 2, but there is of order 1.\r\n\r\n\r\nExample 3:\r\nInput: N = 1, mines = [[0, 0]]\r\nOutput: 0\r\nExplanation:\r\nThere is no plus sign, so return 0.\r\n\r\n\r\nNote:\r\nN will be an integer in the range [1, 500].\r\nmines will have length at most 5000.\r\nmines[i] will be length 2 and consist of integers in the range [0, N-1].\r\n(Additionally, programs submitted in C, C++, or C# will be judged with a slightly smaller time limit.)",
        "level": 2,
        "paid_only": false,
        "question_id": 769,
        "slug": "largest-plus-sign",
        "tags": [],
        "title": "Largest Plus Sign",
        "url": "https://leetcode.com/problems/largest-plus-sign/description/"
    },
    "770": {
        "description": "N couples sit in 2N seats arranged in a row and want to hold hands.  We want to know the minimum number of swaps so that every couple is sitting side by side.  A swap consists of choosing any two people, then they stand up and switch seats. \r\n\r\nThe people and seats are represented by an integer from 0 to 2N-1, the couples are numbered in order, the first couple being (0, 1), the second couple being (2, 3), and so on with the last couple being (2N-2, 2N-1).\r\n\r\nThe couples' initial seating is given by row[i] being the value of the person who is initially sitting in the i-th seat.\r\n\r\nExample 1:\r\nInput: row = [0, 2, 1, 3]\r\nOutput: 1\r\nExplanation: We only need to swap the second (row[1]) and third (row[2]) person.\r\n\r\n\r\nExample 2:\r\nInput: row = [3, 2, 0, 1]\r\nOutput: 0\r\nExplanation: All couples are already seated side by side.\r\n\r\n\r\n\r\nNote:\r\n \r\n len(row) is even and in the range of [4, 60].\r\n row is guaranteed to be a permutation of 0...len(row)-1.",
        "level": 3,
        "paid_only": false,
        "question_id": 770,
        "slug": "couples-holding-hands",
        "tags": [],
        "title": "Couples Holding Hands",
        "url": "https://leetcode.com/problems/couples-holding-hands/description/"
    },
    "772": {
        "description": "We want to use quad trees to store an N x N boolean grid. Each cell in the grid can only be true or false. The root node represents the whole grid. For each node, it will be subdivided into four children nodes until the values in the region it represents are all the same.\r\n\r\nEach node has another two boolean attributes : isLeaf and val. isLeaf is true if and only if the node is a leaf node. The val attribute for a leaf node contains the value of the region it represents.\r\n\r\nYour task is to use a quad tree to represent a given grid. The following example may help you understand the problem better:\r\n\r\nGiven the 8 x 8 grid below, we want to construct the corresponding quad tree:\r\n\r\n\r\n\r\nIt can be divided according to the definition above:\r\n\r\n\r\n\r\n \r\n\r\nThe corresponding quad tree should be as following, where each node is represented as a (isLeaf, val) pair.\r\n\r\nFor the non-leaf nodes, val can be arbitrary, so it is represented as *.\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\tN is less than 1000 and guaranteened to be a power of 2.\r\n\tIf you want to know more about the quad tree, you can refer to its wiki.",
        "level": 1,
        "paid_only": false,
        "question_id": 772,
        "slug": "construct-quad-tree",
        "tags": [],
        "title": "Construct Quad Tree",
        "url": "https://leetcode.com/problems/construct-quad-tree/description/"
    },
    "773": {
        "description": "A quadtree is a tree data in which each internal node has exactly four children: topLeft, topRight, bottomLeft and bottomRight. Quad trees are often used to partition a two-dimensional space by recursively subdividing it into four quadrants or regions.\r\n\r\nWe want to store True/False information in our quad tree. The quad tree is used to represent a N * N boolean grid. For each node, it will be subdivided into four children nodes until the values in the region it represents are all the same. Each node has another two boolean attributes : isLeaf and val. isLeaf is true if and only if the node is a leaf node. The val attribute for a leaf node contains the value of the region it represents.\r\n\r\nFor example, below are two quad trees A and B:\r\n\r\n\r\nA:\r\n+-------+-------+   T: true\r\n|       |       |   F: false\r\n|   T   |   T   |\r\n|       |       |\r\n+-------+-------+\r\n|       |       |\r\n|   F   |   F   |\r\n|       |       |\r\n+-------+-------+\r\ntopLeft: T\r\ntopRight: T\r\nbottomLeft: F\r\nbottomRight: F\r\n\r\nB:               \r\n+-------+---+---+\r\n|       | F | F |\r\n|   T   +---+---+\r\n|       | T | T |\r\n+-------+---+---+\r\n|       |       |\r\n|   T   |   F   |\r\n|       |       |\r\n+-------+-------+\r\ntopLeft: T\r\ntopRight:\r\n     topLeft: F\r\n     topRight: F\r\n     bottomLeft: T\r\n     bottomRight: T\r\nbottomLeft: T\r\nbottomRight: F\r\n\r\n\r\n \r\n\r\nYour task is to implement a function that will take two quadtrees and return a quadtree that represents the logical OR (or union) of the two trees.\r\n\r\n\r\nA:                 B:                 C (A or B):\r\n+-------+-------+  +-------+---+---+  +-------+-------+\r\n|       |       |  |       | F | F |  |       |       |\r\n|   T   |   T   |  |  T    +---+---+  |   T   |   T   |\r\n|       |       |  |       | T | T |  |       |       |\r\n+-------+-------+  +-------+---+---+  +-------+-------+\r\n|       |       |  |       |       |  |       |       |\r\n|   F   |   F   |  |   T   |   F   |  |   T   |   F   |\r\n|       |       |  |       |       |  |       |       |\r\n+-------+-------+  +-------+-------+  +-------+-------+\r\n\r\n\r\nNote:\r\n\r\n\r\n\tN is guaranteened to be a power of 2.\r\n\tIf you want to know more about the quad tree, you can refer to its wiki.\r\n\tThe logic OR operation is define as this: \"A or B\" is true if A is true, or if B is true, or if both A and B are true.",
        "level": 1,
        "paid_only": false,
        "question_id": 773,
        "slug": "quad-tree-intersection",
        "tags": [],
        "title": "Quad Tree Intersection",
        "url": "https://leetcode.com/problems/quad-tree-intersection/description/"
    },
    "774": {
        "description": "Given a n-ary tree, find its maximum depth.\r\n\r\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\r\n\r\nFor example, given a 3-ary tree:\r\n \r\n\r\n\r\n \r\n\r\nWe should return its max depth, which is 3.\r\n\r\nNote:\r\n\r\n\r\n\tThe depth of the tree is at most 1000.\r\n\tThe total number of nodes is at most 5000.\r\n\r\n\r\n ",
        "level": 1,
        "paid_only": false,
        "question_id": 774,
        "slug": "maximum-depth-of-n-ary-tree",
        "tags": [],
        "title": "Maximum Depth of N-ary Tree",
        "url": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree/description/"
    },
    "775": {
        "description": "Given an n-ary tree, return the preorder traversal of its nodes' values.\r\n \r\n\r\nFor example, given a 3-ary tree:\r\n\r\n\r\n \r\n\r\nReturn its preorder traversal as: [1,3,5,6,2,4].\r\n \r\n\r\nNote: Recursive solution is trivial, could you do it iteratively?",
        "level": 1,
        "paid_only": false,
        "question_id": 775,
        "slug": "n-ary-tree-preorder-traversal",
        "tags": [],
        "title": "N-ary Tree Preorder Traversal",
        "url": "https://leetcode.com/problems/n-ary-tree-preorder-traversal/description/"
    },
    "776": {
        "description": "Given an n-ary tree, return the postorder traversal of its nodes' values.\r\n \r\n\r\nFor example, given a 3-ary tree:\r\n\r\n\r\n \r\n\r\nReturn its postorder traversal as: [5,6,3,2,4,1].\r\n \r\n\r\nNote: Recursive solution is trivial, could you do it iteratively?",
        "level": 1,
        "paid_only": false,
        "question_id": 776,
        "slug": "n-ary-tree-postorder-traversal",
        "tags": [],
        "title": "N-ary Tree Postorder Traversal",
        "url": "https://leetcode.com/problems/n-ary-tree-postorder-traversal/description/"
    },
    "777": {
        "description": "A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same element.\r\n\r\nNow given an M x N matrix, return True if and only if the matrix is Toeplitz.\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput:\r\nmatrix = [\r\n  [1,2,3,4],\r\n  [5,1,2,3],\r\n  [9,5,1,2]\r\n]\r\nOutput: True\r\nExplanation:\r\nIn the above grid, the diagonals are:\r\n\"[9]\", \"[5, 5]\", \"[1, 1, 1]\", \"[2, 2, 2]\", \"[3, 3]\", \"[4]\".\r\nIn each diagonal all elements are the same, so the answer is True.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput:\r\nmatrix = [\r\n  [1,2],\r\n  [2,2]\r\n]\r\nOutput: False\r\nExplanation:\r\nThe diagonal \"[1, 2]\" has different elements.\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\tmatrix will be a 2D array of integers.\r\n\tmatrix will have a number of rows and columns in range [1, 20].\r\n\tmatrix[i][j] will be integers in range [0, 99].\r\n\r\n\r\n\r\nFollow up:\r\n\r\n\r\n\tWhat if the matrix is stored on disk, and the memory is limited such that you can only load at most one row of the matrix into the memory at once?\r\n\tWhat if the matrix is so large that you can only load up a partial row into the memory at once?",
        "level": 1,
        "paid_only": false,
        "question_id": 777,
        "slug": "toeplitz-matrix",
        "tags": [],
        "title": "Toeplitz Matrix",
        "url": "https://leetcode.com/problems/toeplitz-matrix/description/"
    },
    "778": {
        "description": "Given a string S, check if the letters can be rearranged so that two characters that are adjacent to each other are not the same.\r\n\r\nIf possible, output any possible result.  If not possible, return the empty string.\r\n\r\nExample 1:\r\n\r\n\r\nInput: S = \"aab\"\r\nOutput: \"aba\"\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: S = \"aaab\"\r\nOutput: \"\"\r\n\r\n\r\nNote:\r\n\r\n\r\n\tS will consist of lowercase letters and have length in range [1, 500].\r\n\r\n\r\n ",
        "level": 2,
        "paid_only": false,
        "question_id": 778,
        "slug": "reorganize-string",
        "tags": [],
        "title": "Reorganize String",
        "url": "https://leetcode.com/problems/reorganize-string/description/"
    },
    "779": {
        "description": "This question is the same as \"Max Chunks to Make Sorted\" except the integers of the given array are not necessarily distinct, the input array could be up to length 2000, and the elements could be up to 10**8.\r\n\r\n\r\n\r\nGiven an array arr of integers (not necessarily distinct), we split the array into some number of \"chunks\" (partitions), and individually sort each chunk.  After concatenating them, the result equals the sorted array.\r\n\r\nWhat is the most number of chunks we could have made?\r\n\r\nExample 1:\r\n\r\n\r\nInput: arr = [5,4,3,2,1]\r\nOutput: 1\r\nExplanation:\r\nSplitting into two or more chunks will not return the required result.\r\nFor example, splitting into [5, 4], [3, 2, 1] will result in [4, 5, 1, 2, 3], which isn't sorted.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: arr = [2,1,3,4,4]\r\nOutput: 4\r\nExplanation:\r\nWe can split into two chunks, such as [2, 1], [3, 4, 4].\r\nHowever, splitting into [2, 1], [3], [4], [4] is the highest number of chunks possible.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tarr will have length in range [1, 2000].\r\n\tarr[i] will be an integer in range [0, 10**8].\r\n\r\n\r\n ",
        "level": 3,
        "paid_only": false,
        "question_id": 779,
        "slug": "max-chunks-to-make-sorted-ii",
        "tags": [],
        "title": "Max Chunks To Make Sorted II",
        "url": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii/description/"
    },
    "780": {
        "description": "Given an array arr that is a permutation of [0, 1, ..., arr.length - 1], we split the array into some number of \"chunks\" (partitions), and individually sort each chunk.  After concatenating them, the result equals the sorted array.\r\n\r\nWhat is the most number of chunks we could have made?\r\n\r\nExample 1:\r\n\r\n\r\nInput: arr = [4,3,2,1,0]\r\nOutput: 1\r\nExplanation:\r\nSplitting into two or more chunks will not return the required result.\r\nFor example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn't sorted.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: arr = [1,0,2,3,4]\r\nOutput: 4\r\nExplanation:\r\nWe can split into two chunks, such as [1, 0], [2, 3, 4].\r\nHowever, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tarr will have length in range [1, 10].\r\n\tarr[i] will be a permutation of [0, 1, ..., arr.length - 1].\r\n\r\n\r\n ",
        "level": 2,
        "paid_only": false,
        "question_id": 780,
        "slug": "max-chunks-to-make-sorted",
        "tags": [],
        "title": "Max Chunks To Make Sorted",
        "url": "https://leetcode.com/problems/max-chunks-to-make-sorted/description/"
    },
    "781": {
        "description": "Given an expression such as expression = \"e + 8 - a + 5\" and an evaluation map such as {\"e\": 1} (given in terms of evalvars = [\"e\"] and evalints = [1]), return a list of tokens representing the simplified expression, such as [\"-1*a\",\"14\"]\r\n\r\n\r\n\tAn expression alternates chunks and symbols, with a space separating each chunk and symbol.\r\n\tA chunk is either an expression in parentheses, a variable, or a non-negative integer.\r\n\tA variable is a string of lowercase letters (not including digits.) Note that variables can be multiple letters, and note that variables never have a leading coefficient or unary operator like \"2x\" or \"-x\".\r\n\r\n\r\nExpressions are evaluated in the usual order: brackets first, then multiplication, then addition and subtraction. For example, expression = \"1 + 2 * 3\" has an answer of [\"7\"].\r\n\r\nThe format of the output is as follows:\r\n\r\n\r\n\tFor each term of free variables with non-zero coefficient, we write the free variables within a term in sorted order lexicographically. For example, we would never write a term like \"b*a*c\", only \"a*b*c\".\r\n\tTerms have degree equal to the number of free variables being multiplied, counting multiplicity. (For example, \"a*a*b*c\" has degree 4.) We write the largest degree terms of our answer first, breaking ties by lexicographic order ignoring the leading coefficient of the term.\r\n\tThe leading coefficient of the term is placed directly to the left with an asterisk separating it from the variables (if they exist.)  A leading coefficient of 1 is still printed.\r\n\tAn example of a well formatted answer is [\"-2*a*a*a\", \"3*a*a*b\", \"3*b*b\", \"4*a\", \"5*c\", \"-6\"] \r\n\tTerms (including constant terms) with coefficient 0 are not included.  For example, an expression of \"0\" has an output of [].\r\n\r\n\r\nExamples:\r\n\r\n\r\nInput: expression = \"e + 8 - a + 5\", evalvars = [\"e\"], evalints = [1]\r\nOutput: [\"-1*a\",\"14\"]\r\n\r\nInput: expression = \"e - 8 + temperature - pressure\",\r\nevalvars = [\"e\", \"temperature\"], evalints = [1, 12]\r\nOutput: [\"-1*pressure\",\"5\"]\r\n\r\nInput: expression = \"(e + 8) * (e - 8)\", evalvars = [], evalints = []\r\nOutput: [\"1*e*e\",\"-64\"]\r\n\r\nInput: expression = \"7 - 7\", evalvars = [], evalints = []\r\nOutput: []\r\n\r\nInput: expression = \"a * b * c + b * a * c * 4\", evalvars = [], evalints = []\r\nOutput: [\"5*a*b*c\"]\r\n\r\nInput: expression = \"((a - b) * (b - c) + (c - a)) * ((a - b) + (b - c) * (c - a))\",\r\nevalvars = [], evalints = []\r\nOutput: [\"-1*a*a*b*b\",\"2*a*a*b*c\",\"-1*a*a*c*c\",\"1*a*b*b*b\",\"-1*a*b*b*c\",\"-1*a*b*c*c\",\"1*a*c*c*c\",\"-1*b*b*b*c\",\"2*b*b*c*c\",\"-1*b*c*c*c\",\"2*a*a*b\",\"-2*a*a*c\",\"-2*a*b*b\",\"2*a*c*c\",\"1*b*b*b\",\"-1*b*b*c\",\"1*b*c*c\",\"-1*c*c*c\",\"-1*a*a\",\"1*a*b\",\"1*a*c\",\"-1*b*c\"]\r\n\r\n\r\nNote:\r\n\r\n\r\n\texpression will have length in range [1, 250].\r\n\tevalvars, evalints will have equal lengths in range [0, 100].",
        "level": 3,
        "paid_only": false,
        "question_id": 781,
        "slug": "basic-calculator-iv",
        "tags": [],
        "title": "Basic Calculator IV",
        "url": "https://leetcode.com/problems/basic-calculator-iv/description/"
    },
    "782": {
        "description": "You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.\r\n\r\nThe letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so \"a\" is considered a different type of stone from \"A\".\r\n\r\nExample 1:\r\n\r\n\r\nInput: J = \"aA\", S = \"aAAbbbb\"\r\nOutput: 3\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: J = \"z\", S = \"ZZ\"\r\nOutput: 0\r\n\r\n\r\nNote:\r\n\r\n\r\n\tS and J will consist of letters and have length at most 50.\r\n\tThe characters in J are distinct.",
        "level": 1,
        "paid_only": false,
        "question_id": 782,
        "slug": "jewels-and-stones",
        "tags": [],
        "title": "Jewels and Stones",
        "url": "https://leetcode.com/problems/jewels-and-stones/description/"
    },
    "783": {
        "description": "Given the root node of a binary search tree (BST) and a value. You need to find the node in the BST that the node's value equals the given value. Return the subtree rooted with that node. If such node doesn't exist, you should return NULL.\r\n\r\nFor example, \r\n\r\n\r\nGiven the tree:\r\n        4\r\n       / \\\r\n      2   7\r\n     / \\\r\n    1   3\r\n\r\nAnd the value to search: 2\r\n\r\n\r\nYou should return this subtree:\r\n\r\n\r\n      2     \r\n     / \\   \r\n    1   3\r\n\r\n\r\nIn the example above, if we want to search the value 5, since there is no node with value 5, we should return NULL.\r\n\r\nNote that an empty tree is represented by NULL, therefore you would see the expected output (serialized tree format) as [], not null.",
        "level": 1,
        "paid_only": false,
        "question_id": 783,
        "slug": "search-in-a-binary-search-tree",
        "tags": [],
        "title": "Search in a Binary Search Tree",
        "url": "https://leetcode.com/problems/search-in-a-binary-search-tree/description/"
    },
    "784": {
        "description": "Given the root node of a binary search tree (BST) and a value to be inserted into the tree, insert the value into the BST. Return the root node of the BST after the insertion. It is guaranteed that the new value does not exist in the original BST.\r\n\r\nNote that there may exist multiple valid ways for the insertion, as long as the tree remains a BST after insertion. You can return any of them.\r\n\r\nFor example, \r\n\r\n\r\nGiven the tree:\r\n        4\r\n       / \\\r\n      2   7\r\n     / \\\r\n    1   3\r\nAnd the value to insert: 5\r\n\r\n\r\nYou can return this binary search tree:\r\n\r\n\r\n         4\r\n       /   \\\r\n      2     7\r\n     / \\   /\r\n    1   3 5\r\n\r\n\r\nThis tree is also valid:\r\n\r\n\r\n         5\r\n       /   \\\r\n      2     7\r\n     / \\   \r\n    1   3\r\n         \\\r\n          4",
        "level": 2,
        "paid_only": false,
        "question_id": 784,
        "slug": "insert-into-a-binary-search-tree",
        "tags": [],
        "title": "Insert into a Binary Search Tree",
        "url": "https://leetcode.com/problems/insert-into-a-binary-search-tree/description/"
    },
    "787": {
        "description": "On a 2x3 board, there are 5 tiles represented by the integers 1 through 5, and an empty square represented by 0.\r\n\r\nA move consists of choosing 0 and a 4-directionally adjacent number and swapping it.\r\n\r\nThe state of the board is solved if and only if the board is [[1,2,3],[4,5,0]].\r\n\r\nGiven a puzzle board, return the least number of moves required so that the state of the board is solved. If it is impossible for the state of the board to be solved, return -1.\r\n\r\nExamples:\r\n\r\n\r\nInput: board = [[1,2,3],[4,0,5]]\r\nOutput: 1\r\nExplanation: Swap the 0 and the 5 in one move.\r\n\r\n\r\n\r\nInput: board = [[1,2,3],[5,4,0]]\r\nOutput: -1\r\nExplanation: No number of moves will make the board solved.\r\n\r\n\r\n\r\nInput: board = [[4,1,2],[5,0,3]]\r\nOutput: 5\r\nExplanation: 5 is the smallest number of moves that solves the board.\r\nAn example path:\r\nAfter move 0: [[4,1,2],[5,0,3]]\r\nAfter move 1: [[4,1,2],[0,5,3]]\r\nAfter move 2: [[0,1,2],[4,5,3]]\r\nAfter move 3: [[1,0,2],[4,5,3]]\r\nAfter move 4: [[1,2,0],[4,5,3]]\r\nAfter move 5: [[1,2,3],[4,5,0]]\r\n\r\n\r\n\r\nInput: board = [[3,2,4],[1,5,0]]\r\nOutput: 14\r\n\r\n\r\nNote:\r\n\r\n\r\n\tboard will be a 2 x 3 array as described above.\r\n\tboard[i][j] will be a permutation of [0, 1, 2, 3, 4, 5].",
        "level": 3,
        "paid_only": false,
        "question_id": 787,
        "slug": "sliding-puzzle",
        "tags": [],
        "title": "Sliding Puzzle",
        "url": "https://leetcode.com/problems/sliding-puzzle/description/"
    },
    "789": {
        "description": "Design a class to find the kth largest element in a stream. Note that it is the kth largest element in the sorted order, not the kth distinct element.\r\n\r\nYour KthLargest class will have a constructor which accepts an integer k and an integer array nums, which contains initial elements from the stream. For each call to the method KthLargest.add, return the element representing the kth largest element in the stream.\r\n\r\nExample:\r\n\r\n\r\nint k = 3;\r\nint[] arr = [4,5,8,2];\r\nKthLargest kthLargest = new KthLargest(3, arr);\r\nkthLargest.add(3);   // returns 4\r\nkthLargest.add(5);   // returns 5\r\nkthLargest.add(10);  // returns 5\r\nkthLargest.add(9);   // returns 8\r\nkthLargest.add(4);   // returns 8\r\n\r\n\r\nNote: \r\nYou may assume that nums' length ≥ k-1 and k ≥ 1.",
        "level": 1,
        "paid_only": false,
        "question_id": 789,
        "slug": "kth-largest-element-in-a-stream",
        "tags": [],
        "title": "Kth Largest Element in a Stream",
        "url": "https://leetcode.com/problems/kth-largest-element-in-a-stream/description/"
    },
    "790": {
        "description": "We have some permutation A of [0, 1, ..., N - 1], where N is the length of A.\r\n\r\nThe number of (global) inversions is the number of i < j with 0 <= i < j < N and A[i] > A[j].\r\n\r\nThe number of local inversions is the number of i with 0 <= i < N and A[i] > A[i+1].\r\n\r\nReturn true if and only if the number of global inversions is equal to the number of local inversions.\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = [1,0,2]\r\nOutput: true\r\nExplanation: There is 1 global inversion, and 1 local inversion.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = [1,2,0]\r\nOutput: false\r\nExplanation: There are 2 global inversions, and 1 local inversion.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tA will be a permutation of [0, 1, ..., A.length - 1].\r\n\tA will have length in range [1, 5000].\r\n\tThe time limit for this problem has been reduced.",
        "level": 2,
        "paid_only": false,
        "question_id": 790,
        "slug": "global-and-local-inversions",
        "tags": [],
        "title": "Global and Local Inversions",
        "url": "https://leetcode.com/problems/global-and-local-inversions/description/"
    },
    "792": {
        "description": "Given a sorted (in ascending order) integer array nums of n elements and a target value, write a function to search target in nums. If target exists, then return its index, otherwise return -1.\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: nums = [-1,0,3,5,9,12], target = 9\r\nOutput: 4\r\nExplanation: 9 exists in nums and its index is 4\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: nums = [-1,0,3,5,9,12], target = 2\r\nOutput: -1\r\nExplanation: 2 does not exist in nums so return -1\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tYou may assume that all elements in nums are unique.\r\n\tn will be in the range [1, 10000].\r\n\tThe value of each element in nums will be in the range [-9999, 9999].",
        "level": 1,
        "paid_only": false,
        "question_id": 792,
        "slug": "binary-search",
        "tags": [],
        "title": "Binary Search",
        "url": "https://leetcode.com/problems/binary-search/description/"
    },
    "793": {
        "description": "In a string composed of 'L', 'R', and 'X' characters, like \"RXXLRXRXL\", a move consists of either replacing one occurrence of \"XL\" with \"LX\", or replacing one occurrence of \"RX\" with \"XR\". Given the starting string start and the ending string end, return True if and only if there exists a sequence of moves to transform one string to the other.\r\n\r\nExample:\r\n\r\n\r\nInput: start = \"RXXLRXRXL\", end = \"XRLXXRRLX\"\r\nOutput: True\r\nExplanation:\r\nWe can transform start to end following these steps:\r\nRXXLRXRXL ->\r\nXRXLRXRXL ->\r\nXRLXRXRXL ->\r\nXRLXXRRXL ->\r\nXRLXXRRLX\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= len(start) = len(end) <= 10000.\r\n\tBoth start and end will only consist of characters in {'L', 'R', 'X'}.",
        "level": 2,
        "paid_only": false,
        "question_id": 793,
        "slug": "swap-adjacent-in-lr-string",
        "tags": [],
        "title": "Swap Adjacent in LR String",
        "url": "https://leetcode.com/problems/swap-adjacent-in-lr-string/description/"
    },
    "794": {
        "description": "On an N x N grid, each square grid[i][j] represents the elevation at that point (i,j).\r\n\r\nNow rain starts to fall. At time t, the depth of the water everywhere is t. You can swim from a square to another 4-directionally adjacent square if and only if the elevation of both squares individually are at most t. You can swim infinite distance in zero time. Of course, you must stay within the boundaries of the grid during your swim.\r\n\r\nYou start at the top left square (0, 0). What is the least time until you can reach the bottom right square (N-1, N-1)?\r\n\r\nExample 1:\r\n\r\n\r\nInput: [[0,2],[1,3]]\r\nOutput: 3\r\nExplanation:\r\nAt time 0, you are in grid location (0, 0).\r\nYou cannot go anywhere else because 4-directionally adjacent neighbors have a higher elevation than t = 0.\r\n\r\nYou cannot reach point (1, 1) until time 3.\r\nWhen the depth of water is 3, we can swim anywhere inside the grid.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]\r\nOutput: 16\r\nExplanation:\r\n 0  1  2  3  4\r\n24 23 22 21  5\r\n12 13 14 15 16\r\n11 17 18 19 20\r\n10  9  8  7  6\r\n\r\nThe final route is marked in bold.\r\nWe need to wait until time 16 so that (0, 0) and (4, 4) are connected.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t2 <= N <= 50.\r\n\tgrid[i][j] is a permutation of [0, ..., N*N - 1].",
        "level": 3,
        "paid_only": false,
        "question_id": 794,
        "slug": "swim-in-rising-water",
        "tags": [],
        "title": "Swim in Rising Water",
        "url": "https://leetcode.com/problems/swim-in-rising-water/description/"
    },
    "795": {
        "description": "On the first row, we write a 0. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10.\r\n\r\nGiven row N and index K, return the K-th indexed symbol in row N. (The values of K are 1-indexed.) (1 indexed).\r\n\r\n\r\nExamples:\r\nInput: N = 1, K = 1\r\nOutput: 0\r\n\r\nInput: N = 2, K = 1\r\nOutput: 0\r\n\r\nInput: N = 2, K = 2\r\nOutput: 1\r\n\r\nInput: N = 4, K = 5\r\nOutput: 1\r\n\r\nExplanation:\r\nrow 1: 0\r\nrow 2: 01\r\nrow 3: 0110\r\nrow 4: 01101001\r\n\r\n\r\nNote:\r\n\r\n\r\n\tN will be an integer in the range [1, 30].\r\n\tK will be an integer in the range [1, 2^(N-1)].",
        "level": 2,
        "paid_only": false,
        "question_id": 795,
        "slug": "k-th-symbol-in-grammar",
        "tags": [],
        "title": "K-th Symbol in Grammar",
        "url": "https://leetcode.com/problems/k-th-symbol-in-grammar/description/"
    },
    "796": {
        "description": "A move consists of taking a point (x, y) and transforming it to either (x, x+y) or (x+y, y).\r\n\r\nGiven a starting point (sx, sy) and a target point (tx, ty), return True if and only if a sequence of moves exists to transform the point (sx, sy) to (tx, ty). Otherwise, return False.\r\n\r\n\r\nExamples:\r\nInput: sx = 1, sy = 1, tx = 3, ty = 5\r\nOutput: True\r\nExplanation:\r\nOne series of moves that transforms the starting point to the target is:\r\n(1, 1) -> (1, 2)\r\n(1, 2) -> (3, 2)\r\n(3, 2) -> (3, 5)\r\n\r\nInput: sx = 1, sy = 1, tx = 2, ty = 2\r\nOutput: False\r\n\r\nInput: sx = 1, sy = 1, tx = 1, ty = 1\r\nOutput: True\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\tsx, sy, tx, ty will all be integers in the range [1, 10^9].",
        "level": 3,
        "paid_only": false,
        "question_id": 796,
        "slug": "reaching-points",
        "tags": [],
        "title": "Reaching Points",
        "url": "https://leetcode.com/problems/reaching-points/description/"
    },
    "797": {
        "description": "In a forest, each rabbit has some color. Some subset of rabbits (possibly all of them) tell you how many other rabbits have the same color as them. Those answers are placed in an array.\r\n\r\nReturn the minimum number of rabbits that could be in the forest.\r\n\r\n\r\nExamples:\r\nInput: answers = [1, 1, 2]\r\nOutput: 5\r\nExplanation:\r\nThe two rabbits that answered \"1\" could both be the same color, say red.\r\nThe rabbit than answered \"2\" can't be red or the answers would be inconsistent.\r\nSay the rabbit that answered \"2\" was blue.\r\nThen there should be 2 other blue rabbits in the forest that didn't answer into the array.\r\nThe smallest possible number of rabbits in the forest is therefore 5: 3 that answered plus 2 that didn't.\r\n\r\nInput: answers = [10, 10, 10]\r\nOutput: 11\r\n\r\nInput: answers = []\r\nOutput: 0\r\n\r\n\r\nNote:\r\n\r\n\r\n\tanswers will have length at most 1000.\r\n\tEach answers[i] will be an integer in the range [0, 999].",
        "level": 2,
        "paid_only": false,
        "question_id": 797,
        "slug": "rabbits-in-forest",
        "tags": [],
        "title": "Rabbits in Forest",
        "url": "https://leetcode.com/problems/rabbits-in-forest/description/"
    },
    "798": {
        "description": "An N x N board contains only 0s and 1s. In each move, you can swap any 2 rows with each other, or any 2 columns with each other.\r\n\r\nWhat is the minimum number of moves to transform the board into a \"chessboard\" - a board where no 0s and no 1s are 4-directionally adjacent? If the task is impossible, return -1.\r\n\r\n\r\nExamples:\r\nInput: board = [[0,1,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,1]]\r\nOutput: 2\r\nExplanation:\r\nOne potential sequence of moves is shown below, from left to right:\r\n\r\n0110     1010     1010\r\n0110 --> 1010 --> 0101\r\n1001     0101     1010\r\n1001     0101     0101\r\n\r\nThe first move swaps the first and second column.\r\nThe second move swaps the second and third row.\r\n\r\n\r\nInput: board = [[0, 1], [1, 0]]\r\nOutput: 0\r\nExplanation:\r\nAlso note that the board with 0 in the top left corner,\r\n01\r\n10\r\n\r\nis also a valid chessboard.\r\n\r\nInput: board = [[1, 0], [1, 0]]\r\nOutput: -1\r\nExplanation:\r\nNo matter what sequence of moves you make, you cannot end with a valid chessboard.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tboard will have the same number of rows and columns, a number in the range [2, 30].\r\n\tboard[i][j] will be only 0s or 1s.",
        "level": 3,
        "paid_only": false,
        "question_id": 798,
        "slug": "transform-to-chessboard",
        "tags": [],
        "title": "Transform to Chessboard",
        "url": "https://leetcode.com/problems/transform-to-chessboard/description/"
    },
    "799": {
        "description": "Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\r\n\r\nExample :\r\n\r\n\r\nInput: root = [4,2,6,1,3,null,null]\r\nOutput: 1\r\nExplanation:\r\nNote that root is a TreeNode object, not an array.\r\n\r\nThe given tree [4,2,6,1,3,null,null] is represented by the following diagram:\r\n\r\n          4\r\n        /   \\\r\n      2      6\r\n     / \\    \r\n    1   3  \r\n\r\nwhile the minimum difference in this tree is 1, it occurs between node 1 and node 2, also between node 3 and node 2.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tThe size of the BST will be between 2 and 100.\r\n\tThe BST is always valid, each node's value is an integer, and each node's value is different.",
        "level": 1,
        "paid_only": false,
        "question_id": 799,
        "slug": "minimum-distance-between-bst-nodes",
        "tags": [],
        "title": "Minimum Distance Between BST Nodes",
        "url": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/description/"
    },
    "800": {
        "description": "Given a string S, we can transform every letter individually to be lowercase or uppercase to create another string.  Return a list of all possible strings we could create.\r\n\r\n\r\nExamples:\r\nInput: S = \"a1b2\"\r\nOutput: [\"a1b2\", \"a1B2\", \"A1b2\", \"A1B2\"]\r\n\r\nInput: S = \"3z4\"\r\nOutput: [\"3z4\", \"3Z4\"]\r\n\r\nInput: S = \"12345\"\r\nOutput: [\"12345\"]\r\n\r\n\r\nNote:\r\n\r\n\r\n\tS will be a string with length at most 12.\r\n\tS will consist only of letters or digits.",
        "level": 1,
        "paid_only": false,
        "question_id": 800,
        "slug": "letter-case-permutation",
        "tags": [],
        "title": "Letter Case Permutation",
        "url": "https://leetcode.com/problems/letter-case-permutation/description/"
    },
    "801": {
        "description": "Given an undirected graph, return true if and only if it is bipartite.\r\n\r\nRecall that a graph is bipartite if we can split it's set of nodes into two independent subsets A and B such that every edge in the graph has one node in A and another node in B.\r\n\r\nThe graph is given in the following form: graph[i] is a list of indexes j for which the edge between nodes i and j exists.  Each node is an integer between 0 and graph.length - 1.  There are no self edges or parallel edges: graph[i] does not contain i, and it doesn't contain any element twice.\r\n\r\n\r\nExample 1:\r\nInput: [[1,3], [0,2], [1,3], [0,2]]\r\nOutput: true\r\nExplanation: \r\nThe graph looks like this:\r\n0----1\r\n|    |\r\n|    |\r\n3----2\r\nWe can divide the vertices into two groups: {0, 2} and {1, 3}.\r\n\r\n\r\n\r\nExample 2:\r\nInput: [[1,2,3], [0,2], [0,1,3], [0,2]]\r\nOutput: false\r\nExplanation: \r\nThe graph looks like this:\r\n0----1\r\n| \\  |\r\n|  \\ |\r\n3----2\r\nWe cannot find a way to divide the set of nodes into two independent subsets.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tgraph will have length in range [1, 100].\r\n\tgraph[i] will contain integers in range [0, graph.length - 1].\r\n\tgraph[i] will not contain i or duplicate values.\r\n\tThe graph is undirected: if any element j is in graph[i], then i will be in graph[j].",
        "level": 2,
        "paid_only": false,
        "question_id": 801,
        "slug": "is-graph-bipartite",
        "tags": [],
        "title": "Is Graph Bipartite?",
        "url": "https://leetcode.com/problems/is-graph-bipartite/description/"
    },
    "802": {
        "description": "A sorted list A contains 1, plus some number of primes.  Then, for every p < q in the list, we consider the fraction p/q.\r\n\r\nWhat is the K-th smallest fraction considered?  Return your answer as an array of ints, where answer[0] = p and answer[1] = q.\r\n\r\n\r\nExamples:\r\nInput: A = [1, 2, 3, 5], K = 3\r\nOutput: [2, 5]\r\nExplanation:\r\nThe fractions to be considered in sorted order are:\r\n1/5, 1/3, 2/5, 1/2, 3/5, 2/3.\r\nThe third fraction is 2/5.\r\n\r\nInput: A = [1, 7], K = 1\r\nOutput: [1, 7]\r\n\r\n\r\nNote:\r\n\r\n\r\n\tA will have length between 2 and 2000.\r\n\tEach A[i] will be between 1 and 30000.\r\n\tK will be between 1 and A.length * (A.length - 1) / 2.",
        "level": 3,
        "paid_only": false,
        "question_id": 802,
        "slug": "k-th-smallest-prime-fraction",
        "tags": [],
        "title": "K-th Smallest Prime Fraction",
        "url": "https://leetcode.com/problems/k-th-smallest-prime-fraction/description/"
    },
    "803": {
        "description": "There are n cities connected by m flights. Each fight starts from city u and arrives at v with a price w.\r\n\r\nNow given all the cities and fights, together with starting city src and the destination dst, your task is to find the cheapest price from src to dst with up to k stops. If there is no such route, output -1.\r\n\r\n\r\nExample 1:\r\nInput: \r\nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\r\nsrc = 0, dst = 2, k = 1\r\nOutput: 200\r\nExplanation: \r\nThe graph looks like this:\r\n\r\n\r\nThe cheapest price from city 0 to city 2 with at most 1 stop costs 200, as marked red in the picture.\r\n\r\n\r\nExample 2:\r\nInput: \r\nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\r\nsrc = 0, dst = 2, k = 0\r\nOutput: 500\r\nExplanation: \r\nThe graph looks like this:\r\n\r\n\r\nThe cheapest price from city 0 to city 2 with at most 0 stop costs 500, as marked blue in the picture.\r\n\r\nNote:\r\n\r\n\r\n\tThe number of nodes n will be in range [1, 100], with nodes labeled from 0 to n - 1.\r\n\tThe size of flights will be in range [0, n * (n - 1) / 2].\r\n\tThe format of each flight will be (src, dst, price).\r\n\tThe price of each flight will be in the range [1, 10000].\r\n\tk is in the range of [0, n - 1].\r\n\tThere will not be any duplicated flights or self cycles.",
        "level": 2,
        "paid_only": false,
        "question_id": 803,
        "slug": "cheapest-flights-within-k-stops",
        "tags": [],
        "title": "Cheapest Flights Within K Stops",
        "url": "https://leetcode.com/problems/cheapest-flights-within-k-stops/description/"
    },
    "804": {
        "description": "X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.  Each digit must be rotated - we cannot choose to leave it alone.\r\n\r\nA number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other; 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.\r\n\r\nNow given a positive number N, how many numbers X from 1 to N are good?\r\n\r\n\r\nExample:\r\nInput: 10\r\nOutput: 4\r\nExplanation: \r\nThere are four good numbers in the range [1, 10] : 2, 5, 6, 9.\r\nNote that 1 and 10 are not good numbers, since they remain unchanged after rotating.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tN  will be in range [1, 10000].",
        "level": 1,
        "paid_only": false,
        "question_id": 804,
        "slug": "rotated-digits",
        "tags": [],
        "title": "Rotated Digits",
        "url": "https://leetcode.com/problems/rotated-digits/description/"
    },
    "805": {
        "description": "You are playing a simplified Pacman game. You start at the point (0, 0), and your destination is (target[0], target[1]). There are several ghosts on the map, the i-th ghost starts at (ghosts[i][0], ghosts[i][1]).\r\n\r\nEach turn, you and all ghosts simultaneously *may* move in one of 4 cardinal directions: north, east, west, or south, going from the previous point to a new point 1 unit of distance away.\r\n\r\nYou escape if and only if you can reach the target before any ghost reaches you (for any given moves the ghosts may take.)  If you reach any square (including the target) at the same time as a ghost, it doesn't count as an escape.\r\n\r\nReturn True if and only if it is possible to escape.\r\n\r\n\r\nExample 1:\r\nInput: \r\nghosts = [[1, 0], [0, 3]]\r\ntarget = [0, 1]\r\nOutput: true\r\nExplanation: \r\nYou can directly reach the destination (0, 1) at time 1, while the ghosts located at (1, 0) or (0, 3) have no way to catch up with you.\r\n\r\n\r\n\r\nExample 2:\r\nInput: \r\nghosts = [[1, 0]]\r\ntarget = [2, 0]\r\nOutput: false\r\nExplanation: \r\nYou need to reach the destination (2, 0), but the ghost at (1, 0) lies between you and the destination.\r\n\r\n\r\n\r\nExample 3:\r\nInput: \r\nghosts = [[2, 0]]\r\ntarget = [1, 0]\r\nOutput: false\r\nExplanation: \r\nThe ghost can reach the target at the same time as you.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tAll points have coordinates with absolute value <= 10000.\r\n\tThe number of ghosts will not exceed 100.",
        "level": 2,
        "paid_only": false,
        "question_id": 805,
        "slug": "escape-the-ghosts",
        "tags": [],
        "title": "Escape The Ghosts",
        "url": "https://leetcode.com/problems/escape-the-ghosts/description/"
    },
    "806": {
        "description": "We have two types of tiles: a 2x1 domino shape, and an \"L\" tromino shape. These shapes may be rotated.\r\n\r\n\r\nXX  <- domino\r\n\r\nXX  <- \"L\" tromino\r\nX\r\n\r\n\r\nGiven N, how many ways are there to tile a 2 x N board? Return your answer modulo 10^9 + 7.\r\n\r\n(In a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.)\r\n\r\n\r\n\r\nExample:\r\nInput: 3\r\nOutput: 5\r\nExplanation: \r\nThe five different ways are listed below, different letters indicates different tiles:\r\nXYZ XXZ XYY XXY XYY\r\nXYZ YYZ XZZ XYY XXY\r\n\r\nNote:\r\n\r\n\r\n\tN  will be in range [1, 1000].\r\n\r\n\r\n ",
        "level": 2,
        "paid_only": false,
        "question_id": 806,
        "slug": "domino-and-tromino-tiling",
        "tags": [],
        "title": "Domino and Tromino Tiling",
        "url": "https://leetcode.com/problems/domino-and-tromino-tiling/description/"
    },
    "807": {
        "description": "S and T are strings composed of lowercase letters. In S, no letter occurs more than once.\r\n\r\nS was sorted in some custom order previously. We want to permute the characters of T so that they match the order that S was sorted. More specifically, if x occurs before y in S, then x should occur before y in the returned string.\r\n\r\nReturn any permutation of T (as a string) that satisfies this property.\r\n\r\n\r\nExample :\r\nInput: \r\nS = \"cba\"\r\nT = \"abcd\"\r\nOutput: \"cbad\"\r\nExplanation: \r\n\"a\", \"b\", \"c\" appear in S, so the order of \"a\", \"b\", \"c\" should be \"c\", \"b\", and \"a\". \r\nSince \"d\" does not appear in S, it can be at any position in T. \"dcba\", \"cdba\", \"cbda\" are also valid outputs.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tS has length at most 26, and no character is repeated in S.\r\n\tT has length at most 200.\r\n\tS and T consist of lowercase letters only.",
        "level": 2,
        "paid_only": false,
        "question_id": 807,
        "slug": "custom-sort-string",
        "tags": [],
        "title": "Custom Sort String",
        "url": "https://leetcode.com/problems/custom-sort-string/description/"
    },
    "808": {
        "description": "Given string S and a dictionary of words words, find the number of words[i] that is a subsequence of S.\r\n\r\n\r\nExample :\r\nInput: \r\nS = \"abcde\"\r\nwords = [\"a\", \"bb\", \"acd\", \"ace\"]\r\nOutput: 3\r\nExplanation: There are three words in words that are a subsequence of S: \"a\", \"acd\", \"ace\".\r\n\r\n\r\nNote:\r\n\r\n\r\n\tAll words in words and S will only consists of lowercase letters.\r\n\tThe length of S will be in the range of [1, 50000].\r\n\tThe length of words will be in the range of [1, 5000].\r\n\tThe length of words[i] will be in the range of [1, 50].",
        "level": 2,
        "paid_only": false,
        "question_id": 808,
        "slug": "number-of-matching-subsequences",
        "tags": [],
        "title": "Number of Matching Subsequences",
        "url": "https://leetcode.com/problems/number-of-matching-subsequences/description/"
    },
    "809": {
        "description": "Let f(x) be the number of zeroes at the end of x!. (Recall that x! = 1 * 2 * 3 * ... * x, and by convention, 0! = 1.)\r\n\r\nFor example, f(3) = 0 because 3! = 6 has no zeroes at the end, while f(11) = 2 because 11! = 39916800 has 2 zeroes at the end. Given K, find how many non-negative integers x have the property that f(x) = K.\r\n\r\n\r\nExample 1:\r\nInput: K = 0\r\nOutput: 5\r\nExplanation: 0!, 1!, 2!, 3!, and 4! end with K = 0 zeroes.\r\n\r\nExample 2:\r\nInput: K = 5\r\nOutput: 0\r\nExplanation: There is no x such that x! ends in K = 5 zeroes.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tK will be an integer in the range [0, 10^9].",
        "level": 3,
        "paid_only": false,
        "question_id": 809,
        "slug": "preimage-size-of-factorial-zeroes-function",
        "tags": [],
        "title": "Preimage Size of Factorial Zeroes Function",
        "url": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function/description/"
    },
    "810": {
        "description": "A Tic-Tac-Toe board is given as a string array board. Return True if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game.\r\n\r\nThe board is a 3 x 3 array, and consists of characters \" \", \"X\", and \"O\".  The \" \" character represents an empty square.\r\n\r\nHere are the rules of Tic-Tac-Toe:\r\n\r\n\r\n\tPlayers take turns placing characters into empty squares (\" \").\r\n\tThe first player always places \"X\" characters, while the second player always places \"O\" characters.\r\n\t\"X\" and \"O\" characters are always placed into empty squares, never filled ones.\r\n\tThe game ends when there are 3 of the same (non-empty) character filling any row, column, or diagonal.\r\n\tThe game also ends if all squares are non-empty.\r\n\tNo more moves can be played if the game is over.\r\n\r\n\r\n\r\nExample 1:\r\nInput: board = [\"O  \", \"   \", \"   \"]\r\nOutput: false\r\nExplanation: The first player always plays \"X\".\r\n\r\nExample 2:\r\nInput: board = [\"XOX\", \" X \", \"   \"]\r\nOutput: false\r\nExplanation: Players take turns making moves.\r\n\r\nExample 3:\r\nInput: board = [\"XXX\", \"   \", \"OOO\"]\r\nOutput: false\r\n\r\nExample 4:\r\nInput: board = [\"XOX\", \"O O\", \"XOX\"]\r\nOutput: true\r\n\r\n\r\nNote:\r\n\r\n\r\n\tboard is a length-3 array of strings, where each string board[i] has length 3.\r\n\tEach board[i][j] is a character in the set {\" \", \"X\", \"O\"}.",
        "level": 2,
        "paid_only": false,
        "question_id": 810,
        "slug": "valid-tic-tac-toe-state",
        "tags": [],
        "title": "Valid Tic-Tac-Toe State",
        "url": "https://leetcode.com/problems/valid-tic-tac-toe-state/description/"
    },
    "811": {
        "description": "We are given an array A of positive integers, and two positive integers L and R (L <= R).\r\n\r\nReturn the number of (contiguous, non-empty) subarrays such that the value of the maximum array element in that subarray is at least L and at most R.\r\n\r\n\r\nExample :\r\nInput: \r\nA = [2, 1, 4, 3]\r\nL = 2\r\nR = 3\r\nOutput: 3\r\nExplanation: There are three subarrays that meet the requirements: [2], [2, 1], [3].\r\n\r\n\r\nNote:\r\n\r\n\r\n\tL, R  and A[i] will be an integer in the range [0, 10^9].\r\n\tThe length of A will be in the range of [1, 50000].",
        "level": 2,
        "paid_only": false,
        "question_id": 811,
        "slug": "number-of-subarrays-with-bounded-maximum",
        "tags": [],
        "title": "Number of Subarrays with Bounded Maximum",
        "url": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/description/"
    },
    "812": {
        "description": "We are given two strings, A and B.\r\n\r\nA shift on A consists of taking string A and moving the leftmost character to the rightmost position. For example, if A = 'abcde', then it will be 'bcdea' after one shift on A. Return True if and only if A can become B after some number of shifts on A.\r\n\r\n\r\nExample 1:\r\nInput: A = 'abcde', B = 'cdeab'\r\nOutput: true\r\n\r\nExample 2:\r\nInput: A = 'abcde', B = 'abced'\r\nOutput: false\r\n\r\n\r\nNote:\r\n\r\n\r\n\tA and B will have length at most 100.",
        "level": 1,
        "paid_only": false,
        "question_id": 812,
        "slug": "rotate-string",
        "tags": [],
        "title": "Rotate String",
        "url": "https://leetcode.com/problems/rotate-string/description/"
    },
    "813": {
        "description": "Given a directed, acyclic graph of N nodes.  Find all possible paths from node 0 to node N-1, and return them in any order.\r\n\r\nThe graph is given as follows:  the nodes are 0, 1, ..., graph.length - 1.  graph[i] is a list of all nodes j for which the edge (i, j) exists.\r\n\r\n\r\nExample:\r\nInput: [[1,2], [3], [3], []] \r\nOutput: [[0,1,3],[0,2,3]] \r\nExplanation: The graph looks like this:\r\n0--->1\r\n|    |\r\nv    v\r\n2--->3\r\nThere are two paths: 0 -> 1 -> 3 and 0 -> 2 -> 3.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tThe number of nodes in the graph will be in the range [2, 15].\r\n\tYou can print different paths in any order, but you should keep the order of nodes inside one path.",
        "level": 2,
        "paid_only": false,
        "question_id": 813,
        "slug": "all-paths-from-source-to-target",
        "tags": [],
        "title": "All Paths From Source to Target",
        "url": "https://leetcode.com/problems/all-paths-from-source-to-target/description/"
    },
    "814": {
        "description": " Given an array A, we may rotate it by a non-negative integer K so that the array becomes A[K], A[K+1], A{K+2], ... A[A.length - 1], A[0], A[1], ..., A[K-1].  Afterward, any entries that are less than or equal to their index are worth 1 point. \r\n\r\nFor example, if we have [2, 4, 1, 3, 0], and we rotate by K = 2, it becomes [1, 3, 0, 2, 4].  This is worth 3 points because 1 > 0 [no points], 3 > 1 [no points], 0 <= 2 [one point], 2 <= 3 [one point], 4 <= 4 [one point].\r\n\r\nOver all possible rotations, return the rotation index K that corresponds to the highest score we could receive.  If there are multiple answers, return the smallest such index K.\r\n\r\n\r\nExample 1:\r\nInput: [2, 3, 1, 4, 0]\r\nOutput: 3\r\nExplanation:  \r\nScores for each K are listed below: \r\nK = 0,  A = [2,3,1,4,0],    score 2\r\nK = 1,  A = [3,1,4,0,2],    score 3\r\nK = 2,  A = [1,4,0,2,3],    score 3\r\nK = 3,  A = [4,0,2,3,1],    score 4\r\nK = 4,  A = [0,2,3,1,4],    score 3\r\n\r\n\r\nSo we should choose K = 3, which has the highest score.\r\n\r\n \r\n\r\n\r\nExample 2:\r\nInput: [1, 3, 0, 2, 4]\r\nOutput: 0\r\nExplanation:  A will always have 3 points no matter how it shifts.\r\nSo we will choose the smallest K, which is 0.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tA will have length at most 20000.\r\n\tA[i] will be in the range [0, A.length].",
        "level": 3,
        "paid_only": false,
        "question_id": 814,
        "slug": "smallest-rotation-with-highest-score",
        "tags": [],
        "title": "Smallest Rotation with Highest Score",
        "url": "https://leetcode.com/problems/smallest-rotation-with-highest-score/description/"
    },
    "815": {
        "description": "We stack glasses in a pyramid, where the first row has 1 glass, the second row has 2 glasses, and so on until the 100th row.  Each glass holds one cup (250ml) of champagne.\r\n\r\nThen, some champagne is poured in the first glass at the top.  When the top most glass is full, any excess liquid poured will fall equally to the glass immediately to the left and right of it.  When those glasses become full, any excess champagne will fall equally to the left and right of those glasses, and so on.  (A glass at the bottom row has it's excess champagne fall on the floor.)\r\n\r\nFor example, after one cup of champagne is poured, the top most glass is full.  After two cups of champagne are poured, the two glasses on the second row are half full.  After three cups of champagne are poured, those two cups become full - there are 3 full glasses total now.  After four cups of champagne are poured, the third row has the middle glass half full, and the two outside glasses are a quarter full, as pictured below.\r\n\r\n\r\n\r\nNow after pouring some non-negative integer cups of champagne, return how full the j-th glass in the i-th row is (both i and j are 0 indexed.)\r\n\r\n \r\n\r\n\r\nExample 1:\r\nInput: poured = 1, query_glass = 1, query_row = 1\r\nOutput: 0.0\r\nExplanation: We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). There will be no excess liquid so all the glasses under the top glass will remain empty.\r\n\r\nExample 2:\r\nInput: poured = 2, query_glass = 1, query_row = 1\r\nOutput: 0.5\r\nExplanation: We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. The glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tpoured will be in the range of [0, 10 ^ 9].\r\n\tquery_glass and query_row will be in the range of [0, 99].\r\n\r\n\r\n ",
        "level": 2,
        "paid_only": false,
        "question_id": 815,
        "slug": "champagne-tower",
        "tags": [],
        "title": "Champagne Tower",
        "url": "https://leetcode.com/problems/champagne-tower/description/"
    },
    "816": {
        "description": "Design a HashSet without using any built-in hash table libraries.\r\n\r\nTo be specific, your design should include these functions:\r\n\r\n\r\n\tadd(value): Insert a value into the HashSet. \r\n\tcontains(value) : Return whether the value exists in the HashSet or not.\r\n\tremove(value): Remove a value in the HashSet. If the value does not exist in the HashSet, do nothing.\r\n\r\n\r\n\r\nExample:\r\n\r\n\r\nMyHashSet hashSet = new MyHashSet();\r\nhashSet.add(1);         \r\nhashSet.add(2);         \r\nhashSet.contains(1);    // returns true\r\nhashSet.contains(3);    // returns false (not found)\r\nhashSet.add(2);          \r\nhashSet.contains(2);    // returns true\r\nhashSet.remove(2);          \r\nhashSet.contains(2);    // returns false (already removed)\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\tAll values will be in the range of [0, 1000000].\r\n\tThe number of operations will be in the range of [1, 10000].\r\n\tPlease do not use the built-in HashSet library.",
        "level": 1,
        "paid_only": false,
        "question_id": 816,
        "slug": "design-hashset",
        "tags": [],
        "title": "Design HashSet",
        "url": "https://leetcode.com/problems/design-hashset/description/"
    },
    "817": {
        "description": "Design a HashMap without using any built-in hash table libraries.\r\n\r\nTo be specific, your design should include these functions:\r\n\r\n\r\n\tput(key, value) : Insert a (key, value) pair into the HashMap. If the value already exists in the HashMap, update the value.\r\n\tget(key): Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.\r\n\tremove(key) : Remove the mapping for the value key if this map contains the mapping for the key.\r\n\r\n\r\n\r\nExample:\r\n\r\n\r\nMyHashMap hashMap = new MyHashMap();\r\nhashMap.put(1, 1);          \r\nhashMap.put(2, 2);         \r\nhashMap.get(1);            // returns 1\r\nhashMap.get(3);            // returns -1 (not found)\r\nhashMap.put(2, 1);          // update the existing value\r\nhashMap.get(2);            // returns 1 \r\nhashMap.remove(2);          // remove the mapping for 2\r\nhashMap.get(2);            // returns -1 (not found) \r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\tAll keys and values will be in the range of [0, 1000000].\r\n\tThe number of operations will be in the range of [1, 10000].\r\n\tPlease do not use the built-in HashMap library.",
        "level": 1,
        "paid_only": false,
        "question_id": 817,
        "slug": "design-hashmap",
        "tags": [],
        "title": "Design HashMap",
        "url": "https://leetcode.com/problems/design-hashmap/description/"
    },
    "819": {
        "description": "We have two integer sequences A and B of the same non-zero length.\r\n\r\nWe are allowed to swap elements A[i] and B[i].  Note that both elements are in the same index position in their respective sequences.\r\n\r\nAt the end of some number of swaps, A and B are both strictly increasing.  (A sequence is strictly increasing if and only if A[0] < A[1] < A[2] < ... < A[A.length - 1].)\r\n\r\nGiven A and B, return the minimum number of swaps to make both sequences strictly increasing.  It is guaranteed that the given input always makes it possible.\r\n\r\n\r\nExample:\r\nInput: A = [1,3,5,4], B = [1,2,3,7]\r\nOutput: 1\r\nExplanation: \r\nSwap A[3] and B[3].  Then the sequences are:\r\nA = [1, 3, 5, 7] and B = [1, 2, 3, 4]\r\nwhich are both strictly increasing.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tA, B are arrays with the same length, and that length will be in the range [1, 1000].\r\n\tA[i], B[i] are integer values in the range [0, 2000].",
        "level": 2,
        "paid_only": false,
        "question_id": 819,
        "slug": "minimum-swaps-to-make-sequences-increasing",
        "tags": [],
        "title": "Minimum Swaps To Make Sequences Increasing",
        "url": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/description/"
    },
    "820": {
        "description": "In a directed graph, we start at some node and every turn, walk along a directed edge of the graph.  If we reach a node that is terminal (that is, it has no outgoing directed edges), we stop.\r\n\r\nNow, say our starting node is eventually safe if and only if we must eventually walk to a terminal node.  More specifically, there exists a natural number K so that for any choice of where to walk, we must have stopped at a terminal node in less than K steps.\r\n\r\nWhich nodes are eventually safe?  Return them as an array in sorted order.\r\n\r\nThe directed graph has N nodes with labels 0, 1, ..., N-1, where N is the length of graph.  The graph is given in the following form: graph[i] is a list of labels j such that (i, j) is a directed edge of the graph.\r\n\r\n\r\nExample:\r\nInput: graph = [[1,2],[2,3],[5],[0],[5],[],[]]\r\nOutput: [2,4,5,6]\r\nHere is a diagram of the above graph.\r\n\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\tgraph will have length at most 10000.\r\n\tThe number of edges in the graph will not exceed 32000.\r\n\tEach graph[i] will be a sorted list of different integers, chosen within the range [0, graph.length - 1].",
        "level": 2,
        "paid_only": false,
        "question_id": 820,
        "slug": "find-eventual-safe-states",
        "tags": [],
        "title": "Find Eventual Safe States",
        "url": "https://leetcode.com/problems/find-eventual-safe-states/description/"
    },
    "821": {
        "description": "We have a grid of 1s and 0s; the 1s in a cell represent bricks.  A brick will not drop if and only if it is directly connected to the top of the grid, or at least one of its (4-way) adjacent bricks will not drop.\r\n\r\nWe will do some erasures sequentially. Each time we want to do the erasure at the location (i, j), the brick (if it exists) on that location will disappear, and then some other bricks may drop because of that erasure.\r\n\r\nReturn an array representing the number of bricks that will drop after each erasure in sequence.\r\n\r\n\r\nExample 1:\r\nInput: \r\ngrid = [[1,0,0,0],[1,1,1,0]]\r\nhits = [[1,0]]\r\nOutput: [2]\r\nExplanation: \r\nIf we erase the brick at (1, 0), the brick at (1, 1) and (1, 2) will drop. So we should return 2.\r\n\r\n\r\nExample 2:\r\nInput: \r\ngrid = [[1,0,0,0],[1,1,0,0]]\r\nhits = [[1,1],[1,0]]\r\nOutput: [0,0]\r\nExplanation: \r\nWhen we erase the brick at (1, 0), the brick at (1, 1) has already disappeared due to the last move. So each erasure will cause no bricks dropping.  Note that the erased brick (1, 0) will not be counted as a dropped brick.\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tThe number of rows and columns in the grid will be in the range [1, 200].\r\n\tThe number of erasures will not exceed the area of the grid.\r\n\tIt is guaranteed that each erasure will be different from any other erasure, and located inside the grid.\r\n\tAn erasure may refer to a location with no brick - if it does, no bricks drop.",
        "level": 3,
        "paid_only": false,
        "question_id": 821,
        "slug": "bricks-falling-when-hit",
        "tags": [],
        "title": "Bricks Falling When Hit",
        "url": "https://leetcode.com/problems/bricks-falling-when-hit/description/"
    },
    "822": {
        "description": "International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows: \"a\" maps to \".-\", \"b\" maps to \"-...\", \"c\" maps to \"-.-.\", and so on.\r\n\r\nFor convenience, the full table for the 26 letters of the English alphabet is given below:\r\n\r\n\r\n[\".-\",\"-...\",\"-.-.\",\"-..\",\".\",\"..-.\",\"--.\",\"....\",\"..\",\".---\",\"-.-\",\".-..\",\"--\",\"-.\",\"---\",\".--.\",\"--.-\",\".-.\",\"...\",\"-\",\"..-\",\"...-\",\".--\",\"-..-\",\"-.--\",\"--..\"]\r\n\r\nNow, given a list of words, each word can be written as a concatenation of the Morse code of each letter. For example, \"cab\" can be written as \"-.-.-....-\", (which is the concatenation \"-.-.\" + \"-...\" + \".-\"). We'll call such a concatenation, the transformation of a word.\r\n\r\nReturn the number of different transformations among all words we have.\r\n\r\n\r\nExample:\r\nInput: words = [\"gin\", \"zen\", \"gig\", \"msg\"]\r\nOutput: 2\r\nExplanation: \r\nThe transformation of each word is:\r\n\"gin\" -> \"--...-.\"\r\n\"zen\" -> \"--...-.\"\r\n\"gig\" -> \"--...--.\"\r\n\"msg\" -> \"--...--.\"\r\n\r\nThere are 2 different transformations, \"--...-.\" and \"--...--.\".\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tThe length of words will be at most 100.\r\n\tEach words[i] will have length in range [1, 12].\r\n    words[i] will only consist of lowercase letters.",
        "level": 1,
        "paid_only": false,
        "question_id": 822,
        "slug": "unique-morse-code-words",
        "tags": [],
        "title": "Unique Morse Code Words",
        "url": "https://leetcode.com/problems/unique-morse-code-words/description/"
    },
    "823": {
        "description": "In a given integer array A, we must move every element of A to either list B or list C. (B and C initially start empty.)\r\n\r\nReturn true if and only if after such a move, it is possible that the average value of B is equal to the average value of C, and B and C are both non-empty.\r\n\r\n\r\nExample :\r\nInput: \r\n[1,2,3,4,5,6,7,8]\r\nOutput: true\r\nExplanation: We can split the array into [1,4,5,8] and [2,3,6,7], and both of them have the average of 4.5.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tThe length of A will be in the range [1, 30].\r\n\tA[i] will be in the range of [0, 10000].\r\n\r\n\r\n ",
        "level": 3,
        "paid_only": false,
        "question_id": 823,
        "slug": "split-array-with-same-average",
        "tags": [],
        "title": "Split Array With Same Average",
        "url": "https://leetcode.com/problems/split-array-with-same-average/description/"
    },
    "824": {
        "description": "We are to write the letters of a given string S, from left to right into lines. Each line has maximum width 100 units, and if writing a letter would cause the width of the line to exceed 100 units, it is written on the next line. We are given an array widths, an array where widths[0] is the width of 'a', widths[1] is the width of 'b', ..., and widths[25] is the width of 'z'.\r\n\r\nNow answer two questions: how many lines have at least one character from S, and what is the width used by the last such line? Return your answer as an integer list of length 2.\r\n\r\n \r\n\r\n\r\nExample :\r\nInput: \r\nwidths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\r\nS = \"abcdefghijklmnopqrstuvwxyz\"\r\nOutput: [3, 60]\r\nExplanation: \r\nAll letters have the same length of 10. To write all 26 letters,\r\nwe need two full lines and one line with 60 units.\r\n\r\n\r\n\r\nExample :\r\nInput: \r\nwidths = [4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\r\nS = \"bbbcccdddaaa\"\r\nOutput: [2, 4]\r\nExplanation: \r\nAll letters except 'a' have the same length of 10, and \r\n\"bbbcccdddaa\" will cover 9 * 10 + 2 * 4 = 98 units.\r\nFor the last 'a', it is written on the second line because\r\nthere is only 2 units left in the first line.\r\nSo the answer is 2 lines, plus 4 units in the second line.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tThe length of S will be in the range [1, 1000].\r\n\tS will only contain lowercase letters.\r\n\twidths is an array of length 26.\r\n\twidths[i] will be in the range of [2, 10].",
        "level": 1,
        "paid_only": false,
        "question_id": 824,
        "slug": "number-of-lines-to-write-string",
        "tags": [],
        "title": "Number of Lines To Write String",
        "url": "https://leetcode.com/problems/number-of-lines-to-write-string/description/"
    },
    "825": {
        "description": "In a 2 dimensional array grid, each value grid[i][j] represents the height of a building located there. We are allowed to increase the height of any number of buildings, by any amount (the amounts can be different for different buildings). Height 0 is considered to be a building as well. \r\n\r\nAt the end, the \"skyline\" when viewed from all four directions of the grid, i.e. top, bottom, left, and right, must be the same as the skyline of the original grid. A city's skyline is the outer contour of the rectangles formed by all the buildings when viewed from a distance. See the following example.\r\n\r\nWhat is the maximum total sum that the height of the buildings can be increased?\r\n\r\n\r\nExample:\r\nInput: grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]\r\nOutput: 35\r\nExplanation: \r\nThe grid is:\r\n[ [3, 0, 8, 4], \r\n  [2, 4, 5, 7],\r\n  [9, 2, 6, 3],\r\n  [0, 3, 1, 0] ]\r\n\r\nThe skyline viewed from top or bottom is: [9, 4, 8, 7]\r\nThe skyline viewed from left or right is: [8, 7, 9, 3]\r\n\r\nThe grid after increasing the height of buildings without affecting skylines is:\r\n\r\ngridNew = [ [8, 4, 8, 7],\r\n            [7, 4, 7, 7],\r\n            [9, 4, 8, 7],\r\n            [3, 3, 3, 3] ]\r\n\r\n\r\n\r\nNotes: \r\n\r\n\r\n\t1 < grid.length = grid[0].length <= 50.\r\n\tAll heights grid[i][j] are in the range [0, 100].\r\n\tAll buildings in grid[i][j] occupy the entire grid cell: that is, they are a 1 x 1 x grid[i][j] rectangular prism.",
        "level": 2,
        "paid_only": false,
        "question_id": 825,
        "slug": "max-increase-to-keep-city-skyline",
        "tags": [],
        "title": "Max Increase to Keep City Skyline",
        "url": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/description/"
    },
    "826": {
        "description": "There are two types of soup: type A and type B. Initially we have N ml of each type of soup. There are four kinds of operations:\r\n\r\n\r\n\tServe 100 ml of soup A and 0 ml of soup B\r\n\tServe 75 ml of soup A and 25 ml of soup B\r\n\tServe 50 ml of soup A and 50 ml of soup B\r\n\tServe 25 ml of soup A and 75 ml of soup B\r\n\r\n\r\nWhen we serve some soup, we give it to someone and we no longer have it.  Each turn, we will choose from the four operations with equal probability 0.25. If the remaining volume of soup is not enough to complete the operation, we will serve as much as we can.  We stop once we no longer have some quantity of both types of soup.\r\n\r\nNote that we do not have the operation where all 100 ml's of soup B are used first.  \r\n\r\nReturn the probability that soup A will be empty first, plus half the probability that A and B become empty at the same time.\r\n\r\n \r\n\r\n\r\nExample:\r\nInput: N = 50\r\nOutput: 0.625\r\nExplanation: \r\nIf we choose the first two operations, A will become empty first. For the third operation, A and B will become empty at the same time. For the fourth operation, B will become empty first. So the total probability of A becoming empty first plus half the probability that A and B become empty at the same time, is 0.25 * (1 + 1 + 0.5 + 0) = 0.625.\r\n\r\n\r\n\r\nNotes: \r\n\r\n\r\n\t0 <= N <= 10^9. \r\n\tAnswers within 10^-6 of the true value will be accepted as correct.",
        "level": 2,
        "paid_only": false,
        "question_id": 826,
        "slug": "soup-servings",
        "tags": [],
        "title": "Soup Servings",
        "url": "https://leetcode.com/problems/soup-servings/description/"
    },
    "827": {
        "description": "Sometimes people repeat letters to represent extra feeling, such as \"hello\" -> \"heeellooo\", \"hi\" -> \"hiiii\".  Here, we have groups, of adjacent letters that are all the same character, and adjacent characters to the group are different.  A group is extended if that group is length 3 or more, so \"e\" and \"o\" would be extended in the first example, and \"i\" would be extended in the second example.  As another example, the groups of \"abbcccaaaa\" would be \"a\", \"bb\", \"ccc\", and \"aaaa\"; and \"ccc\" and \"aaaa\" are the extended groups of that string.\r\n\r\nFor some given string S, a query word is stretchy if it can be made to be equal to S by extending some groups.  Formally, we are allowed to repeatedly choose a group (as defined above) of characters c, and add some number of the same character c to it so that the length of the group is 3 or more.  Note that we cannot extend a group of size one like \"h\" to a group of size two like \"hh\" - all extensions must leave the group extended - ie., at least 3 characters long.\r\n\r\nGiven a list of query words, return the number of words that are stretchy. \r\n\r\n\r\nExample:\r\nInput: \r\nS = \"heeellooo\"\r\nwords = [\"hello\", \"hi\", \"helo\"]\r\nOutput: 1\r\nExplanation: \r\nWe can extend \"e\" and \"o\" in the word \"hello\" to get \"heeellooo\".\r\nWe can't extend \"helo\" to get \"heeellooo\" because the group \"ll\" is not extended.\r\n\r\n\r\nNotes: \r\n\r\n\r\n\t0 <= len(S) <= 100.\r\n\t0 <= len(words) <= 100.\r\n\t0 <= len(words[i]) <= 100.\r\n\tS and all words in words consist only of lowercase letters\r\n\r\n\r\n ",
        "level": 2,
        "paid_only": false,
        "question_id": 827,
        "slug": "expressive-words",
        "tags": [],
        "title": "Expressive Words",
        "url": "https://leetcode.com/problems/expressive-words/description/"
    },
    "828": {
        "description": "We are given non-negative integers nums[i] which are written on a chalkboard.  Alice and Bob take turns erasing exactly one number from the chalkboard, with Alice starting first.  If erasing a number causes the bitwise XOR of all the elements of the chalkboard to become 0, then that player loses.  (Also, we'll say the bitwise XOR of one element is that element itself, and the bitwise XOR of no elements is 0.)\r\n\r\nAlso, if any player starts their turn with the bitwise XOR of all the elements of the chalkboard equal to 0, then that player wins.\r\n\r\nReturn True if and only if Alice wins the game, assuming both players play optimally.\r\n\r\n\r\nExample:\r\nInput: nums = [1, 1, 2]\r\nOutput: false\r\nExplanation: \r\nAlice has two choices: erase 1 or erase 2. \r\nIf she erases 1, the nums array becomes [1, 2]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 2 = 3. Now Bob can remove any element he wants, because Alice will be the one to erase the last element and she will lose. \r\nIf Alice erases 2 first, now nums becomes [1, 1]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 1 = 0. Alice will lose.\r\n\r\n\r\n\r\nNotes: \r\n\r\n\r\n\t1 <= N <= 1000. \r\n\t0 <= nums[i] <= 2^16.\r\n\r\n\r\n ",
        "level": 3,
        "paid_only": false,
        "question_id": 828,
        "slug": "chalkboard-xor-game",
        "tags": [],
        "title": "Chalkboard XOR Game",
        "url": "https://leetcode.com/problems/chalkboard-xor-game/description/"
    },
    "829": {
        "description": "A website domain like \"discuss.leetcode.com\" consists of various subdomains. At the top level, we have \"com\", at the next level, we have \"leetcode.com\", and at the lowest level, \"discuss.leetcode.com\". When we visit a domain like \"discuss.leetcode.com\", we will also visit the parent domains \"leetcode.com\" and \"com\" implicitly.\r\n\r\nNow, call a \"count-paired domain\" to be a count (representing the number of visits this domain received), followed by a space, followed by the address. An example of a count-paired domain might be \"9001 discuss.leetcode.com\".\r\n\r\nWe are given a list cpdomains of count-paired domains. We would like a list of count-paired domains, (in the same format as the input, and in any order), that explicitly counts the number of visits to each subdomain.\r\n\r\n\r\nExample 1:\r\nInput: \r\n[\"9001 discuss.leetcode.com\"]\r\nOutput: \r\n[\"9001 discuss.leetcode.com\", \"9001 leetcode.com\", \"9001 com\"]\r\nExplanation: \r\nWe only have one website domain: \"discuss.leetcode.com\". As discussed above, the subdomain \"leetcode.com\" and \"com\" will also be visited. So they will all be visited 9001 times.\r\n\r\n\r\n\r\n\r\nExample 2:\r\nInput: \r\n[\"900 google.mail.com\", \"50 yahoo.com\", \"1 intel.mail.com\", \"5 wiki.org\"]\r\nOutput: \r\n[\"901 mail.com\",\"50 yahoo.com\",\"900 google.mail.com\",\"5 wiki.org\",\"5 org\",\"1 intel.mail.com\",\"951 com\"]\r\nExplanation: \r\nWe will visit \"google.mail.com\" 900 times, \"yahoo.com\" 50 times, \"intel.mail.com\" once and \"wiki.org\" 5 times. For the subdomains, we will visit \"mail.com\" 900 + 1 = 901 times, \"com\" 900 + 50 + 1 = 951 times, and \"org\" 5 times.\r\n\r\n\r\n\r\nNotes: \r\n\r\n\r\n\tThe length of cpdomains will not exceed 100. \r\n\tThe length of each domain name will not exceed 100.\r\n\tEach address will have either 1 or 2 \".\" characters.\r\n\tThe input count in any count-paired domain will not exceed 10000.\r\n\tThe answer output can be returned in any order.",
        "level": 1,
        "paid_only": false,
        "question_id": 829,
        "slug": "subdomain-visit-count",
        "tags": [],
        "title": "Subdomain Visit Count",
        "url": "https://leetcode.com/problems/subdomain-visit-count/description/"
    },
    "830": {
        "description": "You have a list of points in the plane. Return the area of the largest triangle that can be formed by any 3 of the points.\r\n\r\n\r\nExample:\r\nInput: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]\r\nOutput: 2\r\nExplanation: \r\nThe five points are show in the figure below. The red triangle is the largest.\r\n\r\n\r\n\r\n\r\nNotes: \r\n\r\n\r\n\t3 <= points.length <= 50.\r\n\tNo points will be duplicated.\r\n\t -50 <= points[i][j] <= 50.\r\n\tAnswers within 10^-6 of the true value will be accepted as correct.\r\n\r\n\r\n ",
        "level": 1,
        "paid_only": false,
        "question_id": 830,
        "slug": "largest-triangle-area",
        "tags": [],
        "title": "Largest Triangle Area",
        "url": "https://leetcode.com/problems/largest-triangle-area/description/"
    },
    "831": {
        "description": "We partition a row of numbers A into at most K adjacent (non-empty) groups, then our score is the sum of the average of each group. What is the largest score we can achieve?\r\n\r\nNote that our partition must use every number in A, and that scores are not necessarily integers.\r\n\r\n\r\nExample:\r\nInput: \r\nA = [9,1,2,3,9]\r\nK = 3\r\nOutput: 20\r\nExplanation: \r\nThe best choice is to partition A into [9], [1, 2, 3], [9]. The answer is 9 + (1 + 2 + 3) / 3 + 9 = 20.\r\nWe could have also partitioned A into [9, 1], [2], [3, 9], for example.\r\nThat partition would lead to a score of 5 + 2 + 6 = 13, which is worse.\r\n\r\n\r\n \r\n\r\nNote: \r\n\r\n\r\n\t1 <= A.length <= 100.\r\n\t1 <= A[i] <= 10000.\r\n\t1 <= K <= A.length.\r\n\tAnswers within 10^-6 of the correct answer will be accepted as correct.",
        "level": 2,
        "paid_only": false,
        "question_id": 831,
        "slug": "largest-sum-of-averages",
        "tags": [],
        "title": "Largest Sum of Averages",
        "url": "https://leetcode.com/problems/largest-sum-of-averages/description/"
    },
    "832": {
        "description": "We are given the head node root of a binary tree, where additionally every node's value is either a 0 or a 1.\r\n\r\nReturn the same tree where every subtree (of the given tree) not containing a 1 has been removed.\r\n\r\n(Recall that the subtree of a node X is X, plus every node that is a descendant of X.)\r\n\r\n\r\nExample 1:\r\nInput: [1,null,0,0,1]\r\nOutput: [1,null,0,null,1]\r\n \r\nExplanation: \r\nOnly the red nodes satisfy the property \"every subtree not containing a 1\".\r\nThe diagram on the right represents the answer.\r\n\r\n\r\n\r\n\r\n\r\nExample 2:\r\nInput: [1,0,1,0,0,0,1]\r\nOutput: [1,null,1,null,1]\r\n\r\n\r\n\r\n\r\n\r\n\r\nExample 3:\r\nInput: [1,1,0,1,1,0,1,0]\r\nOutput: [1,1,0,1,1,null,1]\r\n\r\n\r\n\r\n\r\n\r\nNote: \r\n\r\n\r\n\tThe binary tree will have at most 100 nodes.\r\n\tThe value of each node will only be 0 or 1.",
        "level": 2,
        "paid_only": false,
        "question_id": 832,
        "slug": "binary-tree-pruning",
        "tags": [],
        "title": "Binary Tree Pruning",
        "url": "https://leetcode.com/problems/binary-tree-pruning/description/"
    },
    "833": {
        "description": "We have a list of bus routes. Each routes[i] is a bus route that the i-th bus repeats forever. For example if routes[0] = [1, 5, 7], this means that the first bus (0-th indexed) travels in the sequence 1->5->7->1->5->7->1->... forever.\r\n\r\nWe start at bus stop S (initially not on a bus), and we want to go to bus stop T. Travelling by buses only, what is the least number of buses we must take to reach our destination? Return -1 if it is not possible.\r\n\r\n\r\nExample:\r\nInput: \r\nroutes = [[1, 2, 7], [3, 6, 7]]\r\nS = 1\r\nT = 6\r\nOutput: 2\r\nExplanation: \r\nThe best strategy is take the first bus to the bus stop 7, then take the second bus to the bus stop 6.\r\n\r\n\r\nNote: \r\n\r\n\r\n\t1 <= routes.length <= 500.\r\n\t1 <= routes[i].length <= 500.\r\n\t0 <= routes[i][j] < 10 ^ 6.",
        "level": 3,
        "paid_only": false,
        "question_id": 833,
        "slug": "bus-routes",
        "tags": [],
        "title": "Bus Routes",
        "url": "https://leetcode.com/problems/bus-routes/description/"
    },
    "834": {
        "description": "We had some 2-dimensional coordinates, like \"(1, 3)\" or \"(2, 0.5)\".  Then, we removed all commas, decimal points, and spaces, and ended up with the string S.  Return a list of strings representing all possibilities for what our original coordinates could have been.\r\n\r\nOur original representation never had extraneous zeroes, so we never started with numbers like \"00\", \"0.0\", \"0.00\", \"1.0\", \"001\", \"00.01\", or any other number that can be represented with less digits.  Also, a decimal point within a number never occurs without at least one digit occuring before it, so we never started with numbers like \".1\".\r\n\r\nThe final answer list can be returned in any order.  Also note that all coordinates in the final answer have exactly one space between them (occurring after the comma.)\r\n\r\n\r\nExample 1:\r\nInput: \"(123)\"\r\nOutput: [\"(1, 23)\", \"(12, 3)\", \"(1.2, 3)\", \"(1, 2.3)\"]\r\n\r\n\r\n\r\nExample 2:\r\nInput: \"(00011)\"\r\nOutput:  [\"(0.001, 1)\", \"(0, 0.011)\"]\r\nExplanation: \r\n0.0, 00, 0001 or 00.01 are not allowed.\r\n\r\n\r\n\r\nExample 3:\r\nInput: \"(0123)\"\r\nOutput: [\"(0, 123)\", \"(0, 12.3)\", \"(0, 1.23)\", \"(0.1, 23)\", \"(0.1, 2.3)\", \"(0.12, 3)\"]\r\n\r\n\r\n\r\nExample 4:\r\nInput: \"(100)\"\r\nOutput: [(10, 0)]\r\nExplanation: \r\n1.0 is not allowed.\r\n\r\n\r\n \r\n\r\nNote: \r\n\r\n\r\n\t4 <= S.length <= 12.\r\n\tS[0] = \"(\", S[S.length - 1] = \")\", and the other elements in S are digits.\r\n\r\n\r\n ",
        "level": 2,
        "paid_only": false,
        "question_id": 834,
        "slug": "ambiguous-coordinates",
        "tags": [],
        "title": "Ambiguous Coordinates",
        "url": "https://leetcode.com/problems/ambiguous-coordinates/description/"
    },
    "835": {
        "description": "We are given head, the head node of a linked list containing unique integer values.\r\n\r\nWe are also given the list G, a subset of the values in the linked list.\r\n\r\nReturn the number of connected components in G, where two values are connected if they appear consecutively in the linked list.\r\n\r\nExample 1:\r\n\r\n\r\nInput: \r\nhead: 0->1->2->3\r\nG = [0, 1, 3]\r\nOutput: 2\r\nExplanation: \r\n0 and 1 are connected, so [0, 1] and [3] are the two connected components.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \r\nhead: 0->1->2->3->4\r\nG = [0, 3, 1, 4]\r\nOutput: 2\r\nExplanation: \r\n0 and 1 are connected, 3 and 4 are connected, so [0, 1] and [3, 4] are the two connected components.\r\n\r\n\r\nNote: \r\n\r\n\r\n\tIf N is the length of the linked list given by head, 1 <= N <= 10000.\r\n\tThe value of each node in the linked list will be in the range [0, N - 1].\r\n\t1 <= G.length <= 10000.\r\n\tG is a subset of all values in the linked list.",
        "level": 2,
        "paid_only": false,
        "question_id": 835,
        "slug": "linked-list-components",
        "tags": [],
        "title": "Linked List Components",
        "url": "https://leetcode.com/problems/linked-list-components/description/"
    },
    "836": {
        "description": "Your car starts at position 0 and speed +1 on an infinite number line.  (Your car can go into negative positions.)\r\n\r\nYour car drives automatically according to a sequence of instructions A (accelerate) and R (reverse).\r\n\r\nWhen you get an instruction \"A\", your car does the following: position += speed, speed *= 2.\r\n\r\nWhen you get an instruction \"R\", your car does the following: if your speed is positive then speed = -1 , otherwise speed = 1.  (Your position stays the same.)\r\n\r\nFor example, after commands \"AAR\", your car goes to positions 0->1->3->3, and your speed goes to 1->2->4->-1.\r\n\r\nNow for some target position, say the length of the shortest sequence of instructions to get there.\r\n\r\n\r\nExample 1:\r\nInput: \r\ntarget = 3\r\nOutput: 2\r\nExplanation: \r\nThe shortest instruction sequence is \"AA\".\r\nYour position goes from 0->1->3.\r\n\r\n\r\n\r\nExample 2:\r\nInput: \r\ntarget = 6\r\nOutput: 5\r\nExplanation: \r\nThe shortest instruction sequence is \"AAARA\".\r\nYour position goes from 0->1->3->7->7->6.\r\n\r\n\r\n \r\n\r\nNote: \r\n\r\n\r\n\t1 <= target <= 10000.",
        "level": 3,
        "paid_only": false,
        "question_id": 836,
        "slug": "race-car",
        "tags": [],
        "title": "Race Car",
        "url": "https://leetcode.com/problems/race-car/description/"
    },
    "837": {
        "description": "Given a paragraph and a list of banned words, return the most frequent word that is not in the list of banned words.  It is guaranteed there is at least one word that isn't banned, and that the answer is unique.\r\n\r\nWords in the list of banned words are given in lowercase, and free of punctuation.  Words in the paragraph are not case sensitive.  The answer is in lowercase.\r\n\r\n\r\nExample:\r\nInput: \r\nparagraph = \"Bob hit a ball, the hit BALL flew far after it was hit.\"\r\nbanned = [\"hit\"]\r\nOutput: \"ball\"\r\nExplanation: \r\n\"hit\" occurs 3 times, but it is a banned word.\r\n\"ball\" occurs twice (and no other word does), so it is the most frequent non-banned word in the paragraph. \r\nNote that words in the paragraph are not case sensitive,\r\nthat punctuation is ignored (even if adjacent to words, such as \"ball,\"), \r\nand that \"hit\" isn't the answer even though it occurs more because it is banned.\r\n\r\n\r\n \r\n\r\nNote: \r\n\r\n\r\n\t1 <= paragraph.length <= 1000.\r\n\t1 <= banned.length <= 100.\r\n\t1 <= banned[i].length <= 10.\r\n\tThe answer is unique, and written in lowercase (even if its occurrences in paragraph may have uppercase symbols, and even if it is a proper noun.)\r\n\tparagraph only consists of letters, spaces, or the punctuation symbols !?',;.\r\n\tDifferent words in paragraph are always separated by a space.\r\n\tThere are no hyphens or hyphenated words.\r\n\tWords only consist of letters, never apostrophes or other punctuation symbols.\r\n\r\n\r\n ",
        "level": 1,
        "paid_only": false,
        "question_id": 837,
        "slug": "most-common-word",
        "tags": [],
        "title": "Most Common Word",
        "url": "https://leetcode.com/problems/most-common-word/description/"
    },
    "838": {
        "description": "Design your implementation of the linked list. You can choose to use the singly linked list or the doubly linked list. A node in a singly linked list should have two attributes: val and next. val is the value of the current node, and next is a pointer/reference to the next node. If you want to use the doubly linked list, you will need one more attribute prev to indicate the previous node in the linked list. Assume all nodes in the linked list are 0-indexed.\r\n\r\nImplement these functions in your linked list class:\r\n\r\n\r\n\tget(index) : Get the value of the index-th node in the linked list. If the index is invalid, return -1.\r\n\taddAtHead(val) : Add a node of value val before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.\r\n\taddAtTail(val) : Append a node of value val to the last element of the linked list.\r\n\taddAtIndex(index, val) : Add a node of value val before the index-th node in the linked list. If index equals to the length of linked list, the node will be appended to the end of linked list. If index is greater than the length, the node will not be inserted.\r\n\tdeleteAtIndex(index) : Delete the index-th node in the linked list, if the index is valid.\r\n\r\n\r\nExample:\r\n\r\n\r\nMyLinkedList linkedList = new MyLinkedList();\r\nlinkedList.addAtHead(1);\r\nlinkedList.addAtTail(3);\r\nlinkedList.addAtIndex(1, 2);  // linked list becomes 1->2->3\r\nlinkedList.get(1);            // returns 2\r\nlinkedList.deleteAtIndex(1);  // now the linked list is 1->3\r\nlinkedList.get(1);            // returns 3\r\n\r\n\r\nNote:\r\n\r\n\r\n\tAll values will be in the range of [1, 1000].\r\n\tThe number of operations will be in the range of [1, 1000].\r\n\tPlease do not use the built-in LinkedList library.",
        "level": 1,
        "paid_only": false,
        "question_id": 838,
        "slug": "design-linked-list",
        "tags": [],
        "title": "Design Linked List",
        "url": "https://leetcode.com/problems/design-linked-list/description/"
    },
    "839": {
        "description": "Given a list of words, we may encode it by writing a reference string S and a list of indexes A.\r\n\r\nFor example, if the list of words is [\"time\", \"me\", \"bell\"], we can write it as S = \"time#bell#\" and indexes = [0, 2, 5].\r\n\r\nThen for each index, we will recover the word by reading from the reference string from that index until we reach a \"#\" character.\r\n\r\nWhat is the length of the shortest reference string S possible that encodes the given words?\r\n\r\nExample:\r\n\r\n\r\nInput: words = [\"time\", \"me\", \"bell\"]\r\nOutput: 10\r\nExplanation: S = \"time#bell#\" and indexes = [0, 2, 5].\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= words.length <= 2000.\r\n\t1 <= words[i].length <= 7.\r\n\tEach word has only lowercase letters.",
        "level": 2,
        "paid_only": false,
        "question_id": 839,
        "slug": "short-encoding-of-words",
        "tags": [],
        "title": "Short Encoding of Words",
        "url": "https://leetcode.com/problems/short-encoding-of-words/description/"
    },
    "841": {
        "description": "Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.\r\n\r\nExample 1:\r\n\r\n\r\nInput: S = \"loveleetcode\", C = 'e'\r\nOutput: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tS string length is in [1, 10000].\r\n\tC is a single character, and guaranteed to be in string S.\r\n\tAll letters in S and C are lowercase.",
        "level": 1,
        "paid_only": false,
        "question_id": 841,
        "slug": "shortest-distance-to-a-character",
        "tags": [],
        "title": "Shortest Distance to a Character",
        "url": "https://leetcode.com/problems/shortest-distance-to-a-character/description/"
    },
    "842": {
        "description": "On a table are N cards, with a positive integer printed on the front and back of each card (possibly different).\r\n\r\nWe flip any number of cards, and after we choose one card. \r\n\r\nIf the number X on the back of the chosen card is not on the front of any card, then this number X is good.\r\n\r\nWhat is the smallest number that is good?  If no number is good, output 0.\r\n\r\nHere, fronts[i] and backs[i] represent the number on the front and back of card i. \r\n\r\nA flip swaps the front and back numbers, so the value on the front is now on the back and vice versa.\r\n\r\nExample:\r\n\r\n\r\nInput: fronts = [1,2,4,4,7], backs = [1,3,4,1,3]\r\nOutput: 2\r\nExplanation: If we flip the second card, the fronts are [1,3,4,4,7] and the backs are [1,2,4,1,3].\r\nWe choose the second card, which has number 2 on the back, and it isn't on the front of any card, so 2 is good.\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= fronts.length == backs.length <= 1000.\r\n\t1 <= fronts[i] <= 2000.\r\n\t1 <= backs[i] <= 2000.",
        "level": 2,
        "paid_only": false,
        "question_id": 842,
        "slug": "card-flipping-game",
        "tags": [],
        "title": "Card Flipping Game",
        "url": "https://leetcode.com/problems/card-flipping-game/description/"
    },
    "843": {
        "description": "Given an array of unique integers, each integer is strictly greater than 1.\r\n\r\nWe make a binary tree using these integers and each number may be used for any number of times.\r\n\r\nEach non-leaf node's value should be equal to the product of the values of it's children.\r\n\r\nHow many binary trees can we make?  Return the answer modulo 10 ** 9 + 7.\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = [2, 4]\r\nOutput: 3\r\nExplanation: We can make these trees: [2], [4], [4, 2, 2]\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = [2, 4, 5, 10]\r\nOutput: 7\r\nExplanation: We can make these trees: [2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2].\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length <= 1000.\r\n\t2 <= A[i] <= 10 ^ 9.",
        "level": 2,
        "paid_only": false,
        "question_id": 843,
        "slug": "binary-trees-with-factors",
        "tags": [],
        "title": "Binary Trees With Factors",
        "url": "https://leetcode.com/problems/binary-trees-with-factors/description/"
    },
    "851": {
        "description": "A sentence S is given, composed of words separated by spaces. Each word consists of lowercase and uppercase letters only.\r\n\r\nWe would like to convert the sentence to \"Goat Latin\" (a made-up language similar to Pig Latin.)\r\n\r\nThe rules of Goat Latin are as follows:\r\n\r\n\r\n\tIf a word begins with a vowel (a, e, i, o, or u), append \"ma\" to the end of the word.\r\n\tFor example, the word 'apple' becomes 'applema'.\r\n\t \r\n\tIf a word begins with a consonant (i.e. not a vowel), remove the first letter and append it to the end, then add \"ma\".\r\n\tFor example, the word \"goat\" becomes \"oatgma\".\r\n\t \r\n\tAdd one letter 'a' to the end of each word per its word index in the sentence, starting with 1.\r\n\tFor example, the first word gets \"a\" added to the end, the second word gets \"aa\" added to the end and so on.\r\n\r\n\r\nReturn the final sentence representing the conversion from S to Goat Latin. \r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: \"I speak Goat Latin\"\r\nOutput: \"Imaa peaksmaaa oatGmaaaa atinLmaaaaa\"\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"The quick brown fox jumped over the lazy dog\"\r\nOutput: \"heTmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa\"\r\n\r\n\r\n \r\n\r\nNotes:\r\n\r\n\r\n\tS contains only uppercase, lowercase and spaces. Exactly one space between each word.\r\n\t1 <= S.length <= 150.",
        "level": 1,
        "paid_only": false,
        "question_id": 851,
        "slug": "goat-latin",
        "tags": [],
        "title": "Goat Latin",
        "url": "https://leetcode.com/problems/goat-latin/description/"
    },
    "852": {
        "description": "Some people will make friend requests. The list of their ages is given and ages[i] is the age of the ith person. \r\n\r\nPerson A will NOT friend request person B (B != A) if any of the following conditions are true:\r\n\r\n\r\n\tage[B] <= 0.5 * age[A] + 7\r\n\tage[B] > age[A]\r\n\tage[B] > 100 && age[A] < 100\r\n\r\n\r\nOtherwise, A will friend request B.\r\n\r\nNote that if A requests B, B does not necessarily request A.  Also, people will not friend request themselves.\r\n\r\nHow many total friend requests are made?\r\n\r\nExample 1:\r\n\r\n\r\nInput: [16,16]\r\nOutput: 2\r\nExplanation: 2 people friend request each other.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [16,17,18]\r\nOutput: 2\r\nExplanation: Friend requests are made 17 -> 16, 18 -> 17.\r\n\r\nExample 3:\r\n\r\n\r\nInput: [20,30,100,110,120]\r\nOutput: \r\nExplanation: Friend requests are made 110 -> 100, 120 -> 110, 120 -> 100.\r\n\r\n\r\n \r\n\r\nNotes:\r\n\r\n\r\n\t1 <= ages.length <= 20000.\r\n\t1 <= ages[i] <= 120.",
        "level": 2,
        "paid_only": false,
        "question_id": 852,
        "slug": "friends-of-appropriate-ages",
        "tags": [],
        "title": "Friends Of Appropriate Ages",
        "url": "https://leetcode.com/problems/friends-of-appropriate-ages/description/"
    },
    "853": {
        "description": "We have jobs: difficulty[i] is the difficulty of the ith job, and profit[i] is the profit of the ith job. \r\n\r\nNow we have some workers. worker[i] is the ability of the ith worker, which means that this worker can only complete a job with difficulty at most worker[i]. \r\n\r\nEvery worker can be assigned at most one job, but one job can be completed multiple times.\r\n\r\nFor example, if 3 people attempt the same job that pays $1, then the total profit will be $3.  If a worker cannot complete any job, his profit is $0.\r\n\r\nWhat is the most profit we can make?\r\n\r\nExample 1:\r\n\r\n\r\nInput: difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7]\r\nOutput: 100 \r\nExplanation: Workers are assigned jobs of difficulty [4,4,6,6] and they get profit of [20,20,30,30] seperately.\r\n\r\nNotes:\r\n\r\n\r\n\t1 <= difficulty.length = profit.length <= 10000\r\n\t1 <= worker.length <= 10000\r\n\tdifficulty[i], profit[i], worker[i]  are in range [1, 10^5]",
        "level": 2,
        "paid_only": false,
        "question_id": 853,
        "slug": "most-profit-assigning-work",
        "tags": [],
        "title": "Most Profit Assigning Work",
        "url": "https://leetcode.com/problems/most-profit-assigning-work/description/"
    },
    "854": {
        "description": "In a 2D grid of 0s and 1s, we change at most one 0 to a 1.\r\n\r\nAfter, what is the size of the largest island? (An island is a 4-directionally connected group of 1s).\r\n\r\nExample 1:\r\n\r\n\r\nInput: [[1, 0], [0, 1]]\r\nOutput: 3\r\nExplanation: Change one 0 to 1 and connect two 1s, then we get an island with area = 3.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [[1, 1], [1, 0]]\r\nOutput: 4\r\nExplanation: Change the 0 to 1 and make the island bigger, only one island with area = 1.\r\n\r\nExample 3:\r\n\r\n\r\nInput: [[1, 1], [1, 1]]\r\nOutput: 4\r\nExplanation: Can't change any 0 to 1, only one island with area = 1.\r\n\r\n \r\n\r\nNotes:\r\n\r\n\r\n\t1 <= grid.length = grid[0].length <= 50.\r\n\t0 <= grid[i][j] <= 1.\r\n\r\n\r\n ",
        "level": 3,
        "paid_only": false,
        "question_id": 854,
        "slug": "making-a-large-island",
        "tags": [],
        "title": "Making A Large Island",
        "url": "https://leetcode.com/problems/making-a-large-island/description/"
    },
    "855": {
        "description": "A character is unique in string S if it occurs exactly once in it.\r\n\r\nFor example, in string S = \"LETTER\", the only unique characters are \"L\" and \"R\".\r\n\r\nLet's define UNIQ(S) as the number of unique characters in string S.\r\n\r\nFor example, UNIQ(\"LETTER\") =  2.\r\n\r\nGiven a string S with only uppercases, calculate the sum of UNIQ(substring) over all non-empty substrings of S.\r\n\r\nIf there are two or more equal substrings at different positions in S, we consider them different.\r\n\r\nSince the answer can be very large, return the answer modulo 10 ^ 9 + 7.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: \"ABC\"\r\nOutput: 10\r\nExplanation: All possible substrings are: \"A\",\"B\",\"C\",\"AB\",\"BC\" and \"ABC\".\r\nEvey substring is composed with only unique letters.\r\nSum of lengths of all substring is 1 + 1 + 1 + 2 + 2 + 3 = 10\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"ABA\"\r\nOutput: 8\r\nExplanation: The same as example 1, except uni(\"ABA\") = 1.\r\n\r\n\r\n \r\n\r\nNote: 0 <= S.length <= 10000.",
        "level": 3,
        "paid_only": false,
        "question_id": 855,
        "slug": "unique-letter-string",
        "tags": [],
        "title": "Unique Letter String",
        "url": "https://leetcode.com/problems/unique-letter-string/description/"
    },
    "856": {
        "description": "Given a positive integer N, how many ways can we write it as a sum of consecutive positive integers?\r\n\r\nExample 1:\r\n\r\n\r\nInput: 5\r\nOutput: 2\r\nExplanation: 5 = 5 = 2 + 3\r\n\r\nExample 2:\r\n\r\n\r\nInput: 9\r\nOutput: 3\r\nExplanation: 9 = 9 = 4 + 5 = 2 + 3 + 4\r\n\r\nExample 3:\r\n\r\n\r\nInput: 15\r\nOutput: 4\r\nExplanation: 15 = 15 = 8 + 7 = 4 + 5 + 6 = 1 + 2 + 3 + 4 + 5\r\n\r\nNote: 1 <= N <= 10 ^ 9.",
        "level": 2,
        "paid_only": false,
        "question_id": 856,
        "slug": "consecutive-numbers-sum",
        "tags": [],
        "title": "Consecutive Numbers Sum",
        "url": "https://leetcode.com/problems/consecutive-numbers-sum/description/"
    },
    "857": {
        "description": "In a string S of lowercase letters, these letters form consecutive groups of the same character.\r\n\r\nFor example, a string like S = \"abbxxxxzyy\" has the groups \"a\", \"bb\", \"xxxx\", \"z\" and \"yy\".\r\n\r\nCall a group large if it has 3 or more characters.  We would like the starting and ending positions of every large group.\r\n\r\nThe final answer should be in lexicographic order.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: \"abbxxxxzzy\"\r\nOutput: [[3,6]]\r\nExplanation: \"xxxx\" is the single large group with starting  3 and ending positions 6.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"abc\"\r\nOutput: []\r\nExplanation: We have \"a\",\"b\" and \"c\" but no large group.\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: \"abcdddeeeeaabbbcd\"\r\nOutput: [[3,5],[6,9],[12,14]]\r\n\r\n \r\n\r\nNote:  1 <= S.length <= 1000",
        "level": 1,
        "paid_only": false,
        "question_id": 857,
        "slug": "positions-of-large-groups",
        "tags": [],
        "title": "Positions of Large Groups",
        "url": "https://leetcode.com/problems/positions-of-large-groups/description/"
    },
    "858": {
        "description": "We are given a personal information string S, which may represent either an email address or a phone number.\r\n\r\nWe would like to mask this personal information according to the following rules:\r\n\r\n\r\n1. Email address:\r\n\r\nWe define a name to be a string of length ≥ 2 consisting of only lowercase letters a-z or uppercase letters A-Z.\r\n\r\nAn email address starts with a name, followed by the symbol '@', followed by a name, followed by the dot '.' and followed by a name. \r\n\r\nAll email addresses are guaranteed to be valid and in the format of \"name1@name2.name3\".\r\n\r\nTo mask an email, all names must be converted to lowercase and all letters between the first and last letter of the first name must be replaced by 5 asterisks '*'.\r\n\r\n\r\n2. Phone number:\r\n\r\nA phone number is a string consisting of only the digits 0-9 or the characters from the set {'+', '-', '(', ')', ' '}. You may assume a phone number contains 10 to 13 digits.\r\n\r\nThe last 10 digits make up the local number, while the digits before those make up the country code. Note that the country code is optional. We want to expose only the last 4 digits and mask all other digits.\r\n\r\nThe local number should be formatted and masked as \"***-***-1111\", where 1 represents the exposed digits.\r\n\r\nTo mask a phone number with country code like \"+111 111 111 1111\", we write it in the form \"+***-***-***-1111\".  The '+' sign and the first '-' sign before the local number should only exist if there is a country code.  For example, a 12 digit phone number mask should start with \"+**-\".\r\n\r\nNote that extraneous characters like \"(\", \")\", \" \", as well as extra dashes or plus signs not part of the above formatting scheme should be removed.\r\n\r\n \r\n\r\nReturn the correct \"mask\" of the information provided.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: \"LeetCode@LeetCode.com\"\r\nOutput: \"l*****e@leetcode.com\"\r\nExplanation: All names are converted to lowercase, and the letters between the\r\n             first and last letter of the first name is replaced by 5 asterisks.\r\n             Therefore, \"leetcode\" -> \"l*****e\".\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"AB@qq.com\"\r\nOutput: \"a*****b@qq.com\"\r\nExplanation: There must be 5 asterisks between the first and last letter \r\n             of the first name \"ab\". Therefore, \"ab\" -> \"a*****b\".\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: \"1(234)567-890\"\r\nOutput: \"***-***-7890\"\r\nExplanation: 10 digits in the phone number, which means all digits make up the local number.\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: \"86-(10)12345678\"\r\nOutput: \"+**-***-***-5678\"\r\nExplanation: 12 digits, 2 digits for country code and 10 digits for local number. \r\n\r\n\r\nNotes:\r\n\r\n\r\n\tS.length <= 40.\r\n\tEmails have length at least 8.\r\n\tPhone numbers have length at least 10.",
        "level": 2,
        "paid_only": false,
        "question_id": 858,
        "slug": "masking-personal-information",
        "tags": [],
        "title": "Masking Personal Information",
        "url": "https://leetcode.com/problems/masking-personal-information/description/"
    },
    "859": {
        "description": "Design your implementation of the circular double-ended queue (deque).\r\n\r\nYour implementation should support following operations:\r\n\r\n\r\n\tMyCircularDeque(k): Constructor, set the size of the deque to be k.\r\n\tinsertFront(): Adds an item at the front of Deque. Return true if the operation is successful.\r\n\tinsertLast(): Adds an item at the rear of Deque. Return true if the operation is successful.\r\n\tdeleteFront(): Deletes an item from the front of Deque. Return true if the operation is successful.\r\n\tdeleteLast(): Deletes an item from the rear of Deque. Return true if the operation is successful.\r\n\tgetFront(): Gets the front item from the Deque. If the deque is empty, return -1.\r\n\tgetRear(): Gets the last item from Deque. If the deque is empty, return -1.\r\n\tisEmpty(): Checks whether Deque is empty or not. \r\n\tisFull(): Checks whether Deque is full or not.\r\n\r\n\r\n \r\n\r\nExample:\r\n\r\n\r\nMyCircularDeque circularDeque = new MycircularDeque(3); // set the size to be 3\r\ncircularDeque.insertLast(1);\t\t\t// return true\r\ncircularDeque.insertLast(2);\t\t\t// return true\r\ncircularDeque.insertFront(3);\t\t\t// return true\r\ncircularDeque.insertFront(4);\t\t\t// return false, the queue is full\r\ncircularDeque.getRear();  \t\t\t// return 32\r\ncircularDeque.isFull();\t\t\t\t// return true\r\ncircularDeque.deleteLast();\t\t\t// return true\r\ncircularDeque.insertFront(4);\t\t\t// return true\r\ncircularDeque.getFront();\t\t\t// return 4\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tAll values will be in the range of [0, 1000].\r\n\tThe number of operations will be in the range of [1, 1000].\r\n\tPlease do not use the built-in Deque library.",
        "level": 2,
        "paid_only": false,
        "question_id": 859,
        "slug": "design-circular-deque",
        "tags": [],
        "title": "Design Circular Deque",
        "url": "https://leetcode.com/problems/design-circular-deque/description/"
    },
    "860": {
        "description": "Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle and the last position is connected back to the first position to make a circle. It is also called \"Ring Buffer\".\r\n\r\nOne of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.\r\n\r\nYour implementation should support following operations:\r\n\r\n\r\n\tMyCircularQueue(k): Constructor, set the size of the queue to be k.\r\n\tFront: Get the front item from the queue. If the queue is empty, return -1.\r\n\tRear: Get the last item from the queue. If the queue is empty, return -1.\r\n\tenQueue(value): Insert an element into the circular queue. Return true if the operation is successful.\r\n\tdeQueue(): Delete an element from the circular queue. Return true if the operation is successful.\r\n\tisEmpty(): Checks whether the circular queue is empty or not.\r\n\tisFull(): Checks whether the circular queue is full or not.\r\n\r\n\r\n \r\n\r\nExample:\r\n\r\n\r\nMyCircularQueue circularQueue = new MycircularQueue(3); // set the size to be 3\r\ncircularQueue.enQueue(1);  // return true\r\ncircularQueue.enQueue(2);  // return true\r\ncircularQueue.enQueue(3);  // return true\r\ncircularQueue.enQueue(4);  // return false, the queue is full\r\ncircularQueue.Rear();  // return 3\r\ncircularQueue.isFull();  // return true\r\ncircularQueue.deQueue();  // return true\r\ncircularQueue.enQueue(4);  // return true\r\ncircularQueue.Rear();  // return 4\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tAll values will be in the range of [0, 1000].\r\n\tThe number of operations will be in the range of [1, 1000].\r\n\tPlease do not use the built-in Queue library.",
        "level": 2,
        "paid_only": false,
        "question_id": 860,
        "slug": "design-circular-queue",
        "tags": [],
        "title": "Design Circular Queue",
        "url": "https://leetcode.com/problems/design-circular-queue/description/"
    },
    "861": {
        "description": "Given a binary matrix A, we want to flip the image horizontally, then invert it, and return the resulting image.\r\n\r\nTo flip an image horizontally means that each row of the image is reversed.  For example, flipping [1, 1, 0] horizontally results in [0, 1, 1].\r\n\r\nTo invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0. For example, inverting [0, 1, 1] results in [1, 0, 0].\r\n\r\nExample 1:\r\n\r\n\r\nInput: [[1,1,0],[1,0,1],[0,0,0]]\r\nOutput: [[1,0,0],[0,1,0],[1,1,1]]\r\nExplanation: First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].\r\nThen, invert the image: [[1,0,0],[0,1,0],[1,1,1]]\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]\r\nOutput: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\r\nExplanation: First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].\r\nThen invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\r\n\r\n\r\nNotes:\r\n\r\n\r\n\t1 <= A.length = A[0].length <= 20\r\n\t0 <= A[i][j] <= 1",
        "level": 1,
        "paid_only": false,
        "question_id": 861,
        "slug": "flipping-an-image",
        "tags": [],
        "title": "Flipping an Image",
        "url": "https://leetcode.com/problems/flipping-an-image/description/"
    },
    "862": {
        "description": "To some string S, we will perform some replacement operations that replace groups of letters with new ones (not necessarily the same size).\r\n\r\nEach replacement operation has 3 parameters: a starting index i, a source word x and a target word y.  The rule is that if x starts at position i in the original string S, then we will replace that occurrence of x with y.  If not, we do nothing.\r\n\r\nFor example, if we have S = \"abcd\" and we have some replacement operation i = 2, x = \"cd\", y = \"ffff\", then because \"cd\" starts at position 2 in the original string S, we will replace it with \"ffff\".\r\n\r\nUsing another example on S = \"abcd\", if we have both the replacement operation i = 0, x = \"ab\", y = \"eee\", as well as another replacement operation i = 2, x = \"ec\", y = \"ffff\", this second operation does nothing because in the original string S[2] = 'c', which doesn't match x[0] = 'e'.\r\n\r\nAll these operations occur simultaneously.  It's guaranteed that there won't be any overlap in replacement: for example, S = \"abc\", indexes = [0, 1], sources = [\"ab\",\"bc\"] is not a valid test case.\r\n\r\nExample 1:\r\n\r\n\r\nInput: S = \"abcd\", indexes = [0,2], sources = [\"a\",\"cd\"], targets = [\"eee\",\"ffff\"]\r\nOutput: \"eeebffff\"\r\nExplanation: \"a\" starts at index 0 in S, so it's replaced by \"eee\".\r\n\"cd\" starts at index 2 in S, so it's replaced by \"ffff\".\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: S = \"abcd\", indexes = [0,2], sources = [\"ab\",\"ec\"], targets = [\"eee\",\"ffff\"]\r\nOutput: \"eeecd\"\r\nExplanation: \"ab\" starts at index 0 in S, so it's replaced by \"eee\". \r\n\"ec\" doesn't starts at index 2 in the original S, so we do nothing.\r\n\r\n\r\nNotes:\r\n\r\n\r\n\t0 <= indexes.length = sources.length = targets.length <= 100\r\n\t0 < indexes[i] < S.length <= 1000\r\n\tAll characters in given inputs are lowercase letters.\r\n\r\n\r\n ",
        "level": 2,
        "paid_only": false,
        "question_id": 862,
        "slug": "find-and-replace-in-string",
        "tags": [],
        "title": "Find And Replace in String",
        "url": "https://leetcode.com/problems/find-and-replace-in-string/description/"
    },
    "863": {
        "description": "An undirected, connected tree with N nodes labelled 0...N-1 and N-1 edges are given.\r\n\r\nThe ith edge connects nodes edges[i][0] and edges[i][1] together.\r\n\r\nReturn a list ans, where ans[i] is the sum of the distances between node i and all other nodes.\r\n\r\nExample 1:\r\n\r\n\r\nInput: N = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]\r\nOutput: [8,12,6,10,10,10]\r\nExplanation: \r\nHere is a diagram of the given tree:\r\n  0\r\n / \\\r\n1   2\r\n   /|\\\r\n  3 4 5\r\nWe can see that dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5)\r\nequals 1 + 1 + 2 + 2 + 2 = 8.  Hence, answer[0] = 8, and so on.\r\n\r\n\r\nNote: 1 <= N <= 10000",
        "level": 3,
        "paid_only": false,
        "question_id": 863,
        "slug": "sum-of-distances-in-tree",
        "tags": [],
        "title": "Sum of Distances in Tree",
        "url": "https://leetcode.com/problems/sum-of-distances-in-tree/description/"
    },
    "864": {
        "description": "Two images A and B are given, represented as binary, square matrices of the same size.  (A binary matrix has only 0s and 1s as values.)\r\n\r\nWe translate one image however we choose (sliding it left, right, up, or down any number of units), and place it on top of the other image.  After, the overlap of this translation is the number of positions that have a 1 in both images.\r\n\r\n(Note also that a translation does not include any kind of rotation.)\r\n\r\nWhat is the largest possible overlap?\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = [[1,1,0],\r\n            [0,1,0],\r\n            [0,1,0]]\r\n       B = [[0,0,0],\r\n            [0,1,1],\r\n            [0,0,1]]\r\nOutput: 3\r\nExplanation: We slide A to right by 1 unit and down by 1 unit.\r\n\r\nNotes: \r\n\r\n\r\n\t1 <= A.length = A[0].length = B.length = B[0].length <= 30\r\n\t0 <= A[i][j], B[i][j] <= 1",
        "level": 2,
        "paid_only": false,
        "question_id": 864,
        "slug": "image-overlap",
        "tags": [],
        "title": "Image Overlap",
        "url": "https://leetcode.com/problems/image-overlap/description/"
    },
    "866": {
        "description": "A rectangle is represented as a list [x1, y1, x2, y2], where (x1, y1) are the coordinates of its bottom-left corner, and (x2, y2) are the coordinates of its top-right corner.\r\n\r\nTwo rectangles overlap if the area of their intersection is positive.  To be clear, two rectangles that only touch at the corner or edges do not overlap.\r\n\r\nGiven two (axis-aligned) rectangles, return whether they overlap.\r\n\r\nExample 1:\r\n\r\n\r\nInput: rec1 = [0,0,2,2], rec2 = [1,1,3,3]\r\nOutput: true\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: rec1 = [0,0,1,1], rec2 = [1,0,2,1]\r\nOutput: false\r\n\r\n\r\nNotes:\r\n\r\n\r\n\tBoth rectangles rec1 and rec2 are lists of 4 integers.\r\n\tAll coordinates in rectangles will be between -10^9 and 10^9.",
        "level": 1,
        "paid_only": false,
        "question_id": 866,
        "slug": "rectangle-overlap",
        "tags": [],
        "title": "Rectangle Overlap",
        "url": "https://leetcode.com/problems/rectangle-overlap/description/"
    },
    "867": {
        "description": "Alice plays the following game, loosely based on the card game \"21\".\r\n\r\nAlice starts with 0 points, and draws numbers while she has less than K points.  During each draw, she gains an integer number of points randomly from the range [1, W], where W is an integer.  Each draw is independent and the outcomes have equal probabilities.\r\n\r\nAlice stops drawing numbers when she gets K or more points.  What is the probability that she has N or less points?\r\n\r\nExample 1:\r\n\r\n\r\nInput: N = 10, K = 1, W = 10\r\nOutput: 1.00000\r\nExplanation:  Alice gets a single card, then stops.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: N = 6, K = 1, W = 10\r\nOutput: 0.60000\r\nExplanation:  Alice gets a single card, then stops.\r\nIn 6 out of W = 10 possibilities, she is at or below N = 6 points.\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: N = 21, K = 17, W = 10\r\nOutput: 0.73278\r\n\r\nNote:\r\n\r\n\r\n\t0 <= K <= N <= 10000\r\n\t1 <= W <= 10000\r\n\tAnswers will be accepted as correct if they are within 10^-5 of the correct answer.\r\n\tThe judging time limit has been reduced for this question.",
        "level": 2,
        "paid_only": false,
        "question_id": 867,
        "slug": "new-21-game",
        "tags": [],
        "title": "New 21 Game",
        "url": "https://leetcode.com/problems/new-21-game/description/"
    },
    "868": {
        "description": "There are N dominoes in a line, and we place each domino vertically upright.\r\n\r\nIn the beginning, we simultaneously push some of the dominoes either to the left or to the right.\r\n\r\n\r\n\r\nAfter each second, each domino that is falling to the left pushes the adjacent domino on the left.\r\n\r\nSimilarly, the dominoes falling to the right push their adjacent dominoes standing on the right.\r\n\r\nWhen a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces.\r\n\r\nFor the purposes of this question, we will consider that a falling domino expends no additional force to a falling or already fallen domino.\r\n\r\nGiven a string \"S\" representing the initial state. S[i] = 'L', if the i-th domino has been pushed to the left; S[i] = 'R', if the i-th domino has been pushed to the right; S[i] = '.', if the i-th domino has not been pushed.\r\n\r\nReturn a string representing the final state. \r\n\r\nExample 1:\r\n\r\n\r\nInput: \".L.R...LR..L..\"\r\nOutput: \"LL.RR.LLRRLL..\"\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"RR.L\"\r\nOutput: \"RR.L\"\r\nExplanation: The first domino expends no additional force on the second domino.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t0 <= N <= 10^5\r\n\tString dominoes contains only 'L', 'R' and '.'",
        "level": 2,
        "paid_only": false,
        "question_id": 868,
        "slug": "push-dominoes",
        "tags": [],
        "title": "Push Dominoes",
        "url": "https://leetcode.com/problems/push-dominoes/description/"
    },
    "869": {
        "description": "Two strings X and Y are similar if we can swap two letters (in different positions) of X, so that it equals Y.\r\n\r\nFor example, \"tars\" and \"rats\" are similar (swapping at positions 0 and 2), and \"rats\" and \"arts\" are similar, but \"star\" is not similar to \"tars\", \"rats\", or \"arts\".\r\n\r\nTogether, these form two connected groups by similarity: {\"tars\", \"rats\", \"arts\"} and {\"star\"}.  Notice that \"tars\" and \"arts\" are in the same group even though they are not similar.  Formally, each group is such that a word is in the group if and only if it is similar to at least one other word in the group.\r\n\r\nWe are given a list A of strings.  Every string in A is an anagram of every other string in A.  How many groups are there?\r\n\r\nExample 1:\r\n\r\n\r\nInput: [\"tars\",\"rats\",\"arts\",\"star\"]\r\nOutput: 2\r\n\r\nNote:\r\n\r\n\r\n\tA.length <= 2000\r\n\tA[i].length <= 1000\r\n\tA.length * A[i].length <= 20000\r\n\tAll words in A consist of lowercase letters only.\r\n\tAll words in A have the same length and are anagrams of each other.\r\n\tThe judging time limit has been increased for this question.",
        "level": 3,
        "paid_only": false,
        "question_id": 869,
        "slug": "similar-string-groups",
        "tags": [],
        "title": "Similar String Groups",
        "url": "https://leetcode.com/problems/similar-string-groups/description/"
    },
    "870": {
        "description": "A 3 x 3 magic square is a 3 x 3 grid filled with distinct numbers from 1 to 9 such that each row, column, and both diagonals all have the same sum.\r\n\r\nGiven an grid of integers, how many 3 x 3 \"magic square\" subgrids are there?  (Each subgrid is contiguous).\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: [[4,3,8,4],\r\n        [9,5,1,9],\r\n        [2,7,6,2]]\r\nOutput: 1\r\nExplanation: \r\nThe following subgrid is a 3 x 3 magic square:\r\n438\r\n951\r\n276\r\n\r\nwhile this one is not:\r\n384\r\n519\r\n762\r\n\r\nIn total, there is only one magic square inside the given grid.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= grid.length <= 10\r\n\t1 <= grid[0].length <= 10\r\n\t0 <= grid[i][j] <= 15",
        "level": 1,
        "paid_only": false,
        "question_id": 870,
        "slug": "magic-squares-in-grid",
        "tags": [],
        "title": "Magic Squares In Grid",
        "url": "https://leetcode.com/problems/magic-squares-in-grid/description/"
    },
    "871": {
        "description": "There are N rooms and you start in room 0.  Each room has a distinct number in 0, 1, 2, ..., N-1, and each room may have some keys to access the next room. \r\n\r\nFormally, each room i has a list of keys rooms[i], and each key rooms[i][j] is an integer in [0, 1, ..., N-1] where N = rooms.length.  A key rooms[i][j] = v opens the room with number v.\r\n\r\nInitially, all the rooms start locked (except for room 0). \r\n\r\nYou can walk back and forth between rooms freely.\r\n\r\nReturn true if and only if you can enter every room.\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [[1],[2],[3],[]]\r\nOutput: true\r\nExplanation:  \r\nWe start in room 0, and pick up key 1.\r\nWe then go to room 1, and pick up key 2.\r\nWe then go to room 2, and pick up key 3.\r\nWe then go to room 3.  Since we were able to go to every room, we return true.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [[1,3],[3,0,1],[2],[0]]\r\nOutput: false\r\nExplanation: We can't enter the room with number 2.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= rooms.length <= 1000\r\n\t0 <= rooms[i].length <= 1000\r\n\tThe number of keys in all rooms combined is at most 3000.",
        "level": 2,
        "paid_only": false,
        "question_id": 871,
        "slug": "keys-and-rooms",
        "tags": [],
        "title": "Keys and Rooms",
        "url": "https://leetcode.com/problems/keys-and-rooms/description/"
    },
    "872": {
        "description": "Given a string S of digits, such as S = \"123456579\", we can split it into a Fibonacci-like sequence [123, 456, 579].\r\n\r\nFormally, a Fibonacci-like sequence is a list F of non-negative integers such that:\r\n\r\n\r\n\t0 <= F[i] <= 2^31 - 1, (that is, each integer fits a 32-bit signed integer type);\r\n\tF.length >= 3;\r\n\tand F[i] + F[i+1] = F[i+2] for all 0 <= i < F.length - 2.\r\n\r\n\r\nAlso, note that when splitting the string into pieces, each piece must not have extra leading zeroes, except if the piece is the number 0 itself.\r\n\r\nReturn any Fibonacci-like sequence split from S, or return [] if it cannot be done.\r\n\r\nExample 1:\r\n\r\n\r\nInput: \"123456579\"\r\nOutput: [123,456,579]\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"11235813\"\r\nOutput: [1,1,2,3,5,8,13]\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: \"112358130\"\r\nOutput: []\r\nExplanation: The task is impossible.\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: \"0123\"\r\nOutput: []\r\nExplanation: Leading zeroes are not allowed, so \"01\", \"2\", \"3\" is not valid.\r\n\r\n\r\nExample 5:\r\n\r\n\r\nInput: \"1101111\"\r\nOutput: [110, 1, 111]\r\nExplanation: The output [11, 0, 11, 11] would also be accepted.\r\n\r\n\r\nNote: \r\n\r\n\r\n\t1 <= S.length <= 200\r\n\tS contains only digits.",
        "level": 2,
        "paid_only": false,
        "question_id": 872,
        "slug": "split-array-into-fibonacci-sequence",
        "tags": [],
        "title": "Split Array into Fibonacci Sequence",
        "url": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/description/"
    },
    "873": {
        "description": "This problem is an interactive problem new to the LeetCode platform.\r\n\r\nWe are given a word list of unique words, each word is 6 letters long, and one word in this list is chosen as secret.\r\n\r\nYou may call master.guess(word) to guess a word.  The guessed word should have type string and must be from the original list with 6 lowercase letters.\r\n\r\nThis function returns an integer type, representing the number of exact matches (value and position) of your guess to the secret word.  Also, if your guess is not in the given wordlist, it will return -1 instead.\r\n\r\nFor each test case, you have 10 guesses to guess the word. At the end of any number of calls, if you have made 10 or less calls to master.guess and at least one of these guesses was the secret, you pass the testcase.\r\n\r\nBesides the example test case below, there will be 5 additional test cases, each with 100 words in the word list.  The letters of each word in those testcases were chosen independently at random from 'a' to 'z', such that every word in the given word lists is unique.\r\n\r\n\r\nExample 1:\r\nInput: secret = \"acckzz\", wordlist = [\"acckzz\",\"ccbazz\",\"eiowzz\",\"abcczz\"]\r\n\r\nExplanation:\r\n\r\nmaster.guess(\"aaaaaa\") returns -1, because \"aaaaaa\" is not in wordlist.\r\nmaster.guess(\"acckzz\") returns 6, because \"acckzz\" is secret and has all 6 matches.\r\nmaster.guess(\"ccbazz\") returns 3, because \"ccbazz\" has 3 matches.\r\nmaster.guess(\"eiowzz\") returns 2, because \"eiowzz\" has 2 matches.\r\nmaster.guess(\"abcczz\") returns 4, because \"abcczz\" has 4 matches.\r\n\r\nWe made 5 calls to master.guess and one of them was the secret, so we pass the test case.\r\n\r\n\r\nNote:  Any solutions that attempt to circumvent the judge will result in disqualification.",
        "level": 3,
        "paid_only": false,
        "question_id": 873,
        "slug": "guess-the-word",
        "tags": [],
        "title": "Guess the Word",
        "url": "https://leetcode.com/problems/guess-the-word/description/"
    },
    "874": {
        "description": "Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: S = \"ab#c\", T = \"ad#c\"\r\nOutput: true\r\nExplanation: Both S and T become \"ac\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: S = \"ab##\", T = \"c#d#\"\r\nOutput: true\r\nExplanation: Both S and T become \"\".\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: S = \"a##c\", T = \"#a#c\"\r\nOutput: true\r\nExplanation: Both S and T become \"c\".\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: S = \"a#c\", T = \"b\"\r\nOutput: false\r\nExplanation: S becomes \"c\" while T becomes \"b\".\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= S.length <= 200\r\n\t1 <= T.length <= 200\r\n\tS and T only contain lowercase letters and '#' characters.\r\n\r\n\r\nFollow up:\r\n\r\n\r\n\tCan you solve it in O(N) time and O(1) space?",
        "level": 1,
        "paid_only": false,
        "question_id": 874,
        "slug": "backspace-string-compare",
        "tags": [],
        "title": "Backspace String Compare",
        "url": "https://leetcode.com/problems/backspace-string-compare/description/"
    },
    "875": {
        "description": "Let's call any (contiguous) subarray B (of A) a mountain if the following properties hold:\r\n\r\n\r\n\tB.length >= 3\r\n\tThere exists some 0 < i < B.length - 1 such that B[0] < B[1] < ... B[i-1] < B[i] > B[i+1] > ... > B[B.length - 1]\r\n\r\n\r\n(Note that B could be any subarray of A, including the entire array A.)\r\n\r\nGiven an array A of integers, return the length of the longest mountain. \r\n\r\nReturn 0 if there is no mountain.\r\n\r\nExample 1:\r\n\r\n\r\nInput: [2,1,4,7,3,2,5]\r\nOutput: 5\r\nExplanation: The largest mountain is [1,4,7,3,2] which has length 5.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [2,2,2]\r\nOutput: 0\r\nExplanation: There is no mountain.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t0 <= A.length <= 10000\r\n\t0 <= A[i] <= 10000\r\n\r\n\r\nFollow up:\r\n\r\n\r\n\tCan you solve it using only one pass?\r\n\tCan you solve it in O(1) space?",
        "level": 2,
        "paid_only": false,
        "question_id": 875,
        "slug": "longest-mountain-in-array",
        "tags": [],
        "title": "Longest Mountain in Array",
        "url": "https://leetcode.com/problems/longest-mountain-in-array/description/"
    },
    "876": {
        "description": "Alice has a hand of cards, given as an array of integers.\r\n\r\nNow she wants to rearrange the cards into groups so that each group is size W, and consists of W consecutive cards.\r\n\r\nReturn true if and only if she can.\r\n\r\n \r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: hand = [1,2,3,6,2,3,4,7,8], W = 3\r\nOutput: true\r\nExplanation: Alice's hand can be rearranged as [1,2,3],[2,3,4],[6,7,8].\r\n\r\nExample 2:\r\n\r\n\r\nInput: hand = [1,2,3,4,5], W = 4\r\nOutput: false\r\nExplanation: Alice's hand can't be rearranged into groups of 4.\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= hand.length <= 10000\r\n\t0 <= hand[i] <= 10^9\r\n\t1 <= W <= hand.length",
        "level": 2,
        "paid_only": false,
        "question_id": 876,
        "slug": "hand-of-straights",
        "tags": [],
        "title": "Hand of Straights",
        "url": "https://leetcode.com/problems/hand-of-straights/description/"
    },
    "877": {
        "description": "An undirected, connected graph of N nodes (labeled 0, 1, 2, ..., N-1) is given as graph.\r\n\r\ngraph.length = N, and j != i is in the list graph[i] exactly once, if and only if nodes i and j are connected.\r\n\r\nReturn the length of the shortest path that visits every node. You may start and stop at any node, you may revisit nodes multiple times, and you may reuse edges.\r\n\r\n \r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [[1,2,3],[0],[0],[0]]\r\nOutput: 4\r\nExplanation: One possible path is [1,0,2,0,3]\r\n\r\nExample 2:\r\n\r\n\r\nInput: [[1],[0,2,4],[1,3,4],[2],[1,2]]\r\nOutput: 4\r\nExplanation: One possible path is [0,1,4,2,3]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= graph.length <= 12\r\n\t0 <= graph[i].length < graph.length",
        "level": 3,
        "paid_only": false,
        "question_id": 877,
        "slug": "shortest-path-visiting-all-nodes",
        "tags": [],
        "title": "Shortest Path Visiting All Nodes",
        "url": "https://leetcode.com/problems/shortest-path-visiting-all-nodes/description/"
    },
    "878": {
        "description": "We have a string S of lowercase letters, and an integer array shifts.\r\n\r\nCall the shift of a letter, the next letter in the alphabet, (wrapping around so that 'z' becomes 'a'). \r\n\r\nFor example, shift('a') = 'b', shift('t') = 'u', and shift('z') = 'a'.\r\n\r\nNow for each shifts[i] = x, we want to shift the first i+1 letters of S, x times.\r\n\r\nReturn the final string after all such shifts to S are applied.\r\n\r\nExample 1:\r\n\r\n\r\nInput: S = \"abc\", shifts = [3,5,9]\r\nOutput: \"rpl\"\r\nExplanation: \r\nWe start with \"abc\".\r\nAfter shifting the first 1 letters of S by 3, we have \"dbc\".\r\nAfter shifting the first 2 letters of S by 5, we have \"igc\".\r\nAfter shifting the first 3 letters of S by 9, we have \"rpl\", the answer.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= S.length = shifts.length <= 20000\r\n\t0 <= shifts[i] <= 10 ^ 9",
        "level": 2,
        "paid_only": false,
        "question_id": 878,
        "slug": "shifting-letters",
        "tags": [],
        "title": "Shifting Letters",
        "url": "https://leetcode.com/problems/shifting-letters/description/"
    },
    "879": {
        "description": "In a row of seats, 1 represents a person sitting in that seat, and 0 represents that the seat is empty. \r\n\r\nThere is at least one empty seat, and at least one person sitting.\r\n\r\nAlex wants to sit in the seat such that the distance between him and the closest person to him is maximized. \r\n\r\nReturn that maximum distance to closest person.\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [1,0,0,0,1,0,1]\r\nOutput: 2\r\nExplanation: \r\nIf Alex sits in the second open seat (seats[2]), then the closest person has distance 2.\r\nIf Alex sits in any other open seat, the closest person has distance 1.\r\nThus, the maximum distance to the closest person is 2.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [1,0,0,0]\r\nOutput: 3\r\nExplanation: \r\nIf Alex sits in the last seat, the closest person is 3 seats away.\r\nThis is the maximum distance possible, so the answer is 3.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= seats.length <= 20000\r\n\tseats contains only 0s or 1s, at least one 0, and at least one 1.",
        "level": 1,
        "paid_only": false,
        "question_id": 879,
        "slug": "maximize-distance-to-closest-person",
        "tags": [],
        "title": "Maximize Distance to Closest Person",
        "url": "https://leetcode.com/problems/maximize-distance-to-closest-person/description/"
    },
    "880": {
        "description": "We are given a list of (axis-aligned) rectangles.  Each rectangle[i] = [x1, y1, x2, y2] , where (x1, y1) are the coordinates of the bottom-left corner, and (x2, y2) are the coordinates of the top-right corner of the ith rectangle.\r\n\r\nFind the total area covered by all rectangles in the plane.  Since the answer may be too large, return it modulo 10^9 + 7.\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [[0,0,2,2],[1,0,2,3],[1,0,3,1]]\r\nOutput: 6\r\nExplanation: As illustrated in the picture.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [[0,0,1000000000,1000000000]]\r\nOutput: 49\r\nExplanation: The answer is 10^18 modulo (10^9 + 7), which is (10^9)^2 = (-7)^2 = 49.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= rectangles.length <= 200\r\n\trectanges[i].length = 4\r\n\t0 <= rectangles[i][j] <= 10^9\r\n\tThe total area covered by all rectangles will never exceed 2^63 - 1 and thus will fit in a 64-bit signed integer.",
        "level": 3,
        "paid_only": false,
        "question_id": 880,
        "slug": "rectangle-area-ii",
        "tags": [],
        "title": "Rectangle Area II",
        "url": "https://leetcode.com/problems/rectangle-area-ii/description/"
    },
    "881": {
        "description": "In a group of N people (labelled 0, 1, 2, ..., N-1), each person has different amounts of money, and different levels of quietness.\r\n\r\nFor convenience, we'll call the person with label x, simply \"person x\".\r\n\r\nWe'll say that richer[i] = [x, y] if person x definitely has more money than person y.  Note that richer may only be a subset of valid observations.\r\n\r\nAlso, we'll say quiet[x] = q if person x has quietness q.\r\n\r\nNow, return answer, where answer[x] = y if y is the least quiet person (that is, the person y with the smallest value of quiet[y]), among all people who definitely have equal to or more money than person x.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: richer = [[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]], quiet = [3,2,5,4,6,1,7,0]\r\nOutput: [5,5,2,5,4,5,6,7]\r\nExplanation: \r\nanswer[0] = 5.\r\nPerson 5 has more money than 3, which has more money than 1, which has more money than 0.\r\nThe only person who is quieter (has lower quiet[x]) is person 7, but\r\nit isn't clear if they have more money than person 0.\r\n\r\nanswer[7] = 7.\r\nAmong all people that definitely have equal to or more money than person 7\r\n(which could be persons 3, 4, 5, 6, or 7), the person who is the quietest (has lower quiet[x])\r\nis person 7.\r\n\r\nThe other answers can be filled out with similar reasoning.\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= quiet.length = N <= 500\r\n\t0 <= quiet[i] < N, all quiet[i] are different.\r\n\t0 <= richer.length <= N * (N-1) / 2\r\n\t0 <= richer[i][j] < N\r\n\tricher[i][0] != richer[i][1]\r\n\tricher[i]'s are all different.\r\n\tThe observations in richer are all logically consistent.",
        "level": 2,
        "paid_only": false,
        "question_id": 881,
        "slug": "loud-and-rich",
        "tags": [],
        "title": "Loud and Rich",
        "url": "https://leetcode.com/problems/loud-and-rich/description/"
    },
    "882": {
        "description": "Let's call an array A a mountain if the following properties hold:\r\n\r\n\r\n\tA.length >= 3\r\n\tThere exists some 0 < i < A.length - 1 such that A[0] < A[1] < ... A[i-1] < A[i] > A[i+1] > ... > A[A.length - 1]\r\n\r\n\r\nGiven an array that is definitely a mountain, return any i such that A[0] < A[1] < ... A[i-1] < A[i] > A[i+1] > ... > A[A.length - 1].\r\n\r\nExample 1:\r\n\r\n\r\nInput: [0,1,0]\r\nOutput: 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [0,2,1,0]\r\nOutput: 1\r\n\r\n\r\nNote:\r\n\r\n\r\n\t3 <= A.length <= 10000\r\n\t0 <= A[i] <= 10^6\r\n\tA is a mountain, as defined above.",
        "level": 1,
        "paid_only": false,
        "question_id": 882,
        "slug": "peak-index-in-a-mountain-array",
        "tags": [],
        "title": "Peak Index in a Mountain Array",
        "url": "https://leetcode.com/problems/peak-index-in-a-mountain-array/description/"
    },
    "883": {
        "description": "N cars are going to the same destination along a one lane road.  The destination is target miles away.\r\n\r\nEach car i has a constant speed speed[i] (in miles per hour), and initial position position[i] miles towards the target along the road.\r\n\r\nA car can never pass another car ahead of it, but it can catch up to it, and drive bumper to bumper at the same speed.\r\n\r\nThe distance between these two cars is ignored - they are assumed to have the same position.\r\n\r\nA car fleet is some non-empty set of cars driving at the same position and same speed.  Note that a single car is also a car fleet.\r\n\r\nIf a car catches up to a car fleet right at the destination point, it will still be considered as one car fleet.\r\n\r\n\r\nHow many car fleets will arrive at the destination?\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: target = 12, position = [10,8,0,5,3], speed = [2,4,1,1,3]\r\nOutput: 3\r\nExplanation:\r\nThe cars starting at 10 and 8 become a fleet, meeting each other at 12.\r\nThe car starting at 0 doesn't catch up to any other car, so it is a fleet by itself.\r\nThe cars starting at 5 and 3 become a fleet, meeting each other at 6.\r\nNote that no other cars meet these fleets before the destination, so the answer is 3.\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\t0 <= N <= 10 ^ 4\r\n\t0 < target <= 10 ^ 6\r\n\t0 < speed[i] <= 10 ^ 6\r\n\t0 <= position[i] < target\r\n\tAll initial positions are different.",
        "level": 2,
        "paid_only": false,
        "question_id": 883,
        "slug": "car-fleet",
        "tags": [],
        "title": "Car Fleet",
        "url": "https://leetcode.com/problems/car-fleet/description/"
    },
    "884": {
        "description": "Strings A and B are K-similar (for some non-negative integer K) if we can swap the positions of two letters in A exactly K times so that the resulting string equals B.\r\n\r\nGiven two anagrams A and B, return the smallest K for which A and B are K-similar.\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = \"ab\", B = \"ba\"\r\nOutput: 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = \"abc\", B = \"bca\"\r\nOutput: 2\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: A = \"abac\", B = \"baca\"\r\nOutput: 2\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: A = \"aabc\", B = \"abca\"\r\nOutput: 2\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length == B.length <= 20\r\n\tA and B contain only lowercase letters from the set {'a', 'b', 'c', 'd', 'e', 'f'}",
        "level": 3,
        "paid_only": false,
        "question_id": 884,
        "slug": "k-similar-strings",
        "tags": [],
        "title": "K-Similar Strings",
        "url": "https://leetcode.com/problems/k-similar-strings/description/"
    },
    "885": {
        "description": "In an exam room, there are N seats in a single row, numbered 0, 1, 2, ..., N-1.\r\n\r\nWhen a student enters the room, they must sit in the seat that maximizes the distance to the closest person.  If there are multiple such seats, they sit in the seat with the lowest number.  (Also, if no one is in the room, then the student sits at seat number 0.)\r\n\r\nReturn a class ExamRoom(int N) that exposes two functions: ExamRoom.seat() returning an int representing what seat the student sat in, and ExamRoom.leave(int p) representing that the student in seat number p now leaves the room.  It is guaranteed that any calls to ExamRoom.leave(p) have a student sitting in seat p.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: [\"ExamRoom\",\"seat\",\"seat\",\"seat\",\"seat\",\"leave\",\"seat\"], [[10],[],[],[],[],[4],[]]\r\nOutput: [null,0,9,4,2,null,5]\r\nExplanation:\r\nExamRoom(10) -> null\r\nseat() -> 0, no one is in the room, then the student sits at seat number 0.\r\nseat() -> 9, the student sits at the last seat number 9.\r\nseat() -> 4, the student sits at the last seat number 4.\r\nseat() -> 2, the student sits at the last seat number 2.\r\nleave(4) -> null\r\nseat() -> 5, the student​​​​​​​ sits at the last seat number 5.\r\n\r\n\r\n​​​​​​​\r\n\r\nNote:\r\n\r\n\r\n\t1 <= N <= 10^9\r\n\tExamRoom.seat() and ExamRoom.leave() will be called at most 10^4 times across all test cases.\r\n\tCalls to ExamRoom.leave(p) are guaranteed to have a student currently sitting in seat number p.",
        "level": 2,
        "paid_only": false,
        "question_id": 885,
        "slug": "exam-room",
        "tags": [],
        "title": "Exam Room",
        "url": "https://leetcode.com/problems/exam-room/description/"
    },
    "886": {
        "description": "Given a balanced parentheses string S, compute the score of the string based on the following rule:\r\n\r\n\r\n\t() has score 1\r\n\tAB has score A + B, where A and B are balanced parentheses strings.\r\n\t(A) has score 2 * A, where A is a balanced parentheses string.\r\n\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: \"()\"\r\nOutput: 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"(())\"\r\nOutput: 2\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: \"()()\"\r\nOutput: 2\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: \"(()(()))\"\r\nOutput: 6\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tS is a balanced parentheses string, containing only ( and ).\r\n\t2 <= S.length <= 50",
        "level": 2,
        "paid_only": false,
        "question_id": 886,
        "slug": "score-of-parentheses",
        "tags": [],
        "title": "Score of Parentheses",
        "url": "https://leetcode.com/problems/score-of-parentheses/description/"
    },
    "887": {
        "description": "There are N workers.  The i-th worker has a quality[i] and a minimum wage expectation wage[i].\r\n\r\nNow we want to hire exactly K workers to form a paid group.  When hiring a group of K workers, we must pay them according to the following rules:\r\n\r\n\r\n\tEvery worker in the paid group should be paid in the ratio of their quality compared to other workers in the paid group.\r\n\tEvery worker in the paid group must be paid at least their minimum wage expectation.\r\n\r\n\r\nReturn the least amount of money needed to form a paid group satisfying the above conditions.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: quality = [10,20,5], wage = [70,50,30], K = 2\r\nOutput: 105.00000\r\nExplanation: We pay 70 to 0-th worker and 35 to 2-th worker.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: quality = [3,1,10,10,1], wage = [4,8,2,2,7], K = 3\r\nOutput: 30.66667\r\nExplanation: We pay 4 to 0-th worker, 13.33333 to 2-th and 3-th workers seperately. \r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= K <= N <= 10000, where N = quality.length = wage.length\r\n\t1 <= quality[i] <= 10000\r\n\t1 <= wage[i] <= 10000\r\n\tAnswers within 10^-5 of the correct answer will be considered correct.",
        "level": 3,
        "paid_only": false,
        "question_id": 887,
        "slug": "minimum-cost-to-hire-k-workers",
        "tags": [],
        "title": "Minimum Cost to Hire K Workers",
        "url": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers/description/"
    },
    "888": {
        "description": "There is a special square room with mirrors on each of the four walls.  Except for the southwest corner, there are receptors on each of the remaining corners, numbered 0, 1, and 2.\r\n\r\nThe square room has walls of length p, and a laser ray from the southwest corner first meets the east wall at a distance q from the 0th receptor.\r\n\r\nReturn the number of the receptor that the ray meets first.  (It is guaranteed that the ray will meet a receptor eventually.)\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: p = 2, q = 1\r\nOutput: 2\r\nExplanation: The ray meets receptor 2 the first time it gets reflected back to the left wall.\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= p <= 1000\r\n\t0 <= q <= p",
        "level": 2,
        "paid_only": false,
        "question_id": 888,
        "slug": "mirror-reflection",
        "tags": [],
        "title": "Mirror Reflection",
        "url": "https://leetcode.com/problems/mirror-reflection/description/"
    },
    "889": {
        "description": "Given two strings A and B of lowercase letters, return true if and only if we can swap two letters in A so that the result equals B.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\n\r\nInput: A = \"ab\", B = \"ba\"\r\nOutput: true\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = \"ab\", B = \"ab\"\r\nOutput: false\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: A = \"aa\", B = \"aa\"\r\nOutput: true\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: A = \"aaaaaaabc\", B = \"aaaaaaacb\"\r\nOutput: true\r\n\r\n\r\n\r\nExample 5:\r\n\r\n\r\nInput: A = \"\", B = \"aa\"\r\nOutput: false\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t0 <= A.length <= 20000\r\n\t0 <= B.length <= 20000\r\n\tA and B consist only of lowercase letters.",
        "level": 1,
        "paid_only": false,
        "question_id": 889,
        "slug": "buddy-strings",
        "tags": [],
        "title": "Buddy Strings",
        "url": "https://leetcode.com/problems/buddy-strings/description/"
    },
    "890": {
        "description": "At a lemonade stand, each lemonade costs $5. \r\n\r\nCustomers are standing in a queue to buy from you, and order one at a time (in the order specified by bills).\r\n\r\nEach customer will only buy one lemonade and pay with either a $5, $10, or $20 bill.  You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.\r\n\r\nNote that you don't have any change in hand at first.\r\n\r\nReturn true if and only if you can provide every customer with correct change.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [5,5,5,10,20]\r\nOutput: true\r\nExplanation: \r\nFrom the first 3 customers, we collect three $5 bills in order.\r\nFrom the fourth customer, we collect a $10 bill and give back a $5.\r\nFrom the fifth customer, we give a $10 bill and a $5 bill.\r\nSince all customers got correct change, we output true.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [5,5,10]\r\nOutput: true\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: [10,10]\r\nOutput: false\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: [5,5,10,10,20]\r\nOutput: false\r\nExplanation: \r\nFrom the first two customers in order, we collect two $5 bills.\r\nFor the next two customers in order, we collect a $10 bill and give back a $5 bill.\r\nFor the last customer, we can't give change of $15 back because we only have two $10 bills.\r\nSince not every customer received correct change, the answer is false.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t0 <= bills.length <= 10000\r\n\tbills[i] will be either 5, 10, or 20.",
        "level": 1,
        "paid_only": false,
        "question_id": 890,
        "slug": "lemonade-change",
        "tags": [],
        "title": "Lemonade Change",
        "url": "https://leetcode.com/problems/lemonade-change/description/"
    },
    "891": {
        "description": "We have a two dimensional matrix A where each value is 0 or 1.\r\n\r\nA move consists of choosing any row or column, and toggling each value in that row or column: changing all 0s to 1s, and all 1s to 0s.\r\n\r\nAfter making any number of moves, every row of this matrix is interpreted as a binary number, and the score of the matrix is the sum of these numbers.\r\n\r\nReturn the highest possible score.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [[0,0,1,1],[1,0,1,0],[1,1,0,0]]\r\nOutput: 39\r\nExplanation:\r\nToggled to [[1,1,1,1],[1,0,0,1],[1,1,1,1]].\r\n0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length <= 20\r\n\t1 <= A[0].length <= 20\r\n\tA[i][j] is 0 or 1.",
        "level": 2,
        "paid_only": false,
        "question_id": 891,
        "slug": "score-after-flipping-matrix",
        "tags": [],
        "title": "Score After Flipping Matrix",
        "url": "https://leetcode.com/problems/score-after-flipping-matrix/description/"
    },
    "892": {
        "description": "Return the length of the shortest, non-empty, contiguous subarray of A with sum at least K.\r\n\r\nIf there is no non-empty subarray with sum at least K, return -1.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = [1], K = 1\r\nOutput: 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = [1,2], K = 4\r\nOutput: -1\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: A = [2,-1,2], K = 3\r\nOutput: 3\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length <= 50000\r\n\t-10 ^ 5 <= A[i] <= 10 ^ 5\r\n\t1 <= K <= 10 ^ 9",
        "level": 3,
        "paid_only": false,
        "question_id": 892,
        "slug": "shortest-subarray-with-sum-at-least-k",
        "tags": [],
        "title": "Shortest Subarray with Sum at Least K",
        "url": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/description/"
    },
    "893": {
        "description": "We are given a binary tree (with root node root), a target node, and an integer value K.\r\n\r\nReturn a list of the values of all nodes that have a distance K from the target node.  The answer can be returned in any order.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: root = [3,5,1,6,2,0,8,null,null,7,4], target = 5, K = 2\r\n\r\nOutput: [7,4,1]\r\n\r\nExplanation: \r\nThe nodes that are a distance 2 from the target node (with value 5)\r\nhave values 7, 4, and 1.\r\n\r\n\r\n\r\nNote that the inputs \"root\" and \"target\" are actually TreeNodes.\r\nThe descriptions of the inputs above are just serializations of these objects.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tThe given tree is non-empty.\r\n\tEach node in the tree has unique values 0 <= node.val <= 500.\r\n\tThe target node is a node in the tree.\r\n\t0 <= K <= 1000.",
        "level": 2,
        "paid_only": false,
        "question_id": 893,
        "slug": "all-nodes-distance-k-in-binary-tree",
        "tags": [],
        "title": "All Nodes Distance K in Binary Tree",
        "url": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/description/"
    },
    "894": {
        "description": "Given a blacklist B containing unique integers from [0, N), write a function to return a uniform random integer from [0, N) which is NOT in B.\r\n\r\nOptimize it such that it minimizes the call to system’s Math.random().\r\n\r\nNote:\r\n\r\n\r\n\t1 <= N <= 1000000000\r\n\t0 <= B.length < min(100000, N)\r\n\t[0, N) does NOT include N. See interval notation.\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: \r\n[\"Solution\",\"pick\",\"pick\",\"pick\"]\r\n[[1,[]],[],[],[]]\r\nOutput: [null,0,0,0]\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \r\n[\"Solution\",\"pick\",\"pick\",\"pick\"]\r\n[[2,[]],[],[],[]]\r\nOutput: [null,1,1,1]\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: \r\n[\"Solution\",\"pick\",\"pick\",\"pick\"]\r\n[[3,[1]],[],[],[]]\r\nOutput: [null,0,0,2]\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: \r\n[\"Solution\",\"pick\",\"pick\",\"pick\"]\r\n[[4,[2]],[],[],[]]\r\nOutput: [null,1,3,1]\r\n\r\n\r\nExplanation of Input Syntax:\r\n\r\nThe input is two lists: the subroutines called and their arguments. Solution's constructor has two arguments, N and the blacklist B. pick has no arguments. Arguments are always wrapped with a list, even if there aren't any.",
        "level": 3,
        "paid_only": false,
        "question_id": 894,
        "slug": "random-pick-with-blacklist",
        "tags": [],
        "title": "Random Pick with Blacklist",
        "url": "https://leetcode.com/problems/random-pick-with-blacklist/description/"
    },
    "895": {
        "description": "We are given a 2-dimensional grid. \".\" is an empty cell, \"#\" is a wall, \"@\" is the starting point, (\"a\", \"b\", ...) are keys, and (\"A\", \"B\", ...) are locks.\r\n\r\nWe start at the starting point, and one move consists of walking one space in one of the 4 cardinal directions.  We cannot walk outside the grid, or walk into a wall.  If we walk over a key, we pick it up.  We can't walk over a lock unless we have the corresponding key.\r\n\r\nFor some 1 <= K <= 6, there is exactly one lowercase and one uppercase letter of the first K letters of the English alphabet in the grid.  This means that there is exactly one key for each lock, and one lock for each key; and also that the letters used to represent the keys and locks were chosen in the same order as the English alphabet.\r\n\r\nReturn the lowest number of moves to acquire all keys.  If it's impossible, return -1.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [\"@.a.#\",\"###.#\",\"b.A.B\"]\r\nOutput: 8\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [\"@..aA\",\"..B#.\",\"....b\"]\r\nOutput: 6\r\n\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= grid.length <= 30\r\n\t1 <= grid[0].length <= 30\r\n\tgrid[i][j] contains only '.', '#', '@', 'a'-'f' and 'A'-'F'\r\n\tThe number of keys is in [1, 6].  Each key has a different letter and opens exactly one lock.",
        "level": 3,
        "paid_only": false,
        "question_id": 895,
        "slug": "shortest-path-to-get-all-keys",
        "tags": [],
        "title": "Shortest Path to Get All Keys",
        "url": "https://leetcode.com/problems/shortest-path-to-get-all-keys/description/"
    },
    "896": {
        "description": "Given a binary tree rooted at root, the depth of each node is the shortest distance to the root.\r\n\r\nA node is deepest if it has the largest depth possible among any node in the entire tree.\r\n\r\nThe subtree of a node is that node, plus the set of all descendants of that node.\r\n\r\nReturn the node with the largest depth such that it contains all the deepest nodes in its subtree.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: [3,5,1,6,2,0,8,null,null,7,4]\r\nOutput: [2,7,4]\r\nExplanation:\r\n\r\n\r\n\r\nWe return the node with value 2, colored in yellow in the diagram.\r\nThe nodes colored in blue are the deepest nodes of the tree.\r\nThe input \"[3, 5, 1, 6, 2, 0, 8, null, null, 7, 4]\" is a serialization of the given tree.\r\nThe output \"[2, 7, 4]\" is a serialization of the subtree rooted at the node with value 2.\r\nBoth the input and output have TreeNode type.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tThe number of nodes in the tree will be between 1 and 500.\r\n\tThe values of each node are unique.",
        "level": 2,
        "paid_only": false,
        "question_id": 896,
        "slug": "smallest-subtree-with-all-the-deepest-nodes",
        "tags": [],
        "title": "Smallest Subtree with all the Deepest Nodes",
        "url": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/description/"
    },
    "897": {
        "description": "Find the smallest prime palindrome greater than or equal to N.\r\n\r\nRecall that a number is prime if it's only divisors are 1 and itself, and it is greater than 1. \r\n\r\nFor example, 2,3,5,7,11 and 13 are primes.\r\n\r\nRecall that a number is a palindrome if it reads the same from left to right as it does from right to left. \r\n\r\nFor example, 12321 is a palindrome.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: 6\r\nOutput: 7\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: 8\r\nOutput: 11\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: 13\r\nOutput: 101\r\n\r\n\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= N <= 10^8\r\n\tThe answer is guaranteed to exist and be less than 2 * 10^8.",
        "level": 2,
        "paid_only": false,
        "question_id": 897,
        "slug": "prime-palindrome",
        "tags": [],
        "title": "Prime Palindrome",
        "url": "https://leetcode.com/problems/prime-palindrome/description/"
    },
    "898": {
        "description": "Given a matrix A, return the transpose of A.\r\n\r\nThe transpose of a matrix is the matrix flipped over it's main diagonal, switching the row and column indices of the matrix.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [[1,2,3],[4,5,6],[7,8,9]]\r\nOutput: [[1,4,7],[2,5,8],[3,6,9]]\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [[1,2,3],[4,5,6]]\r\nOutput: [[1,4],[2,5],[3,6]]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length <= 1000\r\n\t1 <= A[0].length <= 1000",
        "level": 1,
        "paid_only": false,
        "question_id": 898,
        "slug": "transpose-matrix",
        "tags": [],
        "title": "Transpose Matrix",
        "url": "https://leetcode.com/problems/transpose-matrix/description/"
    },
    "899": {
        "description": "Given a positive integer N, find and return the longest distance between two consecutive 1's in the binary representation of N.\r\n\r\nIf there aren't two consecutive 1's, return 0.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: 22\r\nOutput: 2\r\nExplanation: \r\n22 in binary is 0b10110.\r\nIn the binary representation of 22, there are three ones, and two consecutive pairs of 1's.\r\nThe first consecutive pair of 1's have distance 2.\r\nThe second consecutive pair of 1's have distance 1.\r\nThe answer is the largest of these two distances, which is 2.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: 5\r\nOutput: 2\r\nExplanation: \r\n5 in binary is 0b101.\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: 6\r\nOutput: 1\r\nExplanation: \r\n6 in binary is 0b110.\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: 8\r\nOutput: 0\r\nExplanation: \r\n8 in binary is 0b1000.\r\nThere aren't any consecutive pairs of 1's in the binary representation of 8, so we return 0.\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= N <= 10^9",
        "level": 1,
        "paid_only": false,
        "question_id": 899,
        "slug": "binary-gap",
        "tags": [],
        "title": "Binary Gap",
        "url": "https://leetcode.com/problems/binary-gap/description/"
    },
    "900": {
        "description": "Starting with a positive integer N, we reorder the digits in any order (including the original order) such that the leading digit is not zero.\r\n\r\nReturn true if and only if we can do this in a way such that the resulting number is a power of 2.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: 1\r\nOutput: true\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: 10\r\nOutput: false\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: 16\r\nOutput: true\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: 24\r\nOutput: false\r\n\r\n\r\n\r\nExample 5:\r\n\r\n\r\nInput: 46\r\nOutput: true\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= N <= 10^9",
        "level": 2,
        "paid_only": false,
        "question_id": 900,
        "slug": "reordered-power-of-2",
        "tags": [],
        "title": "Reordered Power of 2",
        "url": "https://leetcode.com/problems/reordered-power-of-2/description/"
    },
    "901": {
        "description": "Given two arrays A and B of equal size, the advantage of A with respect to B is the number of indices i for which A[i] > B[i].\r\n\r\nReturn any permutation of A that maximizes its advantage with respect to B.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = [2,7,11,15], B = [1,10,4,11]\r\nOutput: [2,11,7,15]\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = [12,24,8,32], B = [13,25,32,11]\r\nOutput: [24,32,8,12]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length = B.length <= 10000\r\n\t0 <= A[i] <= 10^9\r\n\t0 <= B[i] <= 10^9",
        "level": 2,
        "paid_only": false,
        "question_id": 901,
        "slug": "advantage-shuffle",
        "tags": [],
        "title": "Advantage Shuffle",
        "url": "https://leetcode.com/problems/advantage-shuffle/description/"
    },
    "902": {
        "description": "A car travels from a starting position to a destination which is target miles east of the starting position.\r\n\r\nAlong the way, there are gas stations.  Each station[i] represents a gas station that is station[i][0] miles east of the starting position, and has station[i][1] liters of gas.\r\n\r\nThe car starts with an infinite tank of gas, which initially has startFuel liters of fuel in it.  It uses 1 liter of gas per 1 mile that it drives.\r\n\r\nWhen the car reaches a gas station, it may stop and refuel, transferring all the gas from the station into the car.\r\n\r\nWhat is the least number of refueling stops the car must make in order to reach its destination?  If it cannot reach the destination, return -1.\r\n\r\nNote that if the car reaches a gas station with 0 fuel left, the car can still refuel there.  If the car reaches the destination with 0 fuel left, it is still considered to have arrived.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: target = 1, startFuel = 1, stations = []\r\nOutput: 0\r\nExplanation: We can reach the target without refueling.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: target = 100, startFuel = 1, stations = [[10,100]]\r\nOutput: -1\r\nExplanation: We can't reach the target (or even the first gas station).\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: target = 100, startFuel = 10, stations = [[10,60],[20,30],[30,30],[60,40]]\r\nOutput: 2\r\nExplanation: \r\nWe start with 10 liters of fuel.\r\nWe drive to position 10, expending 10 liters of fuel.  We refuel from 0 liters to 60 liters of gas.\r\nThen, we drive from position 10 to position 60 (expending 50 liters of fuel),\r\nand refuel from 10 liters to 50 liters of gas.  We then drive to and reach the target.\r\nWe made 2 refueling stops along the way, so we return 2.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= target, startFuel, stations[i][1] <= 10^9\r\n\t0 <= stations.length <= 500\r\n\t0 < stations[0][0] < stations[1][0] < ... < stations[stations.length-1][0] < target",
        "level": 3,
        "paid_only": false,
        "question_id": 902,
        "slug": "minimum-number-of-refueling-stops",
        "tags": [],
        "title": "Minimum Number of Refueling Stops",
        "url": "https://leetcode.com/problems/minimum-number-of-refueling-stops/description/"
    },
    "903": {
        "description": "Given a function rand7 which generates a uniform random integer in the range 1 to 7, write a function rand10 which generates a uniform random integer in the range 1 to 10.\r\n\r\nDo NOT use system's Math.random().\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: 1\r\nOutput: [7]\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: 2\r\nOutput: [8,4]\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: 3\r\nOutput: [8,1,10]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\trand7 is predefined.\r\n\tEach testcase has one argument: n, the number of times that rand10 is called.\r\n\r\n\r\n \r\n\r\nFollow up:\r\n\r\n\r\n\tWhat is the expected value for the number of calls to rand7() function?\r\n\tCould you minimize the number of calls to rand7()?",
        "level": 2,
        "paid_only": false,
        "question_id": 903,
        "slug": "implement-rand10-using-rand7",
        "tags": [],
        "title": "Implement Rand10() Using Rand7()",
        "url": "https://leetcode.com/problems/implement-rand10-using-rand7/description/"
    },
    "904": {
        "description": "Consider all the leaves of a binary tree.  From left to right order, the\nvalues of those leaves form a _leaf value sequence._\n\n![](https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/16/tree.png)\n\nFor example, in the given tree above, the leaf value sequence is `(6, 7, 4, 9,\n8)`.\n\nTwo binary trees are considered _leaf-similar_  if their leaf value sequence\nis the same.\n\nReturn `true` if and only if the two given trees with head nodes `root1` and\n`root2` are leaf-similar.\n\n\n\n**Note:**\n\n  * Both of the given trees will have between `1` and `100` nodes.",
        "level": 1,
        "paid_only": false,
        "question_id": 904,
        "slug": "leaf-similar-trees",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Leaf-Similar Trees",
        "url": "https://leetcode.com/problems/leaf-similar-trees/description/"
    },
    "905": {
        "description": "A sequence `X_1, X_2, ..., X_n` is _fibonacci-like_ if:\n\n  * `n >= 3`\n  * `X_i + X_{i+1} = X_{i+2}` for all `i + 2 <= n`\n\nGiven a **strictly increasing**  array `A` of positive integers forming a\nsequence, find the **length** of the longest fibonacci-like subsequence of\n`A`.  If one does not exist, return 0.\n\n( _Recall that a subsequence is derived from another sequence`A` by deleting\nany number of elements (including none) from `A`, without changing the order\nof the remaining elements.  For example, `[3, 5, 8]` is a subsequence of `[3,\n4, 5, 6, 7, 8]`._ )\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,2,3,4,5,6,7,8]\r\n    **Output:** 5\r\n    **Explanation:** The longest subsequence that is fibonacci-like: [1,2,3,5,8].\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,3,7,11,12,14,18]\r\n    **Output:** 3\r\n    **Explanation** :\r\n    The longest subsequence that is fibonacci-like:\r\n    [1,11,12], [3,11,14] or [7,11,18].\r\n    \n\n\n\n**Note:**\n\n  * `3 <= A.length <= 1000`\n  * `1 <= A[0] < A[1] < ... < A[A.length - 1] <= 10^9`\n  * _(The time limit has been reduced by 50% for submissions in Java, C, and C++.)_",
        "level": 2,
        "paid_only": false,
        "question_id": 905,
        "slug": "length-of-longest-fibonacci-subsequence",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "title": "Length of Longest Fibonacci Subsequence",
        "url": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/description/"
    },
    "906": {
        "description": "A robot on an infinite grid starts at point (0, 0) and faces north.  The robot\ncan receive one of three possible types of commands:\n\n  * `-2`: turn left 90 degrees\n  * `-1`: turn right 90 degrees\n  * `1 <= x <= 9`: move forward `x` units\n\nSome of the grid squares are obstacles.\n\nThe `i`-th obstacle is at grid point `(obstacles[i][0], obstacles[i][1])`\n\nIf the robot would try to move onto them, the robot stays on the previous grid\nsquare instead (but still continues following the rest of the route.)\n\nReturn the **square** of the maximum Euclidean distance that the robot will be\nfrom the origin.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** commands = [4,-1,3], obstacles = []\r\n    **Output:** 25\r\n    Explanation: robot will go to (3, 4)\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** commands = [4,-1,4,-2,4], obstacles = [[2,4]]\r\n    **Output:** 65\r\n    **Explanation** : robot will be stuck at (1, 4) before turning left and going to (1, 8)\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= commands.length <= 10000`\n  2. `0 <= obstacles.length <= 10000`\n  3. `-30000 <= obstacle[i][0] <= 30000`\n  4. `-30000 <= obstacle[i][1] <= 30000`\n  5. The answer is guaranteed to be less than `2 ^ 31`.",
        "level": 1,
        "paid_only": false,
        "question_id": 906,
        "slug": "walking-robot-simulation",
        "tags": [
            "Greedy"
        ],
        "title": "Walking Robot Simulation",
        "url": "https://leetcode.com/problems/walking-robot-simulation/description/"
    },
    "907": {
        "description": "Koko loves to eat bananas.  There are `N` piles of bananas, the `i`-th pile\nhas `piles[i]` bananas.  The guards have gone and will come back in `H` hours.\n\nKoko can decide her bananas-per-hour eating speed of `K`.  Each hour, she\nchooses some pile of bananas, and eats K bananas from that pile.  If the pile\nhas less than `K` bananas, she eats all of them instead, and won't eat any\nmore bananas during this hour.\n\nKoko likes to eat slowly, but still wants to finish eating all the bananas\nbefore the guards come back.\n\nReturn the minimum integer `K` such that she can eat all the bananas within\n`H` hours.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** piles = [3,6,7,11], H = 8\r\n    **Output:** 4\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** piles = [30,11,23,4,20], H = 5\r\n    **Output:** 30\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** piles = [30,11,23,4,20], H = 6\r\n    **Output:** 23\r\n    \n\n\n\n**Note:**\n\n  * `1 <= piles.length <= 10^4`\n  * `piles.length <= H <= 10^9`\n  * `1 <= piles[i] <= 10^9`",
        "level": 2,
        "paid_only": false,
        "question_id": 907,
        "slug": "koko-eating-bananas",
        "tags": [
            "Binary Search"
        ],
        "title": "Koko Eating Bananas",
        "url": "https://leetcode.com/problems/koko-eating-bananas/description/"
    },
    "908": {
        "description": "Given a non-empty, singly linked list with head node `head`, return a middle\nnode of linked list.\n\nIf there are two middle nodes, return the second middle node.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,2,3,4,5]\r\n    **Output:** Node 3 from this list (Serialization: [3,4,5])\r\n    The returned node has value 3.  (The judge's serialization of this node is [3,4,5]).\r\n    Note that we returned a ListNode object ans, such that:\r\n    ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, and ans.next.next.next = NULL.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,2,3,4,5,6]\r\n    **Output:** Node 4 from this list (Serialization: [4,5,6])\r\n    Since the list has two middle nodes with values 3 and 4, we return the second one.\r\n    \n\n\n\n**Note:**\n\n  * The number of nodes in the given list will be between `1` and `100`.",
        "level": 1,
        "paid_only": false,
        "question_id": 908,
        "slug": "middle-of-the-linked-list",
        "tags": [
            "Linked List"
        ],
        "title": "Middle of the Linked List",
        "url": "https://leetcode.com/problems/middle-of-the-linked-list/description/"
    },
    "909": {
        "description": "Alex and Lee play a game with piles of stones.  There are an even number of\npiles **arranged in a row** , and each pile has a positive integer number of\nstones `piles[i]`.\n\nThe objective of the game is to end with the most stones.  The total number of\nstones is odd, so there are no ties.\n\nAlex and Lee take turns, with Alex starting first.  Each turn, a player takes\nthe entire pile of stones from either the beginning or the end of the row.\nThis continues until there are no more piles left, at which point the person\nwith the most stones wins.\n\nAssuming Alex and Lee play optimally, return `True` if and only if Alex wins\nthe game.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [5,3,4,5]\r\n    **Output:** true\r\n    **Explanation:**\r\n    Alex starts first, and can only take the first 5 or the last 5.\r\n    Say he takes the first 5, so that the row becomes [3, 4, 5].\r\n    If Lee takes 3, then the board is [4, 5], and Alex takes 5 to win with 10 points.\r\n    If Lee takes the last 5, then the board is [3, 4], and Alex takes 4 to win with 9 points.\r\n    This demonstrated that taking the first 5 was a winning move for Alex, so we return true.\r\n    \n\n\n\n**Note:**\n\n  1. `2 <= piles.length <= 500`\n  2. `piles.length` is even.\n  3. `1 <= piles[i] <= 500`\n  4. `sum(piles)` is odd.",
        "level": 2,
        "paid_only": false,
        "question_id": 909,
        "slug": "stone-game",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Stone Game",
        "url": "https://leetcode.com/problems/stone-game/description/"
    },
    "910": {
        "description": "A positive integer is _magical_  if it is divisible by either A or B.\n\nReturn the N-th magical number.  Since the answer may be very large, **return\nit modulo**`10^9 + 7`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** N = 1, A = 2, B = 3\r\n    **Output:** 2\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** N = 4, A = 2, B = 3\r\n    **Output:** 6\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** N = 5, A = 2, B = 4\r\n    **Output:** 10\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** N = 3, A = 6, B = 4\r\n    **Output:** 8\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= N <= 10^9`\n  2. `2 <= A <= 40000`\n  3. `2 <= B <= 40000`",
        "level": 3,
        "paid_only": false,
        "question_id": 910,
        "slug": "nth-magical-number",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "title": "Nth Magical Number",
        "url": "https://leetcode.com/problems/nth-magical-number/description/"
    },
    "911": {
        "description": "There are G people in a gang, and a list of various crimes they could commit.\n\nThe `i`-th crime generates a `profit[i]` and requires `group[i]` gang members\nto participate.\n\nIf a gang member participates in one crime, that member can't participate in\nanother crime.\n\nLet's call a _profitable  scheme_ any subset of these crimes that generates at\nleast `P` profit, and the total number of gang members participating in that\nsubset of crimes is at most G.\n\nHow many schemes can be chosen?  Since the answer may be very large, **return\nit modulo** `10^9 + 7`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** G = 5, P = 3, group = [2,2], profit = [2,3]\r\n    **Output:** 2\r\n    **Explanation:**\r\n    To make a profit of at least 3, the gang could either commit crimes 0 and 1, or just crime 1.\r\n    In total, there are 2 schemes.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** G = 10, P = 5, group = [2,3,5], profit = [6,7,8]\r\n    **Output:** 7\r\n    **Explanation:**\r\n    To make a profit of at least 5, the gang could commit any crimes, as long as they commit one.\r\n    There are 7 possible schemes: (0), (1), (2), (0,1), (0,2), (1,2), and (0,1,2).\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= G <= 100`\n  2. `0 <= P <= 100`\n  3. `1 <= group[i] <= 100`\n  4. `0 <= profit[i] <= 100`\n  5. `1 <= group.length = profit.length <= 100`",
        "level": 3,
        "paid_only": false,
        "question_id": 911,
        "slug": "profitable-schemes",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Profitable Schemes",
        "url": "https://leetcode.com/problems/profitable-schemes/description/"
    },
    "912": {
        "description": "Given an array `w` of positive integers, where `w[i]` describes the weight of\nindex `i`, write a function `pickIndex` which randomly picks an index in\nproportion to its weight.\n\nNote:\n\n  1. `1 <= w.length <= 10000`\n  2. `1 <= w[i] <= 10^5`\n  3. `pickIndex` will be called at most `10000` times.\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"Solution\",\"pickIndex\"]\r\n    [[[1]],[]]\r\n    **Output:** [null,0]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"Solution\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\"]\r\n    [[[1,3]],[],[],[],[],[]]\r\n    **Output:** [null,0,1,1,1,0]\n\n**Explanation of Input Syntax:**\n\nThe input is two lists: the subroutines called and their arguments.\n`Solution`'s constructor has one argument, the array `w`. `pickIndex` has no\narguments. Arguments are always wrapped with a list, even if there aren't any.",
        "level": 2,
        "paid_only": false,
        "question_id": 912,
        "slug": "random-pick-with-weight",
        "tags": [
            "Binary Search",
            "Random"
        ],
        "title": "Random Pick with Weight",
        "url": "https://leetcode.com/problems/random-pick-with-weight/description/"
    },
    "913": {
        "description": "You are given the number of rows `n_rows` and number of columns `n_cols` of a\n2D binary matrix where all values are initially 0. Write a function `flip`\nwhich chooses a 0 value [uniformly at\nrandom](https://en.wikipedia.org/wiki/Discrete_uniform_distribution), changes\nit to 1, and then returns the position `[row.id, col.id]` of that value. Also,\nwrite a function `reset` which sets all values back to 0.  **Try to minimize\nthe number of calls to system 's Math.random()** and optimize the time and\nspace complexity.\n\nNote:\n\n  1. `1 <= n_rows, n_cols <= 10000`\n  2. `0 <= row.id < n_rows` and `0 <= col.id < n_cols`\n  3. `flip` will not be called when the matrix has no 0 values left.\n  4. the total number of calls to `flip` and `reset` will not exceed 1000.\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"Solution\",\"flip\",\"flip\",\"flip\",\"flip\"]\r\n    [[2,3],[],[],[],[]]\r\n    **Output:** [null,[0,1],[1,2],[1,0],[1,1]]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"Solution\",\"flip\",\"flip\",\"reset\",\"flip\"]\r\n    [[1,2],[],[],[],[]]\r\n    **Output:** [null,[0,0],[0,1],null,[0,0]]\n\n**Explanation of Input Syntax:**\n\nThe input is two lists: the subroutines called and their arguments.\n`Solution`'s constructor has two arguments, `n_rows` and `n_cols`. `flip` and\n`reset` have no arguments. Arguments are always wrapped with a list, even if\nthere aren't any.",
        "level": 2,
        "paid_only": false,
        "question_id": 913,
        "slug": "random-flip-matrix",
        "tags": [
            "Random"
        ],
        "title": "Random Flip Matrix",
        "url": "https://leetcode.com/problems/random-flip-matrix/description/"
    },
    "914": {
        "description": "Given a list of **non-overlapping**  axis-aligned rectangles `rects`, write a\nfunction `pick` which randomly and uniformily picks an **integer point** in\nthe space  covered by the rectangles.\n\nNote:\n\n  1. An **integer point**  is a point that has integer coordinates. \n  2. A point on the perimeter of a rectangle is  **included** in the space covered by the rectangles.  \n  3. `i`th rectangle = `rects[i]` = `[x1,y1,x2,y2]`, where `[x1, y1]` are the integer coordinates of the bottom-left corner, and `[x2, y2]` are the integer coordinates of the top-right corner.\n  4. length and width of each rectangle does not exceed `2000`.\n  5. `1 <= rects.length <= 100`\n  6. `pick` return a point as an array of integer coordinates `[p_x, p_y]`\n  7. `pick` is called at most `10000` times.\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"Solution\",\"pick\",\"pick\",\"pick\"]\r\n    [[[[1,1,5,5]]],[],[],[]]\r\n    **Output:** [null,[4,1],[4,1],[3,3]]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"Solution\",\"pick\",\"pick\",\"pick\",\"pick\",\"pick\"]\r\n    [[[[-2,-2,-1,-1],[1,0,3,0]]],[],[],[],[],[]]\r\n    **Output:** [null,[-1,-2],[2,0],[-2,-1],[3,0],[-2,-2]]\n\n**Explanation of Input Syntax:**\n\nThe input is two lists: the subroutines called and their arguments.\n`Solution`'s constructor has one argument, the array of rectangles `rects`.\n`pick` has no arguments. Arguments are always wrapped with a list, even if\nthere aren't any.",
        "level": 2,
        "paid_only": false,
        "question_id": 914,
        "slug": "random-point-in-non-overlapping-rectangles",
        "tags": [
            "Binary Search",
            "Random"
        ],
        "title": "Random Point in Non-overlapping Rectangles",
        "url": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/description/"
    },
    "915": {
        "description": "Given the radius and x-y positions of the center of a circle, write a function\n`randPoint` which generates a uniform random point in the circle.\n\nNote:\n\n  1. input and output values are in [floating-point](https://www.webopedia.com/TERM/F/floating_point_number.html).\n  2. radius and x-y position of the center of the circle is passed into the class constructor.\n  3. a point on the circumference of the circle is considered to be in the circle.\n  4. `randPoint` returns a size 2 array containing x-position and y-position of the random point, in that order.\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"Solution\",\"randPoint\",\"randPoint\",\"randPoint\"]\r\n    [[1,0,0],[],[],[]]\r\n    **Output:** [null,[-0.72939,-0.65505],[-0.78502,-0.28626],[-0.83119,-0.19803]]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"Solution\",\"randPoint\",\"randPoint\",\"randPoint\"]\r\n    [[10,5,-7.5],[],[],[]]\r\n    **Output:** [null,[11.52438,-8.33273],[2.46992,-16.21705],[11.13430,-12.42337]]\n\n**Explanation of Input Syntax:**\n\nThe input is two lists: the subroutines called and their arguments.\n`Solution`'s constructor has three arguments, the radius, x-position of the\ncenter, and y-position of the center of the circle. `randPoint` has no\narguments. Arguments are always wrapped with a list, even if there aren't any.",
        "level": 2,
        "paid_only": false,
        "question_id": 915,
        "slug": "generate-random-point-in-a-circle",
        "tags": [
            "Math",
            "Random",
            "Rejection Sampling"
        ],
        "title": "Generate Random Point in a Circle",
        "url": "https://leetcode.com/problems/generate-random-point-in-a-circle/description/"
    },
    "916": {
        "description": "An encoded string `S` is given.  To find and write the _decoded_ string to a\ntape, the encoded string is read **one character at a time**  and the\nfollowing steps are taken:\n\n  * If the character read is a letter, that letter is written onto the tape.\n  * If the character read is a digit (say `d`), the entire current tape is repeatedly written `d-1` more times in total.\n\nNow for some encoded string `S`, and an index `K`, find and return the `K`-th\nletter (1 indexed) in the decoded string.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** S = \"leet2code3\", K = 10\r\n    **Output:** \"o\"\r\n    **Explanation:**\r\n    The decoded string is  \"leetleetcodeleetleetcodeleetleetcode\".\r\n    The 10th letter in the string is \"o\".\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** S = \"ha22\", K = 5\r\n    **Output:** \"h\"\r\n    **Explanation:**\r\n    The decoded string is  \"hahahaha\".  The 5th letter is \"h\".\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** S = \"a2345678999999999999999\", K = 1\r\n    **Output:** \"a\"\r\n    **Explanation:**\r\n    The decoded string is  \"a\" repeated 8301530446056247680 times.  The 1st letter is \"a\".\r\n    \n\n\n\n**Note:**\n\n  1. `2 <= S.length <= 100`\n  2. `S` will only contain lowercase letters and digits `2` through `9`.\n  3. `S` starts with a letter.\n  4. `1 <= K <= 10^9`\n  5. The decoded string is guaranteed to have less than `2^63` letters.",
        "level": 2,
        "paid_only": false,
        "question_id": 916,
        "slug": "decoded-string-at-index",
        "tags": [
            "Stack"
        ],
        "title": "Decoded String at Index",
        "url": "https://leetcode.com/problems/decoded-string-at-index/description/"
    },
    "917": {
        "description": "The `i`-th person has weight `people[i]`, and each boat can carry a maximum\nweight of `limit`.\n\nEach boat carries at most 2 people at the same time, provided the sum of the\nweight of those people is at most `limit`.\n\nReturn the minimum number of boats to carry every given person.  (It is\nguaranteed each person can be carried by a boat.)\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** people = [1,2], limit = 3\r\n    **Output:** 1\r\n    **Explanation:** 1 boat (1, 2)\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** people = [3,2,2,1], limit = 3\r\n    **Output:** 3\r\n    **Explanation** : 3 boats (1, 2), (2) and (3)\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** people = [3,5,3,4], limit = 5\r\n    **Output:** 4\r\n    **Explanation** : 4 boats (3), (3), (4), (5)\n\n**Note** :\n\n  * `1 <= people.length <= 50000`\n  * `1 <= people[i] <= limit <= 30000`",
        "level": 2,
        "paid_only": false,
        "question_id": 917,
        "slug": "boats-to-save-people",
        "tags": [
            "Two Pointers",
            "Greedy"
        ],
        "title": "Boats to Save People",
        "url": "https://leetcode.com/problems/boats-to-save-people/description/"
    },
    "918": {
        "description": "Starting with an  **undirected** graph (the  \"original graph\") with nodes from\n`0` to `N-1`, subdivisions are made to some of the edges.\n\nThe graph is given as follows: `edges[k]` is a list of integer pairs `(i, j,\nn)` such that `(i, j)` is an edge of the original graph,\n\nand `n` is the total number of **new** nodes on that edge.  \n\nThen, the edge `(i, j)` is deleted from the original graph, `n` new nodes\n`(x_1, x_2, ..., x_n)` are added to the original graph,\n\nand `n+1` new edges `(i, x_1), (x_1, x_2), (x_2, x_3), ..., (x_{n-1}, x_n),\n(x_n, j)` are added to the original graph.\n\nNow, you start at node `0` from the original graph, and in each move, you\ntravel along one edge.\n\nReturn how many nodes you can reach in at most `M` moves.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:**edges =  [[0,1,10],[0,2,1],[1,2,2]], M = 6, N = 3\r\n    **Output:** 13\r\n    **Explanation:**\r\n    The nodes that are reachable in the final graph after M = 6 moves are indicated below.\r\n    ![](https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/01/origfinal.png)\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:**edges =  [[0,1,4],[1,2,6],[0,2,8],[1,3,1]], M = 10, N = 4\r\n    **Output:** 23\n\n\n\n**Note:**\n\n  1. `0 <= edges.length <= 10000`\n  2. `0 <= edges[i][0] < edges[i][1] < N`\n  3. There does not exist any `i != j` for which `edges[i][0] == edges[j][0]` and `edges[i][1] == edges[j][1]`.\n  4. The original graph has no parallel edges.\n  5. `0 <= edges[i][2] <= 10000`\n  6. `0 <= M <= 10^9`\n  7. `1 <= N <= 3000`\n  8. A reachable node is a node that can be travelled to using at most M moves starting from node 0.",
        "level": 3,
        "paid_only": false,
        "question_id": 918,
        "slug": "reachable-nodes-in-subdivided-graph",
        "tags": [
            "Heap"
        ],
        "title": "Reachable Nodes In Subdivided Graph",
        "url": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/description/"
    },
    "919": {
        "description": "On a `N * N` grid, we place some `1 * 1 * 1 `cubes that are axis-aligned with\nthe x, y, and z axes.\n\nEach value `v = grid[i][j]` represents a tower of `v` cubes placed on top of\ngrid cell `(i, j)`.\n\nNow we view the  _projection_  of these cubes onto the xy, yz, and zx planes.\n\nA projection is like a shadow, that maps our 3 dimensional figure to a 2\ndimensional plane.\n\nHere, we are viewing the \"shadow\" when looking at the cubes from the top, the\nfront, and the side.\n\nReturn the total area of all three projections.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [[2]]\r\n    **Output:** 5\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [[1,2],[3,4]]\r\n    **Output:** 17\r\n    **Explanation:**\r\n    Here are the three projections ( \"shadows\") of the shape made with each axis-aligned plane.\r\n    ![](https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/02/shadow.png)\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [[1,0],[0,2]]\r\n    **Output:** 8\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [[1,1,1],[1,0,1],[1,1,1]]\r\n    **Output:** 14\r\n    \n\n**Example 5:**\n\n    \n    \r\n    **Input:** [[2,2,2],[2,1,2],[2,2,2]]\r\n    **Output:** 21\r\n    \n\n\n\n**Note:**\n\n  * `1 <= grid.length = grid[0].length <= 50`\n  * `0 <= grid[i][j] <= 50`",
        "level": 1,
        "paid_only": false,
        "question_id": 919,
        "slug": "projection-area-of-3d-shapes",
        "tags": [
            "Math"
        ],
        "title": "Projection Area of 3D Shapes",
        "url": "https://leetcode.com/problems/projection-area-of-3d-shapes/description/"
    },
    "920": {
        "description": "We are given two sentences `A` and `B`.  (A _sentence_  is a string of space\nseparated words.  Each _word_ consists only of lowercase letters.)\n\nA word is _uncommon_  if it appears exactly once in one of the sentences, and\ndoes not appear in the other sentence.\n\nReturn a list of all uncommon words.\n\nYou may return the list in any order.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = \"this apple is sweet\", B = \"this apple is sour\"\r\n    **Output:** [\"sweet\",\"sour\"]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = \"apple apple\", B = \"banana\"\r\n    **Output:** [\"banana\"]\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= A.length <= 200`\n  2. `0 <= B.length <= 200`\n  3. `A` and `B` both contain only spaces and lowercase letters.",
        "level": 1,
        "paid_only": false,
        "question_id": 920,
        "slug": "uncommon-words-from-two-sentences",
        "tags": [
            "Hash Table"
        ],
        "title": "Uncommon Words from Two Sentences",
        "url": "https://leetcode.com/problems/uncommon-words-from-two-sentences/description/"
    },
    "921": {
        "description": "On a 2 dimensional grid with `R` rows and `C` columns, we start at `(r0, c0)`\nfacing east.\n\nHere, the north-west corner of the grid is at the first row and column, and\nthe south-east corner of the grid is at the last row and column.\n\nNow, we walk in a clockwise spiral shape to visit every position in this grid.\n\nWhenever we would move outside the boundary of the grid, we continue our walk\noutside the grid (but may return to the grid boundary later.)\n\nEventually, we reach all `R * C` spaces of the grid.\n\nReturn a list of coordinates representing the positions of the grid in the\norder they were visited.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** R = 1, C = 4, r0 = 0, c0 = 0\r\n    **Output:** [[0,0],[0,1],[0,2],[0,3]]\r\n    \r\n    ![](https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/24/example_1.png)\r\n    \n\n\n\n**Example 2:**\n\n    \n    \r\n    **Input:** R = 5, C = 6, r0 = 1, c0 = 4\r\n    **Output:** [[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]\r\n    \r\n    ![](https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/24/example_2.png)\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= R <= 100`\n  2. `1 <= C <= 100`\n  3. `0 <= r0 < R`\n  4. `0 <= c0 < C`",
        "level": 2,
        "paid_only": false,
        "question_id": 921,
        "slug": "spiral-matrix-iii",
        "tags": [
            "Math"
        ],
        "title": "Spiral Matrix III",
        "url": "https://leetcode.com/problems/spiral-matrix-iii/description/"
    },
    "922": {
        "description": "Given a set of `N` people (numbered `1, 2, ..., N`), we would like to split\neveryone into two groups of **any** size.\n\nEach person may dislike some other people, and they should not go into the\nsame group.\n\nFormally, if `dislikes[i] = [a, b]`, it means it is not allowed to put the\npeople numbered `a` and `b` into the same group.\n\nReturn `true` if and only if it is possible to split everyone into two groups\nin this way.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** N = 4, dislikes = [[1,2],[1,3],[2,4]]\r\n    **Output:** true\r\n    **Explanation** : group1 [1,4], group2 [2,3]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** N = 3, dislikes = [[1,2],[1,3],[2,3]]\r\n    **Output:** false\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** N = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]\r\n    **Output:** false\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= N <= 2000`\n  2. `0 <= dislikes.length <= 10000`\n  3. `1 <= dislikes[i][j] <= N`\n  4. `dislikes[i][0] < dislikes[i][1]`\n  5. There does not exist `i != j` for which `dislikes[i] == dislikes[j]`.",
        "level": 2,
        "paid_only": false,
        "question_id": 922,
        "slug": "possible-bipartition",
        "tags": [
            "Depth-first Search"
        ],
        "title": "Possible Bipartition",
        "url": "https://leetcode.com/problems/possible-bipartition/description/"
    },
    "923": {
        "description": "You are given `K` eggs, and you have access to a building with `N` floors from\n`1` to `N`.\n\nEach egg is identical in function, and if an egg breaks, you cannot drop it\nagain.\n\nYou know that there exists a floor `F` with `0 <= F <= N` such that any egg\ndropped at a floor higher than `F` will break, and any egg dropped at or below\nfloor `F` will not break.\n\nEach _move_ , you may take an egg (if you have an unbroken one) and drop it\nfrom any floor `X` (with `1 <= X <= N`).\n\nYour goal is to know  **with certainty**  what the value of `F` is.\n\nWhat is the minimum number of moves that you need to know with certainty what\n`F` is, regardless of the initial value of `F`?\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** K = 1, N = 2\r\n    **Output:** 2\r\n    **Explanation:**\r\n    Drop the egg from floor 1.  If it breaks, we know with certainty that F = 0.\r\n    Otherwise, drop the egg from floor 2.  If it breaks, we know with certainty that F = 1.\r\n    If it didn 't break, then we know with certainty F = 2.\r\n    Hence, we needed 2 moves in the worst case to know what F is with certainty.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** K = 2, N = 6\r\n    **Output:** 3\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** K = 3, N = 14\r\n    **Output:** 4\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= K <= 100`\n  2. `1 <= N <= 10000`",
        "level": 3,
        "paid_only": false,
        "question_id": 923,
        "slug": "super-egg-drop",
        "tags": [
            "Math",
            "Binary Search",
            "Dynamic Programming"
        ],
        "title": "Super Egg Drop",
        "url": "https://leetcode.com/problems/super-egg-drop/description/"
    },
    "924": {
        "description": "Alice and Bob have candy bars of different sizes: `A[i]` is the size of the\n`i`-th bar of candy that Alice has, and `B[j]` is the size of the `j`-th bar\nof candy that Bob has.\n\nSince they are friends, they would like to exchange one candy bar each so that\nafter the exchange, they both have the same total amount of candy.  ( _The\ntotal amount of candy  a person has is the sum of the sizes of candy bars they\nhave._)\n\nReturn an integer array `ans` where `ans[0]` is the size of the candy bar that\nAlice must exchange, and `ans[1]` is the size of the candy bar that Bob must\nexchange.\n\nIf there are multiple answers, you may return any one of them.  It is\nguaranteed an answer exists.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [1,1], B = [2,2]\r\n    **Output:** [1,2]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [1,2], B = [2,3]\r\n    **Output:** [1,2]\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** A = [2], B = [1,3]\r\n    **Output:** [2,3]\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** A = [1,2,5], B = [2,4]\r\n    **Output:** [5,4]\r\n    \n\n\n\n**Note:**\n\n  * `1 <= A.length <= 10000`\n  * `1 <= B.length <= 10000`\n  * ` 1 <= A[i] <= 100000`\n  * `1 <= B[i] <= 100000`\n  * It is guaranteed that Alice and Bob have different total amounts of candy.\n  * It is guaranteed there exists an answer.",
        "level": 1,
        "paid_only": false,
        "question_id": 924,
        "slug": "fair-candy-swap",
        "tags": [
            "Array"
        ],
        "title": "Fair Candy Swap",
        "url": "https://leetcode.com/problems/fair-candy-swap/description/"
    },
    "925": {
        "description": "Return any binary tree that matches the given preorder and postorder\ntraversals.\n\nValues in the traversals `pre` and `post` are distinct positive integers.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** pre = [1,2,4,5,3,6,7], post = [4,5,2,6,7,3,1]\r\n    **Output:** [1,2,3,4,5,6,7]\r\n    \n\n\n\n**Note:**\n\n  * `1 <= pre.length == post.length <= 30`\n  * `pre[]` and `post[]` are both permutations of `1, 2, ..., pre.length`.\n  * It is guaranteed an answer exists. If there exists multiple answers, you can return any of them.",
        "level": 2,
        "paid_only": false,
        "question_id": 925,
        "slug": "construct-binary-tree-from-preorder-and-postorder-traversal",
        "tags": [
            "Tree"
        ],
        "title": "Construct Binary Tree from Preorder and Postorder Traversal",
        "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/description/"
    },
    "926": {
        "description": "You have a list of `words` and a `pattern`, and you want to know which words\nin `words` matches the pattern.\n\nA word matches the pattern if there exists a permutation of letters `p` so\nthat after replacing every letter `x` in the pattern with `p(x)`, we get the\ndesired word.\n\n( _Recall that a permutation of letters is a bijection from letters to\nletters: every letter maps to another letter, and no two letters map to the\nsame letter._ )\n\nReturn a list of the words in `words` that match the given pattern.\n\nYou may return the answer in any order.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** words = [\"abc\",\"deq\",\"mee\",\"aqq\",\"dkd\",\"ccc\"], pattern = \"abb\"\r\n    **Output:** [\"mee\",\"aqq\"]\r\n    **Explanation:** \"mee\" matches the pattern because there is a permutation {a -> m, b -> e, ...}. \r\n    \"ccc\" does not match the pattern because {a -> c, b -> c, ...} is not a permutation,\r\n    since a and b map to the same letter.\n\n\n\n**Note:**\n\n  * `1 <= words.length <= 50`\n  * `1 <= pattern.length = words[i].length <= 20`",
        "level": 2,
        "paid_only": false,
        "question_id": 926,
        "slug": "find-and-replace-pattern",
        "tags": [
            "String"
        ],
        "title": "Find and Replace Pattern",
        "url": "https://leetcode.com/problems/find-and-replace-pattern/description/"
    },
    "927": {
        "description": "Given an array of integers `A`, consider all non-empty subsequences of `A`.\n\nFor any sequence S, let the  _width_  of S be the difference between the\nmaximum and minimum element of S.\n\nReturn the sum of the widths of all subsequences of A.\n\nAs the answer may be very large, **return the answer modulo 10^9 + 7**.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [2,1,3]\r\n    **Output:** 6\r\n    **Explanation:** Subsequences are [1], [2], [3], [2,1], [2,3], [1,3], [2,1,3].\r\n    The corresponding widths are 0, 0, 0, 1, 1, 2, 2.\r\n    The sum of these widths is 6.\r\n    \n\n\n\n**Note:**\n\n  * `1 <= A.length <= 20000`\n  * `1 <= A[i] <= 20000`",
        "level": 3,
        "paid_only": false,
        "question_id": 927,
        "slug": "sum-of-subsequence-widths",
        "tags": [
            "Array",
            "Math"
        ],
        "title": "Sum of Subsequence Widths",
        "url": "https://leetcode.com/problems/sum-of-subsequence-widths/description/"
    },
    "928": {
        "description": "On a `N * N` grid, we place some `1 * 1 * 1 `cubes.\n\nEach value `v = grid[i][j]` represents a tower of `v` cubes placed on top of\ngrid cell `(i, j)`.\n\nReturn the total surface area of the resulting shapes.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [[2]]\r\n    **Output:** 10\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [[1,2],[3,4]]\r\n    **Output:** 34\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [[1,0],[0,2]]\r\n    **Output:** 16\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [[1,1,1],[1,0,1],[1,1,1]]\r\n    **Output:** 32\r\n    \n\n**Example 5:**\n\n    \n    \r\n    **Input:** [[2,2,2],[2,1,2],[2,2,2]]\r\n    **Output:** 46\r\n    \n\n\n\n**Note:**\n\n  * `1 <= N <= 50`\n  * `0 <= grid[i][j] <= 50`",
        "level": 1,
        "paid_only": false,
        "question_id": 928,
        "slug": "surface-area-of-3d-shapes",
        "tags": [
            "Math",
            "Geometry"
        ],
        "title": "Surface Area of 3D Shapes",
        "url": "https://leetcode.com/problems/surface-area-of-3d-shapes/description/"
    },
    "929": {
        "description": "You are given an array `A` of strings.\n\nTwo strings `S` and `T` are  _special-equivalent_  if after any number of\n_moves_ , S == T.\n\nA _move_ consists of choosing two indices `i` and `j` with `i % 2 == j % 2`,\nand swapping `S[i]` with `S[j]`.\n\nNow, a _group of special-equivalent strings from`A`_  is a non-empty subset S\nof `A` such that any string not in S is not special-equivalent with any string\nin S.\n\nReturn the number of groups of special-equivalent strings from `A`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"a\",\"b\",\"c\",\"a\",\"c\",\"c\"]\r\n    **Output:** 3\r\n    **Explanation** : 3 groups [\"a\",\"a\"], [\"b\"], [\"c\",\"c\",\"c\"]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"aa\",\"bb\",\"ab\",\"ba\"]\r\n    **Output:** 4\r\n    **Explanation** : 4 groups [\"aa\"], [\"bb\"], [\"ab\"], [\"ba\"]\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [\"abc\",\"acb\",\"bac\",\"bca\",\"cab\",\"cba\"]\r\n    **Output:** 3\r\n    **Explanation** : 3 groups [\"abc\",\"cba\"], [\"acb\",\"bca\"], [\"bac\",\"cab\"]\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [\"abcd\",\"cdab\",\"adcb\",\"cbad\"]\r\n    **Output:** 1\r\n    **Explanation** : 1 group [\"abcd\",\"cdab\",\"adcb\",\"cbad\"]\r\n    \n\n\n\n**Note:**\n\n  * `1 <= A.length <= 1000`\n  * `1 <= A[i].length <= 20`\n  * All `A[i]` have the same length.\n  * All `A[i]` consist of only lowercase letters.",
        "level": 1,
        "paid_only": false,
        "question_id": 929,
        "slug": "groups-of-special-equivalent-strings",
        "tags": [
            "String"
        ],
        "title": "Groups of Special-Equivalent Strings",
        "url": "https://leetcode.com/problems/groups-of-special-equivalent-strings/description/"
    },
    "930": {
        "description": "A _full binary tree_  is a binary tree where each node has exactly 0 or 2\nchildren.\n\nReturn a list of all possible full binary trees with `N` nodes.  Each element\nof the answer is the root node of one possible tree.\n\nEach `node` of each tree in the answer **must** have `node.val = 0`.\n\nYou may return the final list of trees in any order.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 7\r\n    **Output:** [[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]\r\n    **Explanation:**\r\n    ![](https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/22/fivetrees.png)\r\n    \n\n\n\n**Note:**\n\n  * `1 <= N <= 20`",
        "level": 2,
        "paid_only": false,
        "question_id": 930,
        "slug": "all-possible-full-binary-trees",
        "tags": [
            "Tree",
            "Recursion"
        ],
        "title": "All Possible Full Binary Trees",
        "url": "https://leetcode.com/problems/all-possible-full-binary-trees/description/"
    },
    "931": {
        "description": "Implement `FreqStack`, a class which simulates the operation of a stack-like\ndata structure.\n\n`FreqStack` has two functions:\n\n  * `push(int x)`, which pushes an integer `x` onto the stack.\n  * `pop()`, which **removes** and returns the most frequent element in the stack. \n    * If there is a tie for most frequent element, the element closest to the top of the stack is removed and returned.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:**\r\n     [\"FreqStack\",\"push\",\"push\",\"push\",\"push\",\"push\",\"push\",\"pop\",\"pop\",\"pop\",\"pop\"],\r\n    [[],[5],[7],[5],[7],[4],[5],[],[],[],[]]\r\n    **Output:** [null,null,null,null,null,null,null,5,7,5,4]\r\n    **Explanation** :\r\n    After making six .push operations, the stack is [5,7,5,7,4,5] from bottom to top.  Then:\r\n    \r\n    pop() -> returns 5, as 5 is the most frequent.\r\n    The stack becomes [5,7,5,7,4].\r\n    \r\n    pop() -> returns 7, as 5 and 7 is the most frequent, but 7 is closest to the top.\r\n    The stack becomes [5,7,5,4].\r\n    \r\n    pop() -> returns 5.\r\n    The stack becomes [5,7,4].\r\n    \r\n    pop() -> returns 4.\r\n    The stack becomes [5,7].\r\n    \n\n\n\n**Note:**\n\n  * Calls to `FreqStack.push(int x)` will be such that `0 <= x <= 10^9`.\n  * It is guaranteed that `FreqStack.pop()` won't be called if the stack has zero elements.\n  * The total number of `FreqStack.push` calls will not exceed `10000` in a single test case.\n  * The total number of `FreqStack.pop` calls will not exceed `10000` in a single test case.\n  * The total number of `FreqStack.push` and `FreqStack.pop` calls will not exceed `150000` across all test cases.",
        "level": 3,
        "paid_only": false,
        "question_id": 931,
        "slug": "maximum-frequency-stack",
        "tags": [
            "Hash Table",
            "Stack"
        ],
        "title": "Maximum Frequency Stack",
        "url": "https://leetcode.com/problems/maximum-frequency-stack/description/"
    },
    "932": {
        "description": "An array is _monotonic_ if it is either monotone increasing or monotone\ndecreasing.\n\nAn array `A` is monotone increasing if for all `i <= j`, `A[i] <= A[j]`.  An\narray `A` is monotone decreasing if for all `i <= j`, `A[i] >= A[j]`.\n\nReturn `true` if and only if the given array `A` is monotonic.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,2,2,3]\r\n    **Output:** true\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [6,5,4,4]\r\n    **Output:** true\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [1,3,2]\r\n    **Output:** false\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [1,2,4,5]\r\n    **Output:** true\r\n    \n\n**Example 5:**\n\n    \n    \r\n    **Input:** [1,1,1]\r\n    **Output:** true\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 50000`\n  2. `-100000 <= A[i] <= 100000`",
        "level": 1,
        "paid_only": false,
        "question_id": 932,
        "slug": "monotonic-array",
        "tags": [
            "Array"
        ],
        "title": "Monotonic Array",
        "url": "https://leetcode.com/problems/monotonic-array/description/"
    },
    "933": {
        "description": "Given a tree, rearrange the tree in **in-order** so that the leftmost node in\nthe tree is now the root of the tree, and every node has no left child and\nonly 1 right child.\n\n    \n    \r\n    **Example 1:**\r\n    **Input:** [5,3,6,2,4,null,8,1,null,null,null,7,9]\r\n    \r\n           5\r\n          / \\\r\n        3    6\r\n       / \\    \\\r\n      2   4    8\r\n      /        / \\ \r\n    1        7   9\r\n    \r\n    **Output:** [1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]\r\n    \r\n     1\r\n       \\\r\n       2\r\n        \\\r\n         3\r\n          \\\r\n           4\r\n            \\\r\n             5\r\n              \\\r\n               6\r\n                \\\r\n                 7\r\n                  \\\r\n                   8\r\n                    \\\r\n                     9  \n\n**Note:**\n\n  1. The number of nodes in the given tree will be between 1 and 100.\n  2. Each node will have a unique integer value from 0 to 1000.",
        "level": 1,
        "paid_only": false,
        "question_id": 933,
        "slug": "increasing-order-search-tree",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Increasing Order Search Tree",
        "url": "https://leetcode.com/problems/increasing-order-search-tree/description/"
    },
    "934": {
        "description": "We have an array `A` of non-negative integers.\n\nFor every (contiguous) subarray `B = [A[i], A[i+1], ..., A[j]]` (with `i <=\nj`), we take the bitwise OR of all the elements in `B`, obtaining a result\n`A[i] | A[i+1] | ... | A[j]`.\n\nReturn the number of possible results.  (Results that occur more than once are\nonly counted once in the final answer.)\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [0]\r\n    **Output:** 1\r\n    **Explanation:**\r\n    There is only one possible result: 0.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,1,2]\r\n    **Output:** 3\r\n    **Explanation:**\r\n    The possible subarrays are [1], [1], [2], [1, 1], [1, 2], [1, 1, 2].\r\n    These yield the results 1, 1, 2, 1, 3, 3.\r\n    There are 3 unique values, so the answer is 3.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [1,2,4]\r\n    **Output:** 6\r\n    **Explanation:**\r\n    The possible results are 1, 2, 3, 4, 6, and 7.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 50000`\n  2. `0 <= A[i] <= 10^9`",
        "level": 2,
        "paid_only": false,
        "question_id": 934,
        "slug": "bitwise-ors-of-subarrays",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "title": "Bitwise ORs of Subarrays",
        "url": "https://leetcode.com/problems/bitwise-ors-of-subarrays/description/"
    },
    "935": {
        "description": "A string `S` of lowercase letters is given.  Then, we may make any number of\n_moves_.\n\nIn each move, we choose one of the first `K` letters (starting from the left),\nremove it, and place it at the end of the string.\n\nReturn the lexicographically smallest string we could have after any number of\nmoves.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** S = \"cba\", K = 1\r\n    **Output:** \"acb\"\r\n    **Explanation:**\r\n    In the first move, we move the 1st character ( \"c\") to the end, obtaining the string \"bac\".\r\n    In the second move, we move the 1st character (\"b\") to the end, obtaining the final result \"acb\".\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** S = \"baaca\", K = 3\r\n    **Output:** \"aaabc\"\r\n    **Explanation:**\r\n    In the first move, we move the 1st character ( \"b\") to the end, obtaining the string \"aacab\".\r\n    In the second move, we move the 3rd character (\"c\") to the end, obtaining the final result \"aaabc\".\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= K <= S.length <= 1000`\n  2. `S` consists of lowercase letters only.",
        "level": 3,
        "paid_only": false,
        "question_id": 935,
        "slug": "orderly-queue",
        "tags": [
            "Math",
            "String"
        ],
        "title": "Orderly Queue",
        "url": "https://leetcode.com/problems/orderly-queue/description/"
    },
    "936": {
        "description": "Write an iterator that iterates through a run-length encoded sequence.\n\nThe iterator is initialized by `RLEIterator(int[] A)`, where `A` is a run-\nlength encoding of some sequence.  More specifically, for all even `i`, `A[i]`\ntells us the number of times that the non-negative integer value `A[i+1]` is\nrepeated in the sequence.\n\nThe iterator supports one function: `next(int n)`, which exhausts the next `n`\nelements (`n >= 1`) and returns the last element exhausted in this way.  If\nthere is no element left to exhaust, `next` returns `-1` instead.\n\nFor example, we start with `A = [3,8,0,9,2,5]`, which is a run-length encoding\nof the sequence `[8,8,8,5,5]`.  This is because the sequence can be read as\n\"three eights, zero nines, two fives\".\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"RLEIterator\",\"next\",\"next\",\"next\",\"next\"], [[[3,8,0,9,2,5]],[2],[1],[1],[2]]\r\n    **Output:** [null,8,8,5,-1]\r\n    **Explanation:**\r\n    RLEIterator is initialized with RLEIterator([3,8,0,9,2,5]).\r\n    This maps to the sequence [8,8,8,5,5].\r\n    RLEIterator.next is then called 4 times:\r\n    \r\n    .next(2) exhausts 2 terms of the sequence, returning 8.  The remaining sequence is now [8, 5, 5].\r\n    \r\n    .next(1) exhausts 1 term of the sequence, returning 8.  The remaining sequence is now [5, 5].\r\n    \r\n    .next(1) exhausts 1 term of the sequence, returning 5.  The remaining sequence is now [5].\r\n    \r\n    .next(2) exhausts 2 terms, returning -1.  This is because the first term exhausted was 5,\r\n    but the second term did not exist.  Since the last term exhausted does not exist, we return -1.\r\n    \r\n    \n\n**Note:**\n\n  1. `0 <= A.length <= 1000`\n  2. `A.length` is an even integer.\n  3. `0 <= A[i] <= 10^9`\n  4. There are at most `1000` calls to `RLEIterator.next(int n)` per test case.\n  5. Each call to `RLEIterator.next(int n)` will have `1 <= n <= 10^9`.",
        "level": 2,
        "paid_only": false,
        "question_id": 936,
        "slug": "rle-iterator",
        "tags": [
            "Array"
        ],
        "title": "RLE Iterator",
        "url": "https://leetcode.com/problems/rle-iterator/description/"
    },
    "937": {
        "description": "Write a class `StockSpanner` which collects daily price quotes for some stock,\nand returns the _span_  of that stock's price for the current day.\n\nThe span of the stock's price today is defined as the maximum number of\nconsecutive days (starting from today and going backwards) for which the price\nof the stock was less than or equal to today's price.\n\nFor example, if the price of a stock over the next 7 days were `[100, 80, 60,\n70, 60, 75, 85]`, then the stock spans would be `[1, 1, 1, 2, 1, 4, 6]`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"StockSpanner\",\"next\",\"next\",\"next\",\"next\",\"next\",\"next\",\"next\"], [[],[100],[80],[60],[70],[60],[75],[85]]\r\n    **Output:** [null,1,1,1,2,1,4,6]\r\n    **Explanation:**\r\n    First, S = StockSpanner() is initialized.  Then:\r\n    S.next(100) is called and returns 1,\r\n    S.next(80) is called and returns 1,\r\n    S.next(60) is called and returns 1,\r\n    S.next(70) is called and returns 2,\r\n    S.next(60) is called and returns 1,\r\n    S.next(75) is called and returns 4,\r\n    S.next(85) is called and returns 6.\r\n    \r\n    Note that (for example) S.next(75) returned 4, because the last 4 prices\r\n    (including today 's price of 75) were less than or equal to today's price.\r\n    \n\n\n\n**Note:**\n\n  1. Calls to `StockSpanner.next(int price)` will have `1 <= price <= 10^5`.\n  2. There will be at most `10000` calls to `StockSpanner.next` per test case.\n  3. There will be at most `150000` calls to `StockSpanner.next` across all test cases.\n  4. The total time limit for this problem has been reduced by 75% for C++, and 50% for all other languages.",
        "level": 2,
        "paid_only": false,
        "question_id": 937,
        "slug": "online-stock-span",
        "tags": [
            "Stack"
        ],
        "title": "Online Stock Span",
        "url": "https://leetcode.com/problems/online-stock-span/description/"
    },
    "938": {
        "description": "We have a **sorted** set of digits `D`, a non-empty subset of\n`{'1','2','3','4','5','6','7','8','9'}`.  (Note that `'0'` is not included.)\n\nNow, we write numbers using these digits, using each digit as many times as we\nwant.  For example, if `D = {'1','3','5'}`, we may write numbers such as\n`'13', '551', '1351315'`.\n\nReturn the number of positive integers that can be written (using the digits\nof `D`) that are less than or equal to `N`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** D = [\"1\",\"3\",\"5\",\"7\"], N = 100\r\n    **Output:** 20\r\n    **Explanation:**\r\n    The 20 numbers that can be written are:\r\n    1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** D = [\"1\",\"4\",\"9\"], N = 1000000000\r\n    **Output:** 29523\r\n    **Explanation:**\r\n    We can write 3 one digit numbers, 9 two digit numbers, 27 three digit numbers,\r\n    81 four digit numbers, 243 five digit numbers, 729 six digit numbers,\r\n    2187 seven digit numbers, 6561 eight digit numbers, and 19683 nine digit numbers.\r\n    In total, this is 29523 integers that can be written using the digits of D.\n\n\n\n**Note:**\n\n  1. `D` is a subset of digits `'1'-'9'` in sorted order.\n  2. `1 <= N <= 10^9`",
        "level": 3,
        "paid_only": false,
        "question_id": 938,
        "slug": "numbers-at-most-n-given-digit-set",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Numbers At Most N Given Digit Set",
        "url": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set/description/"
    },
    "939": {
        "description": "We are given `S`, a length `n` string of characters from the set `{'D', 'I'}`.\n(These letters stand for \"decreasing\" and \"increasing\".)\n\nA  _valid permutation_  is a permutation `P[0], P[1], ..., P[n]` of integers\n`{0, 1, ..., n}`, such that for all `i`:\n\n  * If `S[i] == 'D'`, then `P[i] > P[i+1]`, and;\n  * If `S[i] == 'I'`, then `P[i] < P[i+1]`.\n\nHow many valid permutations are there?  Since the answer may be large,\n**return your answer modulo`10^9 + 7`**.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** \"DID\"\r\n    **Output:** 5\r\n    **Explanation:**\r\n    The 5 valid permutations of (0, 1, 2, 3) are:\r\n    (1, 0, 3, 2)\r\n    (2, 0, 3, 1)\r\n    (2, 1, 3, 0)\r\n    (3, 0, 2, 1)\r\n    (3, 1, 2, 0)\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= S.length <= 200`\n  2. `S` consists only of characters from the set `{'D', 'I'}`.",
        "level": 3,
        "paid_only": false,
        "question_id": 939,
        "slug": "valid-permutations-for-di-sequence",
        "tags": [
            "Divide and Conquer",
            "Dynamic Programming"
        ],
        "title": "Valid Permutations for DI Sequence",
        "url": "https://leetcode.com/problems/valid-permutations-for-di-sequence/description/"
    },
    "940": {
        "description": "In a row of trees, the `i`-th tree produces fruit with type `tree[i]`.\n\nYou **start at any tree  of your choice**, then repeatedly perform the\nfollowing steps:\n\n  1. Add one piece of fruit from this tree to your baskets.  If you cannot, stop.\n  2. Move to the next tree to the right of the current tree.  If there is no tree to the right, stop.\n\nNote that you do not have any choice after the initial choice of starting\ntree: you must perform step 1, then step 2, then back to step 1, then step 2,\nand so on until you stop.\n\nYou have two baskets, and each basket can carry any quantity of fruit, but you\nwant each basket to only carry one type of fruit each.\n\nWhat is the total amount of fruit you can collect with this procedure?\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,2,1]\r\n    **Output:** 3\r\n    **Explanation:** We can collect [1,2,1].\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [0,1,2,2]\r\n    **Output:** 3\r\n    **Explanation:** We can collect [1,2,2].\r\n    If we started at the first tree, we would only collect [0, 1].\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [1,2,3,2,2]\r\n    **Output:** 4\r\n    **Explanation:** We can collect [2,3,2,2].\r\n    If we started at the first tree, we would only collect [1, 2].\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [3,3,3,1,2,1,1,2,3,3,4]\r\n    **Output:** 5\r\n    **Explanation:** We can collect [1,2,1,1,2].\r\n    If we started at the first tree or the eighth tree, we would only collect 4 fruits.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= tree.length <= 40000`\n  2. `0 <= tree[i] < tree.length`",
        "level": 2,
        "paid_only": false,
        "question_id": 940,
        "slug": "fruit-into-baskets",
        "tags": [
            "Two Pointers"
        ],
        "title": "Fruit Into Baskets",
        "url": "https://leetcode.com/problems/fruit-into-baskets/description/"
    },
    "941": {
        "description": "Given an array `A` of non-negative integers, return an array consisting of all\nthe even elements of `A`, followed by all the odd elements of `A`.\n\nYou may return any answer array that satisfies this condition.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [3,1,2,4]\r\n    **Output:** [2,4,3,1]\r\n    The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 5000`\n  2. `0 <= A[i] <= 5000`",
        "level": 1,
        "paid_only": false,
        "question_id": 941,
        "slug": "sort-array-by-parity",
        "tags": [
            "Array"
        ],
        "title": "Sort Array By Parity",
        "url": "https://leetcode.com/problems/sort-array-by-parity/description/"
    },
    "942": {
        "description": "Let's say a positive integer is a  _superpalindrome_  if it is a palindrome,\nand it is also the square of a palindrome.\n\nNow, given two positive integers `L` and `R` (represented as strings), return\nthe number of superpalindromes in the inclusive range `[L, R]`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** L = \"4\", R = \"1000\"\r\n    **Output:** 4\r\n    **Explanation** : 4, 9, 121, and 484 are superpalindromes.\r\n    Note that 676 is not a superpalindrome: 26 * 26 = 676, but 26 is not a palindrome.\n\n\n\n**Note:**\n\n  1. `1 <= len(L) <= 18`\n  2. `1 <= len(R) <= 18`\n  3. `L` and `R` are strings representing integers in the range `[1, 10^18)`.\n  4. `int(L) <= int(R)`",
        "level": 3,
        "paid_only": false,
        "question_id": 942,
        "slug": "super-palindromes",
        "tags": [
            "Math"
        ],
        "title": "Super Palindromes",
        "url": "https://leetcode.com/problems/super-palindromes/description/"
    },
    "943": {
        "description": "Given an array of integers `A`, find the sum of `min(B)`, where `B` ranges\nover every (contiguous) subarray of `A`.\n\nSince the answer may be large, **return the answer modulo`10^9 + 7`.**\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [3,1,2,4]\r\n    **Output:** 17\r\n    **Explanation:** Subarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \r\n    Minimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.   Sum is 17.\n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 30000`\n  2. `1 <= A[i] <= 30000`",
        "level": 2,
        "paid_only": false,
        "question_id": 943,
        "slug": "sum-of-subarray-minimums",
        "tags": [
            "Array",
            "Stack"
        ],
        "title": "Sum of Subarray Minimums",
        "url": "https://leetcode.com/problems/sum-of-subarray-minimums/description/"
    },
    "944": {
        "description": "Given an array `A` of integers, for each integer `A[i]` we may choose any `x`\nwith `-K <= x <= K`, and add `x` to `A[i]`.\n\nAfter this process, we have some array `B`.\n\nReturn the smallest possible difference between the maximum value of `B` and\nthe minimum value of `B`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [1], K = 0\r\n    **Output:** 0\r\n    **Explanation** : B = [1]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [0,10], K = 2\r\n    **Output:** 6\r\n    **Explanation** : B = [2,8]\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** A = [1,3,6], K = 3\r\n    **Output:** 0\r\n    **Explanation** : B = [3,3,3] or B = [4,4,4]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 10000`\n  2. `0 <= A[i] <= 10000`\n  3. `0 <= K <= 10000`",
        "level": 1,
        "paid_only": false,
        "question_id": 944,
        "slug": "smallest-range-i",
        "tags": [],
        "title": "Smallest Range I",
        "url": "https://leetcode.com/problems/smallest-range-i/description/"
    },
    "945": {
        "description": "On an N x N `board`, the numbers from `1` to `N*N` are written\n_boustrophedonically_   **starting from the bottom  left of the board**, and\nalternating direction each row.  For example, for a 6 x 6 board, the numbers\nare written as follows:\n\n    \n    \r\n    ![](https://assets.leetcode.com/uploads/2018/09/23/snakes.png)\r\n    \n\nYou start on square `1` of the board (which is always in the last row and\nfirst column).  Each move, starting from square `x`, consists of the\nfollowing:\n\n  * You choose a destination square `S` with number `x+1`, `x+2`, `x+3`, `x+4`, `x+5`, or `x+6`, provided this number is `<= N*N`. \n    * (This choice simulates the result of a standard 6-sided die roll: ie., there are always at most 6 destinations.)\n  * If `S` has a snake or ladder, you move to the destination of that snake or ladder.  Otherwise, you move to `S`.\n\nA board square on row `r` and column `c` has a \"snake or ladder\" if\n`board[r][c] != -1`.  The destination of that snake or ladder is\n`board[r][c]`.\n\nNote that you only take a snake or ladder at most once per move: if the\ndestination to a snake or ladder is the start of another snake or ladder, you\ndo **not** continue moving.   (For example, if the board is `[[4,-1],[-1,3]]`,\nand on the first move your destination square is `2`, then you finish your\nfirst move at `3`, because you do **not** continue moving to `4`.)\n\nReturn the least number of moves required to reach square N*N.  If it is not\npossible, return `-1`.\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\r\n    [-1,-1,-1,-1,-1,-1],\r\n    [-1,-1,-1,-1,-1,-1],\r\n    [-1,-1,-1,-1,-1,-1],\r\n    [-1,35,-1,-1,13,-1],\r\n    [-1,-1,-1,-1,-1,-1],\r\n    [-1,15,-1,-1,-1,-1]]\r\n    **Output:** 4\r\n    **Explanation:**\r\n    At the beginning, you start at square 1 [at row 5, column 0].\r\n    You decide to move to square 2, and must take the ladder to square 15.\r\n    You then decide to move to square 17 (row 3, column 5), and must take the snake to square 13.\r\n    You then decide to move to square 14, and must take the ladder to square 35.\r\n    You then decide to move to square 36, ending the game.\r\n    It can be shown that you need at least 4 moves to reach the N*N-th square, so the answer is 4.\r\n    \n\n**Note:**\n\n  1. `2 <= board.length = board[0].length <= 20`\n  2. `board[i][j]` is between `1` and `N*N` or is equal to `-1`.\n  3. The board square with number `1` has no snake or ladder.\n  4. The board square with number `N*N` has no snake or ladder.",
        "level": 2,
        "paid_only": false,
        "question_id": 945,
        "slug": "snakes-and-ladders",
        "tags": [],
        "title": "Snakes and Ladders",
        "url": "https://leetcode.com/problems/snakes-and-ladders/description/"
    },
    "946": {
        "description": "Given an array `A` of integers, for each integer `A[i]` we need to choose\n**either  `x = -K` or `x = K`**, and add `x` to `A[i] **(only once)**`.\n\nAfter this process, we have some array `B`.\n\nReturn the smallest possible difference between the maximum value of `B` and\nthe minimum value of `B`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [1], K = 0\r\n    **Output:** 0\r\n    **Explanation** : B = [1]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [0,10], K = 2\r\n    **Output:** 6\r\n    **Explanation** : B = [2,8]\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** A = [1,3,6], K = 3\r\n    **Output:** 3\r\n    **Explanation** : B = [4,6,3]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 10000`\n  2. `0 <= A[i] <= 10000`\n  3. `0 <= K <= 10000`",
        "level": 2,
        "paid_only": false,
        "question_id": 946,
        "slug": "smallest-range-ii",
        "tags": [],
        "title": "Smallest Range II",
        "url": "https://leetcode.com/problems/smallest-range-ii/description/"
    },
    "947": {
        "description": "In an election, the `i`-th vote was cast for `persons[i]` at time `times[i]`.\n\nNow, we would like to implement the following query function:\n`TopVotedCandidate.q(int t)` will return the number of the person that was\nleading the election at time `t`.  \n\nVotes cast at time `t` will count towards our query.  In the case of a tie,\nthe most recent vote (among tied candidates) wins.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"TopVotedCandidate\",\"q\",\"q\",\"q\",\"q\",\"q\",\"q\"], [[[0,1,1,0,0,1,0],[0,5,10,15,20,25,30]],[3],[12],[25],[15],[24],[8]]\r\n    **Output:** [null,0,1,1,0,0,1]\r\n    **Explanation:**\r\n    At time 3, the votes are [0], and 0 is leading.\r\n    At time 12, the votes are [0,1,1], and 1 is leading.\r\n    At time 25, the votes are [0,1,1,0,0,1], and 1 is leading (as ties go to the most recent vote.)\r\n    This continues for 3 more queries at time 15, 24, and 8.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= persons.length = times.length <= 5000`\n  2. `0 <= persons[i] <= persons.length`\n  3. `times` is a strictly increasing array with all elements in `[0, 10^9]`.\n  4. `TopVotedCandidate.q` is called at most `10000` times per test case.\n  5. `TopVotedCandidate.q(int t)` is always called with `t >= times[0]`.",
        "level": 2,
        "paid_only": false,
        "question_id": 947,
        "slug": "online-election",
        "tags": [],
        "title": "Online Election",
        "url": "https://leetcode.com/problems/online-election/description/"
    },
    "948": {
        "description": "Given an array of integers `nums`, sort the array in ascending order.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:**  [5,2,3,1]\r\n    **Output:** [1,2,3,5]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [5,1,1,2,0,0]\r\n    **Output:** [0,0,1,1,2,5]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 10000`\n  2. `-50000 <= A[i] <= 50000`",
        "level": 2,
        "paid_only": false,
        "question_id": 948,
        "slug": "sort-an-array",
        "tags": [],
        "title": "Sort an Array",
        "url": "https://leetcode.com/problems/sort-an-array/description/"
    },
    "949": {
        "description": "A game on an **undirected** graph is played by two players, Mouse and Cat, who\nalternate turns.\n\nThe graph is given as follows: `graph[a]` is a list of all nodes `b` such that\n`ab` is an edge of the graph.\n\nMouse starts at node 1 and goes first, Cat starts at node 2 and goes second,\nand there is a Hole at node 0.\n\nDuring each player's turn, they **must** travel along one  edge of the graph\nthat meets where they are.  For example, if the Mouse is at node `1`, it\n**must** travel to any node in `graph[1]`.\n\nAdditionally, it is not allowed for the Cat to travel to the Hole (node 0.)\n\nThen, the game can end in 3 ways:\n\n  * If ever the Cat occupies the same node as the Mouse, the Cat wins.\n  * If ever the Mouse reaches the Hole, the Mouse wins.\n  * If ever a position is repeated (ie. the players are in the same position as a previous turn, and it is the same player's turn to move), the game is a draw.\n\nGiven a `graph`, and assuming both players play optimally, return `1` if the\ngame is won by Mouse, `2` if the game is won by Cat, and `0` if the game is a\ndraw.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]\r\n    **Output:** 0\r\n    **Explanation:**\r\n     4---3---1\r\n    |   |\r\n    2---5\r\n     \\ /\r\n      0\r\n    \n\n\n\n**Note:**\n\n  1. `3 <= graph.length <= 50`\n  2. It is guaranteed that `graph[1]` is non-empty.\n  3. It is guaranteed that `graph[2]` contains a non-zero element.",
        "level": 3,
        "paid_only": false,
        "question_id": 949,
        "slug": "cat-and-mouse",
        "tags": [
            "Breadth-first Search",
            "Minimax"
        ],
        "title": "Cat and Mouse",
        "url": "https://leetcode.com/problems/cat-and-mouse/description/"
    },
    "950": {
        "description": "In a deck of cards, each card has an integer written on it.\n\nReturn `true` if and only if you can choose `X >= 2` such that it is possible\nto split the entire deck into 1 or more groups of cards, where:\n\n  * Each group has exactly `X` cards.\n  * All the cards in each group have the same integer.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,2,3,4,4,3,2,1]\r\n    **Output:** true\r\n    **Explanation** : Possible partition [1,1],[2,2],[3,3],[4,4]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,1,1,2,2,2,3,3]\r\n    **Output:** false\r\n    **Explanation** : No possible partition.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [1]\r\n    **Output:** false\r\n    **Explanation** : No possible partition.\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [1,1]\r\n    **Output:** true\r\n    **Explanation** : Possible partition [1,1]\r\n    \n\n**Example 5:**\n\n    \n    \r\n    **Input:** [1,1,2,2,2,2]\r\n    **Output:** true\r\n    **Explanation** : Possible partition [1,1],[2,2],[2,2]\r\n    \n\n  \n**Note:**\n\n  1. `1 <= deck.length <= 10000`\n  2. `0 <= deck[i] < 10000`",
        "level": 1,
        "paid_only": false,
        "question_id": 950,
        "slug": "x-of-a-kind-in-a-deck-of-cards",
        "tags": [
            "Array",
            "Math"
        ],
        "title": "X of a Kind in a Deck of Cards",
        "url": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/description/"
    },
    "951": {
        "description": "Given an array `A`, partition it into two (contiguous) subarrays `left` and\n`right` so that:\n\n  * Every element in `left` is less than or equal to every element in `right`.\n  * `left` and `right` are non-empty.\n  * `left` has the smallest possible size.\n\nReturn the **length** of `left` after such a partitioning.  It is guaranteed\nthat such a partitioning exists.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [5,0,3,8,6]\r\n    **Output:** 3\r\n    **Explanation:** left = [5,0,3], right = [8,6]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,1,1,0,6,12]\r\n    **Output:** 4\r\n    **Explanation:** left = [1,1,1,0], right = [6,12]\r\n    \n\n\n\n**Note:**\n\n  1. `2 <= A.length <= 30000`\n  2. `0 <= A[i] <= 10^6`\n  3. It is guaranteed there is at least one way to partition `A` as described.",
        "level": 2,
        "paid_only": false,
        "question_id": 951,
        "slug": "partition-array-into-disjoint-intervals",
        "tags": [
            "Array"
        ],
        "title": "Partition Array into Disjoint Intervals",
        "url": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/description/"
    },
    "952": {
        "description": "We are given two arrays `A` and `B` of words.  Each word is a string of\nlowercase letters.\n\nNow, say that word `b` is a subset of word `a` ** ** if every letter in `b`\noccurs in `a`, **including multiplicity**.   For example, `\"wrr\"` is a subset\nof `\"warrior\"`, but is not a subset of `\"world\"`.\n\nNow say a word `a` from `A` is _universal_ if for every `b` in `B`, `b` is a\nsubset of `a`.\n\nReturn a list of all universal words in `A`.  You can return the words in any\norder.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"e\",\"o\"]\r\n    **Output:** [\"facebook\",\"google\",\"leetcode\"]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"l\",\"e\"]\r\n    **Output:** [\"apple\",\"google\",\"leetcode\"]\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"e\",\"oo\"]\r\n    **Output:** [\"facebook\",\"google\"]\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"lo\",\"eo\"]\r\n    **Output:** [\"google\",\"leetcode\"]\r\n    \n\n**Example 5:**\n\n    \n    \r\n    **Input:** A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"ec\",\"oc\",\"ceo\"]\r\n    **Output:** [\"facebook\",\"leetcode\"]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length, B.length <= 10000`\n  2. `1 <= A[i].length, B[i].length <= 10`\n  3. `A[i]` and `B[i]` consist only of lowercase letters.\n  4. All words in `A[i]` are unique: there isn't `i != j` with `A[i] == A[j]`.",
        "level": 2,
        "paid_only": false,
        "question_id": 952,
        "slug": "word-subsets",
        "tags": [
            "String"
        ],
        "title": "Word Subsets",
        "url": "https://leetcode.com/problems/word-subsets/description/"
    },
    "953": {
        "description": "Given a string `S`, return the \"reversed\" string where all characters that are\nnot a letter stay in the same place, and all letters reverse their positions.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** \"ab-cd\"\r\n    **Output:** \"dc-ba\"\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** \"a-bC-dEf-ghIj\"\r\n    **Output:** \"j-Ih-gfE-dCba\"\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** \"Test1ng-Leet=code-Q!\"\r\n    **Output:** \"Qedo1ct-eeLg=ntse-T!\"\r\n    \n\n\n\n**Note:**\n\n  1. `S.length <= 100`\n  2. `33 <= S[i].ASCIIcode <= 122` \n  3. `S` doesn't contain `\\` or `\"`",
        "level": 1,
        "paid_only": false,
        "question_id": 953,
        "slug": "reverse-only-letters",
        "tags": [],
        "title": "Reverse Only Letters",
        "url": "https://leetcode.com/problems/reverse-only-letters/description/"
    },
    "954": {
        "description": "Given a **circular  array**  **C** of integers represented by  `A`, find the\nmaximum possible sum of a non-empty subarray of **C**.\n\nHere, a  _circular  array_ means the end of the array connects to the\nbeginning of the array.  (Formally, `C[i] = A[i]` when `0 <= i < A.length`,\nand `C[i+A.length] = C[i]` when `i >= 0`.)\n\nAlso, a subarray may only include each element of the fixed buffer `A` at most\nonce.  (Formally, for a subarray `C[i], C[i+1], ..., C[j]`, there does not\nexist `i <= k1, k2 <= j` with `k1 % A.length = k2 % A.length`.)\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,-2,3,-2]\r\n    **Output:** 3\r\n    **Explanation:** Subarray [3] has maximum sum 3\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [5,-3,5]\r\n    **Output:** 10\r\n    **Explanation:**  Subarray [5,5] has maximum sum 5 + 5 = 10\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [3,-1,2,-1]\r\n    **Output:** 4\r\n    **Explanation:**  Subarray [2,-1,3] has maximum sum 2 + (-1) + 3 = 4\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [3,-2,2,-3]\r\n    **Output:** 3\r\n    **Explanation:**  Subarray [3] and [3,-2,2] both have maximum sum 3\r\n    \n\n**Example 5:**\n\n    \n    \r\n    **Input:** [-2,-3,-1]\r\n    **Output:** -1\r\n    **Explanation:**  Subarray [-1] has maximum sum -1\r\n    \n\n\n\n**Note:**\n\n  1. `-30000 <= A[i] <= 30000`\n  2. `1 <= A.length <= 30000`",
        "level": 2,
        "paid_only": false,
        "question_id": 954,
        "slug": "maximum-sum-circular-subarray",
        "tags": [],
        "title": "Maximum Sum Circular Subarray",
        "url": "https://leetcode.com/problems/maximum-sum-circular-subarray/description/"
    },
    "955": {
        "description": "A _complete_ binary tree is a binary tree in which every level, except\npossibly the last, is completely filled, and all nodes are as far left as\npossible.\n\nWrite a data structure `CBTInserter` that is initialized with a complete\nbinary tree and supports the following operations:\n\n  * `CBTInserter(TreeNode root)` initializes the data structure on a given tree with head node `root`;\n  * `CBTInserter.insert(int v)` will insert a `TreeNode` into the tree with value `node.val = v` so that the tree remains complete, **and returns the value of the parent of the inserted`TreeNode`** ;\n  * `CBTInserter.get_root()` will return the head node of the tree.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** inputs = [\"CBTInserter\",\"insert\",\"get_root\"], inputs = [[[1]],[2],[]]\r\n    **Output:** [null,1,[1,2]]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** inputs = [\"CBTInserter\",\"insert\",\"insert\",\"get_root\"], inputs = [[[1,2,3,4,5,6]],[7],[8],[]]\r\n    **Output:** [null,3,4,[1,2,3,4,5,6,7,8]]\n\n\n\n**Note:**\n\n  1. The initial given tree is complete and contains between `1` and `1000` nodes.\n  2. `CBTInserter.insert` is called at most `10000` times per test case.\n  3. Every value of a given or inserted node is between `0` and `5000`.",
        "level": 2,
        "paid_only": false,
        "question_id": 955,
        "slug": "complete-binary-tree-inserter",
        "tags": [],
        "title": "Complete Binary Tree Inserter",
        "url": "https://leetcode.com/problems/complete-binary-tree-inserter/description/"
    },
    "956": {
        "description": "Your music player contains `N` different songs and she wants to listen to `L`\n**** (not necessarily different) songs during your trip.  You create a\nplaylist so that:\n\n  * Every song is played at least once\n  * A song can only be played again only if `K` other songs have been played\n\nReturn the number of possible playlists.  **As the answer can be very large,\nreturn it modulo`10^9 + 7`**.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** N = 3, L = 3, K = 1\r\n    **Output:** 6\r\n    **Explanation** : There are 6 possible playlists. [1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** N = 2, L = 3, K = 0\r\n    **Output:** 6\r\n    **Explanation** : There are 6 possible playlists. [1, 1, 2], [1, 2, 1], [2, 1, 1], [2, 2, 1], [2, 1, 2], [1, 2, 2]\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** N = 2, L = 3, K = 1\r\n    **Output:** 2\r\n    **Explanation** : There are 2 possible playlists. [1, 2, 1], [2, 1, 2]\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= K < N <= L <= 100`",
        "level": 3,
        "paid_only": false,
        "question_id": 956,
        "slug": "number-of-music-playlists",
        "tags": [],
        "title": "Number of Music Playlists",
        "url": "https://leetcode.com/problems/number-of-music-playlists/description/"
    },
    "957": {
        "description": "Given a string `S` of `'('` and `')'` parentheses, we add the minimum number\nof parentheses ( `'('` or `')'`, and in any positions ) so that the resulting\nparentheses string is valid.\n\nFormally, a parentheses string is valid if and only if:\n\n  * It is the empty string, or\n  * It can be written as `AB` (`A` concatenated with `B`), where `A` and `B` are valid strings, or\n  * It can be written as `(A)`, where `A` is a valid string.\n\nGiven a parentheses string, return the minimum number of parentheses we must\nadd to make the resulting string valid.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** \"())\"\r\n    **Output:** 1\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** \"(((\"\r\n    **Output:** 3\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** \"()\"\r\n    **Output:** 0\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** \"()))((\"\r\n    **Output:** 4\n\n\n\n**Note:**\n\n  1. `S.length <= 1000`\n  2. `S` only consists of `'('` and `')'` characters.",
        "level": 2,
        "paid_only": false,
        "question_id": 957,
        "slug": "minimum-add-to-make-parentheses-valid",
        "tags": [
            "Stack",
            "Greedy"
        ],
        "title": "Minimum Add to Make Parentheses Valid",
        "url": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/description/"
    },
    "958": {
        "description": "Given an array `A` of non-negative integers, half of the integers in A are\nodd, and half of the integers are even.\n\nSort the array so that whenever `A[i]` is odd, `i` is odd; and whenever `A[i]`\nis even, `i` is even.\n\nYou may return any answer array that satisfies this condition.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [4,2,5,7]\r\n    **Output:** [4,5,2,7]\r\n    **Explanation:** [4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.\r\n    \n\n\n\n**Note:**\n\n  1. `2 <= A.length <= 20000`\n  2. `A.length % 2 == 0`\n  3. `0 <= A[i] <= 1000`",
        "level": 1,
        "paid_only": false,
        "question_id": 958,
        "slug": "sort-array-by-parity-ii",
        "tags": [
            "Array",
            "Sort"
        ],
        "title": "Sort Array By Parity II",
        "url": "https://leetcode.com/problems/sort-array-by-parity-ii/description/"
    },
    "959": {
        "description": "Given an integer array `A`, and an integer `target`, return the number of\ntuples `i, j, k`  such that `i < j < k` and `A[i] + A[j] + A[k] == target`.\n\n**As the answer can be very large, return it modulo  `10^9 + 7`**.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [1,1,2,2,3,3,4,4,5,5], target = 8\r\n    **Output:** 20\r\n    **Explanation:**\r\n    Enumerating by the values (A[i], A[j], A[k]):\r\n    (1, 2, 5) occurs 8 times;\r\n    (1, 3, 4) occurs 8 times;\r\n    (2, 2, 4) occurs 2 times;\r\n    (2, 3, 3) occurs 2 times.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [1,1,2,2,2,2], target = 5\r\n    **Output:** 12\r\n    **Explanation:**\r\n    A[i] = 1, A[j] = A[k] = 2 occurs 12 times:\r\n    We choose one 1 from [1,1] in 2 ways,\r\n    and two 2s from [2,2,2,2] in 6 ways.\r\n    \n\n\n\n**Note:**\n\n  1. `3 <= A.length <= 3000`\n  2. `0 <= A[i] <= 100`\n  3. `0 <= target <= 300`",
        "level": 2,
        "paid_only": false,
        "question_id": 959,
        "slug": "3sum-with-multiplicity",
        "tags": [
            "Two Pointers"
        ],
        "title": "3Sum With Multiplicity",
        "url": "https://leetcode.com/problems/3sum-with-multiplicity/description/"
    },
    "960": {
        "description": "In a network of nodes, each node `i` is directly connected to another node `j`\nif and only if `graph[i][j] = 1`.\n\nSome nodes `initial` are initially infected by malware.  Whenever two nodes\nare directly connected and at least one of those two nodes is infected by\nmalware, both nodes will be infected by malware.  This spread of malware will\ncontinue until no more nodes can be infected in this manner.\n\nSuppose `M(initial)` is the final number of nodes infected with malware in the\nentire network, after the spread of malware stops.\n\nWe will remove one node from the initial list.  Return the node that if\nremoved, would minimize `M(initial)`.  If multiple nodes could be removed to\nminimize `M(initial)`, return such a node with the smallest index.\n\nNote that if a node was removed from the `initial` list of infected nodes, it\nmay still be infected later as a result of the malware spread.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]\r\n    **Output:** 0\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** graph = [[1,0,0],[0,1,0],[0,0,1]], initial = [0,2]\r\n    **Output:** 0\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** graph = [[1,1,1],[1,1,1],[1,1,1]], initial = [1,2]\r\n    **Output:** 1\r\n    \n\n\n\n**Note:**\n\n  1. `1 < graph.length = graph[0].length <= 300`\n  2. `0 <= graph[i][j] == graph[j][i] <= 1`\n  3. `graph[i][i] = 1`\n  4. `1 <= initial.length < graph.length`\n  5. `0 <= initial[i] < graph.length`",
        "level": 3,
        "paid_only": false,
        "question_id": 960,
        "slug": "minimize-malware-spread",
        "tags": [
            "Depth-first Search",
            "Union Find"
        ],
        "title": "Minimize Malware Spread",
        "url": "https://leetcode.com/problems/minimize-malware-spread/description/"
    },
    "961": {
        "description": "Your friend is typing his `name` into a keyboard.  Sometimes, when typing a\ncharacter `c`, the key might get _long pressed_ , and the character will be\ntyped 1 or more times.\n\nYou examine the `typed` characters of the keyboard.  Return `True` if it is\npossible that it was your friends name, with some characters (possibly none)\nbeing long pressed.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** name = \"alex\", typed = \"aaleex\"\r\n    **Output:** true\r\n    **Explanation:** 'a' and 'e' in 'alex' were long pressed.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** name = \"saeed\", typed = \"ssaaedd\"\r\n    **Output:** false\r\n    **Explanation:** 'e' must have been pressed twice, but it wasn't in the typed output.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** name = \"leelee\", typed = \"lleeelee\"\r\n    **Output:** true\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** name = \"laiden\", typed = \"laiden\"\r\n    **Output:** true\r\n    **Explanation:** It's not necessary to long press any character.\r\n    \n\n\n\n**Note:**\n\n  1. `name.length <= 1000`\n  2. `typed.length <= 1000`\n  3. The characters of `name` and `typed` are lowercase letters.",
        "level": 1,
        "paid_only": false,
        "question_id": 961,
        "slug": "long-pressed-name",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "title": "Long Pressed Name",
        "url": "https://leetcode.com/problems/long-pressed-name/description/"
    },
    "962": {
        "description": "A string of `'0'`s and `'1'`s is _monotone increasing_ if it consists of some\nnumber of `'0'`s (possibly 0), followed by some number of `'1'`s (also\npossibly 0.)\n\nWe are given a string `S` of `'0'`s and `'1'`s, and we may flip any `'0'` to a\n`'1'` or a `'1'` to a `'0'`.\n\nReturn the minimum number of flips to make `S` monotone increasing.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** \"00110\"\r\n    **Output:** 1\r\n    **Explanation:** We flip the last digit to get 00111.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** \"010110\"\r\n    **Output:** 2\r\n    **Explanation:** We flip to get 011111, or alternatively 000111.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** \"00011000\"\r\n    **Output:** 2\r\n    **Explanation:** We flip to get 00000000.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= S.length <= 20000`\n  2. `S` only consists of `'0'` and `'1'` characters.",
        "level": 2,
        "paid_only": false,
        "question_id": 962,
        "slug": "flip-string-to-monotone-increasing",
        "tags": [
            "Array"
        ],
        "title": "Flip String to Monotone Increasing",
        "url": "https://leetcode.com/problems/flip-string-to-monotone-increasing/description/"
    },
    "963": {
        "description": "Given an array `A` of `0`s and `1`s, divide the array into 3 non-empty parts\nsuch that all of these parts represent the same binary value.\n\nIf it is possible, return **any** `[i, j]` with `i+1 < j`, such that:\n\n  * `A[0], A[1], ..., A[i]` is the first part;\n  * `A[i+1], A[i+2], ..., A[j-1]` is the second part, and\n  * `A[j], A[j+1], ..., A[A.length - 1]` is the third part.\n  * All three parts have equal binary value.\n\nIf it is not possible, return `[-1, -1]`.\n\nNote that the entire part is used when considering what binary value it\nrepresents.  For example, `[1,1,0]` represents `6` in decimal, not `3`.  Also,\nleading zeros are allowed, so `[0,1,1]` and `[1,1]` represent the same value.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,0,1,0,1]\r\n    **Output:** [0,3]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,1,0,1,1]\r\n    **Output:** [-1,-1]\n\n\n\n**Note:**\n\n  1. `3 <= A.length <= 30000`\n  2. `A[i] == 0` or `A[i] == 1`",
        "level": 3,
        "paid_only": false,
        "question_id": 963,
        "slug": "three-equal-parts",
        "tags": [
            "Math",
            "Binary Search",
            "Greedy"
        ],
        "title": "Three Equal Parts",
        "url": "https://leetcode.com/problems/three-equal-parts/description/"
    },
    "964": {
        "description": "(This problem is the same as _Minimize Malware Spread_ , with the differences\nbolded.)\n\nIn a network of nodes, each node `i` is directly connected to another node `j`\nif and only if `graph[i][j] = 1`.\n\nSome nodes `initial` are initially infected by malware.  Whenever two nodes\nare directly connected and at least one of those two nodes is infected by\nmalware, both nodes will be infected by malware.  This spread of malware will\ncontinue until no more nodes can be infected in this manner.\n\nSuppose `M(initial)` is the final number of nodes infected with malware in the\nentire network, after the spread of malware stops.\n\nWe will remove one node from the initial list, **completely removing it and\nany connections from this node to any other node**.   Return the node that if\nremoved, would minimize `M(initial)`.  If multiple nodes could be removed to\nminimize `M(initial)`, return such a node with the smallest index.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]\r\n    **Output:** 0\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** graph = [[1,1,0],[1,1,1],[0,1,1]], initial = [0,1]\r\n    **Output:** 1\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** graph = [[1,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,1]], initial = [0,1]\r\n    **Output:** 1\r\n    \n\n\n\n**Note:**\n\n  1. `1 < graph.length = graph[0].length <= 300`\n  2. `0 <= graph[i][j] == graph[j][i] <= 1`\n  3. `graph[i][i] = 1`\n  4. `1 <= initial.length < graph.length`\n  5. `0 <= initial[i] < graph.length`",
        "level": 3,
        "paid_only": false,
        "question_id": 964,
        "slug": "minimize-malware-spread-ii",
        "tags": [
            "Depth-first Search",
            "Union Find",
            "Graph"
        ],
        "title": "Minimize Malware Spread II",
        "url": "https://leetcode.com/problems/minimize-malware-spread-ii/description/"
    },
    "965": {
        "description": "Every email consists of a local name and a domain name, separated by the @\nsign.\n\nFor example, in `alice@leetcode.com`, `alice` is the local name, and\n`leetcode.com` is the domain name.\n\nBesides lowercase letters, these emails may contain `'.'`s or `'+'`s.\n\nIf you add periods (`'.'`) between some characters in the **local name** part\nof an email address, mail sent there will be forwarded to the same address\nwithout dots in the local name.   For example, `\"alice.z@leetcode.com\"` and\n`\"alicez@leetcode.com\"` forward to the same email address.  (Note that this\nrule does not apply for domain names.)\n\nIf you add a plus (`'+'`) in the **local name** , everything after the first\nplus sign will be  **ignored**. This allows certain emails to be filtered, for\nexample  `m.y+name@email.com` will be forwarded to `my@email.com`.  (Again,\nthis rule does not apply for domain names.)\n\nIt is possible to use both of these rules at the same time.\n\nGiven a list of `emails`, we send one email to each address in the list.  How\nmany different addresses actually receive mails?\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"test.email+alex@leetcode.com\",\"test.e.mail+bob.cathy@leetcode.com\",\"testemail+david@lee.tcode.com\"]\r\n    **Output:** 2\r\n    **Explanation:**  \"testemail@leetcode.com\" and \"testemail@lee.tcode.com\" actually receive mails\r\n    \n\n\n\n**Note:**\n\n  * `1 <= emails[i].length <= 100`\n  * `1 <= emails.length <= 100`\n  * Each `emails[i]` contains exactly one `'@'` character.",
        "level": 1,
        "paid_only": false,
        "question_id": 965,
        "slug": "unique-email-addresses",
        "tags": [
            "String"
        ],
        "title": "Unique Email Addresses",
        "url": "https://leetcode.com/problems/unique-email-addresses/description/"
    },
    "966": {
        "description": "In an array `A` of `0`s and `1`s, how many **non-empty** subarrays have sum\n`S`?\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [1,0,1,0,1], S = 2\r\n    **Output:** 4\r\n    **Explanation:**\r\n    The 4 subarrays are bolded below:\r\n    [ **1,0,1** ,0,1]\r\n    [ **1,0,1,0** ,1]\r\n    [1, **0,1,0,1** ]\r\n    [1,0, **1,0,1** ]\r\n    \n\n\n\n**Note:**\n\n  1. `A.length <= 30000`\n  2. `0 <= S <= A.length`\n  3. `A[i]` is either `0` or `1`.",
        "level": 2,
        "paid_only": false,
        "question_id": 966,
        "slug": "binary-subarrays-with-sum",
        "tags": [
            "Hash Table",
            "Two Pointers"
        ],
        "title": "Binary Subarrays With Sum",
        "url": "https://leetcode.com/problems/binary-subarrays-with-sum/description/"
    },
    "967": {
        "description": "Given a **square** array of integers `A`, we want the **minimum** sum of a\n_falling path_ through `A`.\n\nA falling path starts at any element in the first row, and chooses one element\nfrom each row.  The next row's choice must be in a column that is different\nfrom the previous row's column by at most one.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [[1,2,3],[4,5,6],[7,8,9]]\r\n    **Output:** 12\r\n    **Explanation:**\r\n    The possible falling paths are:\r\n    \n\n  * `[1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9]`\n  * `[2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9]`\n  * `[3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]`\n\nThe falling path with the smallest sum is `[1,4,7]`, so the answer is `12`.\n\n\n\n**Note:**\n\n  1. `1 <= A.length == A[0].length <= 100`\n  2. `-100 <= A[i][j] <= 100`",
        "level": 2,
        "paid_only": false,
        "question_id": 967,
        "slug": "minimum-falling-path-sum",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Minimum Falling Path Sum",
        "url": "https://leetcode.com/problems/minimum-falling-path-sum/description/"
    },
    "968": {
        "description": "For some fixed `N`, an array `A` is _beautiful_ if it is a permutation of the\nintegers `1, 2, ..., N`, such that:\n\nFor every `i < j`, there is **no**  `k` with `i < k < j` such that `A[k] * 2 =\nA[i] + A[j]`.\n\nGiven `N`, return **any** beautiful array `A`.  (It is guaranteed that one\nexists.)\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 4\r\n    **Output:** [2,1,4,3]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** 5\r\n    **Output:** [3,1,2,5,4]\n\n\n\n**Note:**\n\n  * `1 <= N <= 1000`",
        "level": 2,
        "paid_only": false,
        "question_id": 968,
        "slug": "beautiful-array",
        "tags": [
            "Divide and Conquer"
        ],
        "title": "Beautiful Array",
        "url": "https://leetcode.com/problems/beautiful-array/description/"
    },
    "969": {
        "description": "Write a class `RecentCounter` to count recent requests.\n\nIt has only one method: `ping(int t)`, where t represents some time in\nmilliseconds.\n\nReturn the number of `ping`s that have been made from 3000 milliseconds ago\nuntil now.\n\nAny ping with time in `[t - 3000, t]` will count, including the current ping.\n\nIt is guaranteed that every call to `ping` uses a strictly larger value of `t`\nthan before.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** inputs = [\"RecentCounter\",\"ping\",\"ping\",\"ping\",\"ping\"], inputs = [[],[1],[100],[3001],[3002]]\r\n    **Output:** [null,1,2,3,3]\n\n\n\n**Note:**\n\n  1. Each test case will have at most `10000` calls to `ping`.\n  2. Each test case will call `ping` with strictly increasing values of `t`.\n  3. Each call to ping will have `1 <= t <= 10^9`.",
        "level": 1,
        "paid_only": false,
        "question_id": 969,
        "slug": "number-of-recent-calls",
        "tags": [
            "Queue"
        ],
        "title": "Number of Recent Calls",
        "url": "https://leetcode.com/problems/number-of-recent-calls/description/"
    },
    "971": {
        "description": "In a given 2D binary array `A`, there are two islands.  (An island is a\n4-directionally connected group of `1`s not connected to any other 1s.)\n\nNow, we may change `0`s to `1`s so as to connect the two islands together to\nform 1 island.\n\nReturn the smallest number of `0`s that must be flipped.  (It is guaranteed\nthat the answer is at least 1.)\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [[0,1],[1,0]]\r\n    **Output:** 1\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [[0,1,0],[0,0,0],[0,0,1]]\r\n    **Output:** 2\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]\r\n    **Output:** 1\n\n\n\n**Note:**\n\n  1. `1 <= A.length = A[0].length <= 100`\n  2. `A[i][j] == 0` or `A[i][j] == 1`",
        "level": 2,
        "paid_only": false,
        "question_id": 971,
        "slug": "shortest-bridge",
        "tags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "title": "Shortest Bridge",
        "url": "https://leetcode.com/problems/shortest-bridge/description/"
    },
    "972": {
        "description": "A chess knight can move as indicated in the chess diagram below:\n\n![](https://assets.leetcode.com/uploads/2018/10/12/knight.png) .\n![](https://assets.leetcode.com/uploads/2018/10/30/keypad.png)\n\n\n\nThis time, we place our chess knight on any numbered key of a phone pad\n(indicated above), and the knight makes `N-1` hops.  Each hop must be from one\nkey to another numbered key.\n\nEach time it lands on a key (including the initial placement of the knight),\nit presses the number of that key, pressing `N` digits total.\n\nHow many distinct numbers can you dial in this manner?\n\nSince the answer may be large, **output the answer  modulo `10^9 + 7`**.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 1\r\n    **Output:** 10\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** 2\r\n    **Output:** 20\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** 3\r\n    **Output:** 46\r\n    \n\n\n\n**Note:**\n\n  * `1 <= N <= 5000`",
        "level": 2,
        "paid_only": false,
        "question_id": 972,
        "slug": "knight-dialer",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Knight Dialer",
        "url": "https://leetcode.com/problems/knight-dialer/description/"
    },
    "973": {
        "description": "You want to form a `target` string of **lowercase letters**.\n\nAt the beginning, your sequence is `target.length` `'?'` marks.  You also have\na `stamp` of lowercase letters.\n\nOn each turn, you may place the stamp over the sequence, and replace every\nletter in the sequence with the corresponding letter from the stamp.  You can\nmake up to `10 * target.length` turns.\n\nFor example, if the initial sequence is \"?????\", and your stamp is `\"abc\"`,\nthen you may make \"abc??\", \"?abc?\", \"??abc\" in the first turn.  (Note that the\nstamp must be fully contained in the boundaries of the sequence in order to\nstamp.)\n\nIf the sequence is possible to stamp, then return an array of the index of the\nleft-most letter being stamped at each turn.  If the sequence is not possible\nto stamp, return an empty array.\n\nFor example, if the sequence is \"ababc\", and the stamp is `\"abc\"`, then we\ncould return the answer `[0, 2]`, corresponding to the moves \"?????\" ->\n\"abc??\" -> \"ababc\".\n\nAlso, if the sequence is possible to stamp, it is guaranteed it is possible to\nstamp within `10 * target.length` moves.  Any answers specifying more than\nthis number of moves will not be accepted.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** stamp = \"abc\", target = \"ababc\"\r\n    **Output:** [0,2]\r\n    ([1,0,2] would also be accepted as an answer, as well as some other answers.)\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** stamp = \"abca\", target = \"aabcaca\"\r\n    **Output:** [3,0,1]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= stamp.length <= target.length <= 1000`\n  2. `stamp` and `target` only contain lowercase letters.",
        "level": 3,
        "paid_only": false,
        "question_id": 973,
        "slug": "stamping-the-sequence",
        "tags": [
            "String",
            "Greedy"
        ],
        "title": "Stamping The Sequence",
        "url": "https://leetcode.com/problems/stamping-the-sequence/description/"
    },
    "974": {
        "description": "You have an array of `logs`.  Each log is a space delimited string of words.\n\nFor each log, the first word in each log is an alphanumeric _identifier_.\nThen, either:\n\n  * Each word after the identifier will consist only of lowercase letters, or;\n  * Each word after the identifier will consist only of digits.\n\nWe will call these two varieties of logs _letter-logs_ and _digit-logs_.   It\nis guaranteed that each log has at least one word after its identifier.\n\nReorder the logs so that all of the letter-logs come before any digit-log.\nThe letter-logs are ordered lexicographically ignoring identifier, with the\nidentifier used in case of ties.  The digit-logs should be put in their\noriginal order.\n\nReturn the final order of the logs.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"a1 9 2 3 1\",\"g1 act car\",\"zo4 4 7\",\"ab1 off key dog\",\"a8 act zoo\"]\r\n    **Output:** [\"g1 act car\",\"a8 act zoo\",\"ab1 off key dog\",\"a1 9 2 3 1\",\"zo4 4 7\"]\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= logs.length <= 100`\n  2. `3 <= logs[i].length <= 100`\n  3. `logs[i]` is guaranteed to have an identifier, and a word after the identifier.",
        "level": 1,
        "paid_only": false,
        "question_id": 974,
        "slug": "reorder-log-files",
        "tags": [
            "String"
        ],
        "title": "Reorder Log Files",
        "url": "https://leetcode.com/problems/reorder-log-files/description/"
    },
    "975": {
        "description": "Given the `root` node of a binary search tree, return the sum of values of all\nnodes with value between `L` and `R` (inclusive).\n\nThe binary search tree is guaranteed to have unique values.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** root = [10,5,15,3,7,null,18], L = 7, R = 15\r\n    **Output:** 32\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** root = [10,5,15,3,7,13,18,1,null,6], L = 6, R = 10\r\n    **Output:** 23\r\n    \n\n\n\n**Note:**\n\n  1. The number of nodes in the tree is at most `10000`.\n  2. The final answer is guaranteed to be less than `2^31`.",
        "level": 2,
        "paid_only": false,
        "question_id": 975,
        "slug": "range-sum-of-bst",
        "tags": [
            "Binary Search Tree"
        ],
        "title": "Range Sum of BST",
        "url": "https://leetcode.com/problems/range-sum-of-bst/description/"
    },
    "976": {
        "description": "Given a set of points in the xy-plane, determine the minimum area of a\nrectangle formed from these points, with sides parallel to the x and y axes.\n\nIf there isn't any rectangle, return 0.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [[1,1],[1,3],[3,1],[3,3],[2,2]]\r\n    **Output:** 4\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]\r\n    **Output:** 2\r\n    \n\n\n\n**Note** :\n\n  1. `1 <= points.length <= 500`\n  2. `0 <= points[i][0] <= 40000`\n  3. `0 <= points[i][1] <= 40000`\n  4. All points are distinct.",
        "level": 2,
        "paid_only": false,
        "question_id": 976,
        "slug": "minimum-area-rectangle",
        "tags": [
            "Hash Table"
        ],
        "title": "Minimum Area Rectangle",
        "url": "https://leetcode.com/problems/minimum-area-rectangle/description/"
    },
    "977": {
        "description": "Given a string `S`, count the number of distinct, non-empty subsequences of\n`S` .\n\nSince the result may be large, **return the answer modulo`10^9 + 7`**.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** \"abc\"\r\n    **Output:** 7\r\n    **Explanation** : The 7 distinct subsequences are \"a\", \"b\", \"c\", \"ab\", \"ac\", \"bc\", and \"abc\".\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** \"aba\"\r\n    **Output:** 6\r\n    **Explanation** : The 6 distinct subsequences are \"a\", \"b\", \"ab\", \"ba\", \"aa\" and \"aba\".\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** \"aaa\"\r\n    **Output:** 3\r\n    **Explanation** : The 3 distinct subsequences are \"a\", \"aa\" and \"aaa\".\r\n    \n\n\n\n\n\n**Note:**\n\n  1. `S` contains only lowercase letters.\n  2. `1 <= S.length <= 2000`",
        "level": 3,
        "paid_only": false,
        "question_id": 977,
        "slug": "distinct-subsequences-ii",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Distinct Subsequences II",
        "url": "https://leetcode.com/problems/distinct-subsequences-ii/description/"
    },
    "978": {
        "description": "Given an array `A` of integers, return `true` if and only if it is a _valid\nmountain array_.\n\nRecall that A is a mountain array if and only if:\n\n  * `A.length >= 3`\n  * There exists some `i` with `0 < i < A.length - 1` such that: \n    * `A[0] < A[1] < ... A[i-1] < A[i] `\n    * `A[i] > A[i+1] > ... > A[B.length - 1]`\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [2,1]\r\n    **Output:** false\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [3,5,5]\r\n    **Output:** false\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [0,3,2,1]\r\n    **Output:** true\n\n\n\n**Note:**\n\n  1. `0 <= A.length <= 10000`\n  2. `0 <= A[i] <= 10000 `",
        "level": 1,
        "paid_only": false,
        "question_id": 978,
        "slug": "valid-mountain-array",
        "tags": [
            "Array"
        ],
        "title": "Valid Mountain Array",
        "url": "https://leetcode.com/problems/valid-mountain-array/description/"
    },
    "979": {
        "description": "Given a string `S` that **only** contains  \"I\" (increase) or \"D\" (decrease),\nlet `N = S.length`.\n\nReturn **any** permutation `A` of `[0, 1, ..., N]` such that for all `i = 0,\n..., N-1`:\n\n  * If `S[i] == \"I\"`, then `A[i] < A[i+1]`\n  * If `S[i] == \"D\"`, then `A[i] > A[i+1]`\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** \"IDID\"\r\n    **Output:** [0,4,1,3,2]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** \"III\"\r\n    **Output:** [0,1,2,3]\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** \"DDI\"\r\n    **Output:** [3,2,0,1]\n\n\n\n**Note:**\n\n  1. `1 <= S.length <= 10000`\n  2. `S` only contains characters `\"I\"` or `\"D\"`.",
        "level": 1,
        "paid_only": false,
        "question_id": 979,
        "slug": "di-string-match",
        "tags": [
            "Math"
        ],
        "title": "DI String Match",
        "url": "https://leetcode.com/problems/di-string-match/description/"
    },
    "980": {
        "description": "Given an array A of strings, find any smallest string that contains each\nstring in `A` as a substring.\n\nWe may assume that no string in `A` is substring of another string in `A`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"alex\",\"loves\",\"leetcode\"]\r\n    **Output:** \"alexlovesleetcode\"\r\n    **Explanation:** All permutations of \"alex\",\"loves\",\"leetcode\" would also be accepted.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"catg\",\"ctaagt\",\"gcta\",\"ttca\",\"atgcatc\"]\r\n    **Output:** \"gctaagttcatgcatc\"\n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 12`\n  2. `1 <= A[i].length <= 20`",
        "level": 3,
        "paid_only": false,
        "question_id": 980,
        "slug": "find-the-shortest-superstring",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Find the Shortest Superstring",
        "url": "https://leetcode.com/problems/find-the-shortest-superstring/description/"
    },
    "981": {
        "description": "We are given an array `A` of `N` lowercase letter strings, all of the same\nlength.\n\nNow, we may choose any set of deletion indices, and for each string, we delete\nall the characters in those indices.\n\nFor example, if we have an array `A = [\"``abcdef``\",\"uvwxyz\"]` and deletion\nindices `{0, 2, 3}`, then the final array after deletions is `[\"bef\", \"vyz\"]`,\nand the remaining columns of `A` are `[\"b\"``,\"``v\"]`, `[\"e\",\"y\"]`, and\n`[\"f\",\"z\"]`.  (Formally, the `c`-th column is `[A[0][c], A[1][c], ...,\nA[A.length-1][c]]`.)\n\nSuppose we chose a set of deletion indices `D` such that after deletions, each\nremaining column in A is in **non-decreasing** sorted order.\n\nReturn the minimum possible value of `D.length`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"cba\",\"daf\",\"ghi\"]\r\n    **Output:** 1\r\n    **Explanation:**\r\n    After choosing D = {1}, each column [ \"c\",\"d\",\"g\"] and [\"a\",\"f\",\"i\"] are in non-decreasing sorted order.\r\n    If we chose D = {}, then a column [\"b\",\"a\",\"h\"] would not be in non-decreasing sorted order.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"a\",\"b\"]\r\n    **Output:** 0\r\n    **Explanation:** D = {}\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [\"zyx\",\"wvu\",\"tsr\"]\r\n    **Output:** 3\r\n    **Explanation:** D = {0, 1, 2}\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 100`\n  2. `1 <= A[i].length <= 1000`",
        "level": 1,
        "paid_only": false,
        "question_id": 981,
        "slug": "delete-columns-to-make-sorted",
        "tags": [
            "Greedy"
        ],
        "title": "Delete Columns to Make Sorted",
        "url": "https://leetcode.com/problems/delete-columns-to-make-sorted/description/"
    },
    "982": {
        "description": "Given an array of integers A, a _move_ consists of choosing any `A[i]`, and\nincrementing it by `1`.\n\nReturn the least number of moves to make every value in `A` unique.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,2,2]\r\n    **Output:** 1\r\n    **Explanation:** After 1 move, the array could be [1, 2, 3].\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [3,2,1,2,1,7]\r\n    **Output:** 6\r\n    **Explanation:** After 6 moves, the array could be [3, 4, 1, 2, 5, 7].\r\n    It can be shown with 5 or less moves that it is impossible for the array to have all unique values.\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= A.length <= 40000`\n  2. `0 <= A[i] < 40000`",
        "level": 2,
        "paid_only": false,
        "question_id": 982,
        "slug": "minimum-increment-to-make-array-unique",
        "tags": [
            "Array"
        ],
        "title": "Minimum Increment to Make Array Unique",
        "url": "https://leetcode.com/problems/minimum-increment-to-make-array-unique/description/"
    },
    "983": {
        "description": "Given two sequences `pushed` and `popped`  **with distinct values** , return\n`true` if and only if this could have been the result of a sequence of push\nand pop operations on an initially empty stack.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** pushed = [1,2,3,4,5], popped = [4,5,3,2,1]\r\n    **Output:** true\r\n    **Explanation:** We might do the following sequence:\r\n    push(1), push(2), push(3), push(4), pop() -> 4,\r\n    push(5), pop() -> 5, pop() -> 3, pop() -> 2, pop() -> 1\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** pushed = [1,2,3,4,5], popped = [4,3,5,1,2]\r\n    **Output:** false\r\n    **Explanation:** 1 cannot be popped before 2.\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= pushed.length == popped.length <= 1000`\n  2. `0 <= pushed[i], popped[i] < 1000`\n  3. `pushed` is a permutation of `popped`.\n  4. `pushed` and `popped` have distinct values.",
        "level": 2,
        "paid_only": false,
        "question_id": 983,
        "slug": "validate-stack-sequences",
        "tags": [
            "Stack"
        ],
        "title": "Validate Stack Sequences",
        "url": "https://leetcode.com/problems/validate-stack-sequences/description/"
    },
    "984": {
        "description": "On a 2D plane, we place stones at some integer coordinate points.  Each\ncoordinate point may have at most one stone.\n\nNow, a _move_ consists of removing a stone  that shares a column or row with\nanother stone on the grid.\n\nWhat is the largest possible number of moves we can make?\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** stones = [[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]\r\n    **Output:** 5\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** stones = [[0,0],[0,2],[1,1],[2,0],[2,2]]\r\n    **Output:** 3\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** stones = [[0,0]]\r\n    **Output:** 0\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= stones.length <= 1000`\n  2. `0 <= stones[i][j] < 10000`",
        "level": 2,
        "paid_only": false,
        "question_id": 984,
        "slug": "most-stones-removed-with-same-row-or-column",
        "tags": [
            "Depth-first Search",
            "Union Find"
        ],
        "title": "Most Stones Removed with Same Row or Column",
        "url": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/description/"
    },
    "985": {
        "description": "You have an initial power `P`, an initial score of `0` points, and a bag of\ntokens.\n\nEach token can be used at most once, has a value `token[i]`, and has\npotentially two ways to use it.\n\n  * If we have at least `token[i]` power, we may play the token face up, losing `token[i]` power, and gaining `1` point.\n  * If we have at least `1` point, we may play the token face down, gaining `token[i]` power, and losing `1` point.\n\nReturn the largest number of points we can have after playing any number of\ntokens.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** tokens = [100], P = 50\r\n    **Output:** 0\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** tokens = [100,200], P = 150\r\n    **Output:** 1\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** tokens = [100,200,300,400], P = 200\r\n    **Output:** 2\r\n    \n\n\n\n**Note:**\n\n  1. `tokens.length <= 1000`\n  2. `0 <= tokens[i] < 10000`\n  3. `0 <= P < 10000`",
        "level": 2,
        "paid_only": false,
        "question_id": 985,
        "slug": "bag-of-tokens",
        "tags": [
            "Greedy"
        ],
        "title": "Bag of Tokens",
        "url": "https://leetcode.com/problems/bag-of-tokens/description/"
    },
    "986": {
        "description": "Given an array of 4 digits, return the largest 24 hour time that can be made.\n\nThe smallest 24 hour time is 00:00, and the largest is 23:59.  Starting from\n00:00, a time is larger if more time has elapsed since midnight.\n\nReturn the answer as a string of length 5.  If no valid time can be made,\nreturn an empty string.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,2,3,4]\r\n    **Output:** \"23:41\"\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [5,5,5,5]\r\n    **Output:** \"\"\r\n    \n\n\n\n**Note:**\n\n  1. `A.length == 4`\n  2. `0 <= A[i] <= 9`",
        "level": 1,
        "paid_only": false,
        "question_id": 986,
        "slug": "largest-time-for-given-digits",
        "tags": [
            "Math"
        ],
        "title": "Largest Time for Given Digits",
        "url": "https://leetcode.com/problems/largest-time-for-given-digits/description/"
    },
    "987": {
        "description": "In a deck of cards, every card has a unique integer.  You can order the deck\nin any order you want.\n\nInitially, all the cards start face down (unrevealed) in one deck.\n\nNow, you do the following steps repeatedly, until all cards are revealed:\n\n  1. Take the top card of the deck, reveal it, and take it out of the deck.\n  2. If there are still cards in the deck, put the next top card of the deck at the bottom of the deck.\n  3. If there are still unrevealed cards, go back to step 1.  Otherwise, stop.\n\nReturn an ordering of the deck that would reveal the cards in **increasing\norder.**\n\nThe first entry in the answer is considered to be the top of the deck.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [17,13,11,2,3,5,7]\r\n    **Output:** [2,13,3,11,5,17,7]\r\n    **Explanation:**\r\n    We get the deck in the order [17,13,11,2,3,5,7] (this order doesn't matter), and reorder it.\r\n    After reordering, the deck starts as [2,13,3,11,5,17,7], where 2 is the top of the deck.\r\n    We reveal 2, and move 13 to the bottom.  The deck is now [3,11,5,17,7,13].\r\n    We reveal 3, and move 11 to the bottom.  The deck is now [5,17,7,13,11].\r\n    We reveal 5, and move 17 to the bottom.  The deck is now [7,13,11,17].\r\n    We reveal 7, and move 13 to the bottom.  The deck is now [11,17,13].\r\n    We reveal 11, and move 17 to the bottom.  The deck is now [13,17].\r\n    We reveal 13, and move 17 to the bottom.  The deck is now [17].\r\n    We reveal 17.\r\n    Since all the cards revealed are in increasing order, the answer is correct.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 1000`\n  2. `1 <= A[i] <= 10^6`\n  3. `A[i] != A[j]` for all `i != j`",
        "level": 2,
        "paid_only": false,
        "question_id": 987,
        "slug": "reveal-cards-in-increasing-order",
        "tags": [
            "Array"
        ],
        "title": "Reveal Cards In Increasing Order",
        "url": "https://leetcode.com/problems/reveal-cards-in-increasing-order/description/"
    },
    "988": {
        "description": "For a binary tree T, we can define a flip operation as follows: choose any\nnode, and swap the left and right child subtrees.\n\nA binary tree X is _flip equivalent_ to a binary tree Y if and only if we can\nmake X equal to Y after some number of flip operations.\n\nWrite a function that determines whether two binary trees are _flip\nequivalent_.   The trees are given by root nodes `root1` and `root2`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]\r\n    **Output:** true\r\n    **Explanation:** We flipped at nodes with values 1, 3, and 5.\r\n    ![Flipped Trees Diagram](https://assets.leetcode.com/uploads/2018/11/29/tree_ex.png)\r\n    \n\n\n\n**Note:**\n\n  1. Each tree will have at most `100` nodes.\n  2. Each value in each tree will be a unique integer in the range `[0, 99]`.",
        "level": 2,
        "paid_only": false,
        "question_id": 988,
        "slug": "flip-equivalent-binary-trees",
        "tags": [
            "Tree"
        ],
        "title": "Flip Equivalent Binary Trees",
        "url": "https://leetcode.com/problems/flip-equivalent-binary-trees/description/"
    },
    "989": {
        "description": "Given a non-empty array of unique positive integers `A`, consider the\nfollowing graph:\n\n  * There are `A.length` nodes, labelled `A[0]` to `A[A.length - 1];`\n  * There is an edge between `A[i]` and `A[j]` if and only if `A[i]` and `A[j]` share a common factor greater than 1.\n\nReturn the size of the largest connected component in the graph.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [4,6,15,35]\r\n    **Output:** 4\r\n    ![](https://assets.leetcode.com/uploads/2018/12/01/ex1.png)\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [20,50,9,63]\r\n    **Output:** 2\r\n    ![](https://assets.leetcode.com/uploads/2018/12/01/ex2.png)\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [2,3,6,7,4,12,21,39]\r\n    **Output:** 8\r\n    ![](https://assets.leetcode.com/uploads/2018/12/01/ex3.png)\r\n    \n\n**Note:**\n\n  1. `1 <= A.length <= 20000`\n  2. `1 <= A[i] <= 100000`",
        "level": 3,
        "paid_only": false,
        "question_id": 989,
        "slug": "largest-component-size-by-common-factor",
        "tags": [
            "Math",
            "Union Find"
        ],
        "title": "Largest Component Size by Common Factor",
        "url": "https://leetcode.com/problems/largest-component-size-by-common-factor/description/"
    },
    "990": {
        "description": "In an alien language, surprisingly they also use english lowercase letters,\nbut possibly in a different `order`. The `order` of the alphabet is some\npermutation of lowercase letters.\n\nGiven a sequence of `words` written in the alien language, and the `order` of\nthe alphabet, return `true` if and only if the given `words` are sorted\nlexicographicaly in this alien language.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** words = [\"hello\",\"leetcode\"], order = \"hlabcdefgijkmnopqrstuvwxyz\"\r\n    **Output:** true\r\n    **Explanation:** As 'h' comes before 'l' in this language, then the sequence is sorted.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** words = [\"word\",\"world\",\"row\"], order = \"worldabcefghijkmnpqstuvxyz\"\r\n    **Output:** false\r\n    **Explanation:** As 'd' comes after 'l' in this language, then words[0] > words[1], hence the sequence is unsorted.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** words = [\"apple\",\"app\"], order = \"abcdefghijklmnopqrstuvwxyz\"\r\n    **Output:** false\r\n    **Explanation:** The first three characters \"app\" match, and the second string is shorter (in size.) According to lexicographical rules \"apple\" > \"app\", because 'l' > '∅', where '∅' is defined as the blank character which is less than any other character ([More info](https://en.wikipedia.org/wiki/Lexicographical_order)).\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= words.length <= 100`\n  2. `1 <= words[i].length <= 20`\n  3. `order.length == 26`\n  4. All characters in `words[i]` and `order` are english lowercase letters.",
        "level": 1,
        "paid_only": false,
        "question_id": 990,
        "slug": "verifying-an-alien-dictionary",
        "tags": [
            "Hash Table"
        ],
        "title": "Verifying an Alien Dictionary",
        "url": "https://leetcode.com/problems/verifying-an-alien-dictionary/description/"
    },
    "991": {
        "description": "Given an array of integers `A` with even length, return `true` if and only if\nit is possible to reorder it such that `A[2 * i + 1] = 2 * A[2 * i]` for every\n`0 <= i < len(A) / 2`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [3,1,3,6]\r\n    **Output:** false\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [2,1,2,6]\r\n    **Output:** false\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [4,-2,2,-4]\r\n    **Output:** true\r\n    **Explanation:** We can take two groups, [-2,-4] and [2,4] to form [-2,-4,2,4] or [2,4,-2,-4].\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [1,2,4,16,8,4]\r\n    **Output:** false\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= A.length <= 30000`\n  2. `A.length` is even\n  3. `-100000 <= A[i] <= 100000`",
        "level": 2,
        "paid_only": false,
        "question_id": 991,
        "slug": "array-of-doubled-pairs",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "title": "Array of Doubled Pairs",
        "url": "https://leetcode.com/problems/array-of-doubled-pairs/description/"
    },
    "992": {
        "description": "We are given an array `A` of `N` lowercase letter strings, all of the same\nlength.\n\nNow, we may choose any set of deletion indices, and for each string, we delete\nall the characters in those indices.\n\nFor example, if we have an array `A = [\"abcdef\",\"uvwxyz\"]` and deletion\nindices `{0, 2, 3}`, then the final array after deletions is `[\"bef\",\"vyz\"]`.\n\nSuppose we chose a set of deletion indices `D` such that after deletions, the\nfinal array has its elements in **lexicographic** order (`A[0] <= A[1] <= A[2]\n... <= A[A.length - 1]`).\n\nReturn the minimum possible value of `D.length`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"ca\",\"bb\",\"ac\"]\r\n    **Output:** 1\r\n    **Explanation:**\r\n    After deleting the first column, A = [ \"a\", \"b\", \"c\"].\r\n    Now A is in lexicographic order (ie. A[0] <= A[1] <= A[2]).\r\n    We require at least 1 deletion since initially A was not in lexicographic order, so the answer is 1.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"xc\",\"yb\",\"za\"]\r\n    **Output:** 0\r\n    **Explanation:**\r\n    A is already in lexicographic order, so we don 't need to delete anything.\r\n    Note that the rows of A are not necessarily in lexicographic order:\r\n    ie. it is NOT necessarily true that (A[0][0] <= A[0][1] <= ...)\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [\"zyx\",\"wvu\",\"tsr\"]\r\n    **Output:** 3\r\n    **Explanation:**\r\n    We have to delete every column.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 100`\n  2. `1 <= A[i].length <= 100`",
        "level": 2,
        "paid_only": false,
        "question_id": 992,
        "slug": "delete-columns-to-make-sorted-ii",
        "tags": [
            "Greedy"
        ],
        "title": "Delete Columns to Make Sorted II",
        "url": "https://leetcode.com/problems/delete-columns-to-make-sorted-ii/description/"
    },
    "993": {
        "description": "You are installing a billboard and want it to have the largest height.  The\nbillboard will have two steel supports, one on each side.  Each steel support\nmust be an equal height.\n\nYou have a collection of `rods` which can be welded together.  For example, if\nyou have rods of lengths 1, 2, and 3, you can weld them together to make a\nsupport of length 6.\n\nReturn the largest possible height of your billboard installation.  If you\ncannot support the billboard, return 0.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,2,3,6]\r\n    **Output:** 6\r\n    **Explanation:** We have two disjoint subsets {1,2,3} and {6}, which have the same sum = 6.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,2,3,4,5,6]\r\n    **Output:** 10\r\n    **Explanation:** We have two disjoint subsets {2,3,5} and {4,6}, which have the same sum = 10.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [1,2]\r\n    **Output:** 0\r\n    **Explanation:** The billboard cannot be supported, so we return 0.\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= rods.length <= 20`\n  2. `1 <= rods[i] <= 1000`\n  3. `The sum of rods is at most 5000.`",
        "level": 3,
        "paid_only": false,
        "question_id": 993,
        "slug": "tallest-billboard",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Tallest Billboard",
        "url": "https://leetcode.com/problems/tallest-billboard/description/"
    },
    "994": {
        "description": "There are 8 prison cells in a row, and each cell is either occupied or vacant.\n\nEach day, whether the cell is occupied or vacant changes according to the\nfollowing rules:\n\n  * If a cell has two adjacent neighbors that are both occupied or both vacant, then the cell becomes occupied.\n  * Otherwise, it becomes vacant.\n\n(Note that because the prison is a row, the first and the last cells in the\nrow can't have two adjacent neighbors.)\n\nWe describe the current state of the prison in the following way: `cells[i] ==\n1` if the `i`-th cell is occupied, else `cells[i] == 0`.\n\nGiven the initial state of the prison, return the state of the prison after\n`N` days (and `N` such changes described above.)\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** cells = [0,1,0,1,1,0,0,1], N = 7\r\n    **Output:** [0,0,1,1,0,0,0,0]\r\n    **Explanation:** The following table summarizes the state of the prison on each day:\r\n    Day 0: [0, 1, 0, 1, 1, 0, 0, 1]\r\n    Day 1: [0, 1, 1, 0, 0, 0, 0, 0]\r\n    Day 2: [0, 0, 0, 0, 1, 1, 1, 0]\r\n    Day 3: [0, 1, 1, 0, 0, 1, 0, 0]\r\n    Day 4: [0, 0, 0, 0, 0, 1, 0, 0]\r\n    Day 5: [0, 1, 1, 1, 0, 1, 0, 0]\r\n    Day 6: [0, 0, 1, 0, 1, 1, 0, 0]\r\n    Day 7: [0, 0, 1, 1, 0, 0, 0, 0]\r\n    \r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** cells = [1,0,0,1,0,0,1,0], N = 1000000000\r\n    **Output:** [0,0,1,1,1,1,1,0]\r\n    \n\n\n\n**Note:**\n\n  1. `cells.length == 8`\n  2. `cells[i]` is in `{0, 1}`\n  3. `1 <= N <= 10^9`",
        "level": 2,
        "paid_only": false,
        "question_id": 994,
        "slug": "prison-cells-after-n-days",
        "tags": [
            "Hash Table"
        ],
        "title": "Prison Cells After N Days",
        "url": "https://leetcode.com/problems/prison-cells-after-n-days/description/"
    },
    "998": {
        "description": "Given a binary tree, determine if it is a _complete binary tree_.\n\n_**Definition of a complete binary tree\nfrom[Wikipedia](http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees):**_  \nIn a complete binary tree every level, except possibly the last, is completely\nfilled, and all nodes in the last level are as far left as possible. It can\nhave between 1 and 2 h nodes inclusive at the last level h.\n\n\n\n**Example 1:**\n\n**![](https://assets.leetcode.com/uploads/2018/12/15/complete-binary-\ntree-1.png)**\n\n    \n    \r\n    **Input:** [1,2,3,4,5,6]\r\n    **Output:** true\r\n    **Explanation:** Every level before the last is full (ie. levels with node-values {1} and {2, 3}), and all nodes in the last level ({4, 5, 6}) are as far left as possible.\r\n    \n\n**Example 2:**\n\n**![](https://assets.leetcode.com/uploads/2018/12/15/complete-binary-\ntree-2.png)**\n\n    \n    \r\n    **Input:** [1,2,3,4,5,null,7]\r\n    **Output:** false\r\n    **Explanation:** The node with value 7 isn't as far left as possible.\r\n    \n\n\n\n**Note:**\n\n  1. The tree will have between 1 and 100 nodes.",
        "level": 2,
        "paid_only": false,
        "question_id": 998,
        "slug": "check-completeness-of-a-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Check Completeness of a Binary Tree",
        "url": "https://leetcode.com/problems/check-completeness-of-a-binary-tree/description/"
    },
    "999": {
        "description": "In a N x N `grid` composed of 1 x 1 squares, each 1 x 1 square consists of a\n`/`, `\\`, or blank space.  These characters divide the square into contiguous\nregions.\n\n(Note that backslash characters are escaped, so a `\\` is represented as\n`\"\\\\\"`.)\n\nReturn the number of regions.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\r\n      \" /\",\r\n      \"/ \"\r\n    ]\r\n    **Output:** 2\r\n    **Explanation:** The 2x2 grid is as follows:\r\n    ![](https://assets.leetcode.com/uploads/2018/12/15/1.png)\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\r\n      \" /\",\r\n      \"  \"\r\n    ]\r\n    **Output:** 1\r\n    **Explanation:** The 2x2 grid is as follows:\r\n    ![](https://assets.leetcode.com/uploads/2018/12/15/2.png)\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [\r\n      \"\\\\/\",\r\n      \"/\\\\\"\r\n    ]\r\n    **Output:** 4\r\n    **Explanation:** (Recall that because \\ characters are escaped, \"\\\\/\" refers to \\/, and \"/\\\\\" refers to /\\.)\r\n    The 2x2 grid is as follows:\r\n    ![](https://assets.leetcode.com/uploads/2018/12/15/3.png)\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [\r\n      \"/\\\\\",\r\n      \"\\\\/\"\r\n    ]\r\n    **Output:** 5\r\n    **Explanation:** (Recall that because \\ characters are escaped, \"/\\\\\" refers to /\\, and \"\\\\/\" refers to \\/.)\r\n    The 2x2 grid is as follows:\r\n    ![](https://assets.leetcode.com/uploads/2018/12/15/4.png)\r\n    \n\n**Example 5:**\n\n    \n    \r\n    **Input:** [\r\n      \"//\",\r\n      \"/ \"\r\n    ]\r\n    **Output:** 3\r\n    **Explanation:** The 2x2 grid is as follows:\r\n    ![](https://assets.leetcode.com/uploads/2018/12/15/5.png)\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= grid.length == grid[0].length <= 30`\n  2. `grid[i][j]` is either `'/'`, `'\\'`, or `' '`.",
        "level": 2,
        "paid_only": false,
        "question_id": 999,
        "slug": "regions-cut-by-slashes",
        "tags": [
            "Depth-first Search",
            "Union Find",
            "Graph"
        ],
        "title": "Regions Cut By Slashes",
        "url": "https://leetcode.com/problems/regions-cut-by-slashes/description/"
    },
    "1000": {
        "description": "We are given an array `A` of `N` lowercase letter strings, all of the same\nlength.\n\nNow, we may choose any set of deletion indices, and for each string, we delete\nall the characters in those indices.\n\nFor example, if we have an array `A = [\"babca\",\"bbazb\"]` and deletion indices\n`{0, 1, 4}`, then the final array after deletions is `[\"bc\",\"az\"]`.\n\nSuppose we chose a set of deletion indices `D` such that after deletions, the\nfinal array has **every element (row) in  lexicographic** order.\n\nFor clarity, `A[0]` is in lexicographic order (ie. `A[0][0] <= A[0][1] <= ...\n<= A[0][A[0].length - 1]`), `A[1]` is in lexicographic order (ie. `A[1][0] <=\nA[1][1] <= ... <= A[1][A[1].length - 1]`), and so on.\n\nReturn the minimum possible value of `D.length`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"babca\",\"bbazb\"]\r\n    **Output:** 3\r\n    **Explanation:** After deleting columns 0, 1, and 4, the final array is A = [\"bc\", \"az\"].\r\n    Both these rows are individually in lexicographic order (ie. A[0][0] <= A[0][1] and A[1][0] <= A[1][1]).\r\n    Note that A[0] > A[1] - the array A isn't necessarily in lexicographic order.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"edcba\"]\r\n    **Output:** 4\r\n    **Explanation:** If we delete less than 4 columns, the only row won't be lexicographically sorted.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [\"ghi\",\"def\",\"abc\"]\r\n    **Output:** 0\r\n    **Explanation:** All rows are already lexicographically sorted.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 100`\n  2. `1 <= A[i].length <= 100`",
        "level": 3,
        "paid_only": false,
        "question_id": 1000,
        "slug": "delete-columns-to-make-sorted-iii",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Delete Columns to Make Sorted III",
        "url": "https://leetcode.com/problems/delete-columns-to-make-sorted-iii/description/"
    },
    "1001": {
        "description": "In a array `A` of size `2N`, there are `N+1` unique elements, and exactly one\nof these elements is repeated N times.\n\nReturn the element repeated `N` times.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,2,3,3]\r\n    **Output:** 3\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [2,1,2,5,3,2]\r\n    **Output:** 2\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [5,1,5,2,5,3,5,4]\r\n    **Output:** 5\r\n    \n\n\n\n**Note:**\n\n  1. `4 <= A.length <= 10000`\n  2. `0 <= A[i] < 10000`\n  3. `A.length` is even",
        "level": 1,
        "paid_only": false,
        "question_id": 1001,
        "slug": "n-repeated-element-in-size-2n-array",
        "tags": [
            "Hash Table"
        ],
        "title": "N-Repeated Element in Size 2N Array",
        "url": "https://leetcode.com/problems/n-repeated-element-in-size-2n-array/description/"
    },
    "1002": {
        "description": "Given an array `A` of integers, a _ramp_  is a tuple `(i, j)` for which `i <\nj` and `A[i] <= A[j]`.  The width of such a ramp is `j - i`.\n\nFind the maximum width of a ramp in `A`.  If one doesn't exist, return 0.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [6,0,8,2,1,5]\r\n    **Output:** 4\r\n    **Explanation:**\r\n    The maximum width ramp is achieved at (i, j) = (1, 5): A[1] = 0 and A[5] = 5.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [9,8,1,0,1,9,4,0,4,1]\r\n    **Output:** 7\r\n    **Explanation:**\r\n    The maximum width ramp is achieved at (i, j) = (2, 9): A[2] = 1 and A[9] = 1.\r\n    \n\n\n\n**Note:**\n\n  1. `2 <= A.length <= 50000`\n  2. `0 <= A[i] <= 50000`",
        "level": 2,
        "paid_only": false,
        "question_id": 1002,
        "slug": "maximum-width-ramp",
        "tags": [
            "Array"
        ],
        "title": "Maximum Width Ramp",
        "url": "https://leetcode.com/problems/maximum-width-ramp/description/"
    },
    "1003": {
        "description": "Given a set of points in the xy-plane, determine the minimum area of **any**\nrectangle formed from these points, with sides **not necessarily parallel** to\nthe x and y axes.\n\nIf there isn't any rectangle, return 0.\n\n\n\n**Example 1:**\n\n![](https://assets.leetcode.com/uploads/2018/12/21/1a.png)\n\n    \n    \r\n    **Input:** [[1,2],[2,1],[1,0],[0,1]]\r\n    **Output:** 2.00000\r\n    **Explanation:**  The minimum area rectangle occurs at [1,2],[2,1],[1,0],[0,1], with an area of 2.\r\n    \n\n**Example 2:**\n\n![](https://assets.leetcode.com/uploads/2018/12/22/2.png)\n\n    \n    \r\n    **Input:** [[0,1],[2,1],[1,1],[1,0],[2,0]]\r\n    **Output:** 1.00000\r\n    **Explanation:** The minimum area rectangle occurs at [1,0],[1,1],[2,1],[2,0], with an area of 1.\r\n    \n\n**Example 3:**\n\n![](https://assets.leetcode.com/uploads/2018/12/22/3.png)\n\n    \n    \r\n    **Input:** [[0,3],[1,2],[3,1],[1,3],[2,1]]\r\n    **Output:** 0\r\n    **Explanation:** There is no possible rectangle to form from these points.\r\n    \n\n**Example 4:**\n\n![](https://assets.leetcode.com/uploads/2018/12/21/4c.png)\n\n    \n    \r\n    **Input:** [[3,1],[1,1],[0,1],[2,1],[3,3],[3,2],[0,2],[2,3]]\r\n    **Output:** 2.00000\r\n    **Explanation:** The minimum area rectangle occurs at [2,1],[2,3],[3,3],[3,1], with an area of 2.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= points.length <= 50`\n  2. `0 <= points[i][0] <= 40000`\n  3. `0 <= points[i][1] <= 40000`\n  4. All points are distinct.\n  5. Answers within `10^-5` of the actual value will be accepted as correct.",
        "level": 2,
        "paid_only": false,
        "question_id": 1003,
        "slug": "minimum-area-rectangle-ii",
        "tags": [
            "Math",
            "Geometry"
        ],
        "title": "Minimum Area Rectangle II",
        "url": "https://leetcode.com/problems/minimum-area-rectangle-ii/description/"
    },
    "1004": {
        "description": "Given a single positive integer `x`, we will write an expression of the form\n`x (op1) x (op2) x (op3) x ...` where each operator `op1`, `op2`, etc. is\neither addition, subtraction, multiplication, or division (`+`, `-`, `*`, or\n`/)`.  For example, with `x = 3`, we might write `3 * 3 / 3 + 3 - 3` which is\na value of 3.\n\nWhen writing such an expression, we adhere to the following conventions:\n\n  1. The division operator (`/`) returns rational numbers.\n  2. There are no parentheses placed anywhere.\n  3. We use the usual order of operations: multiplication and division happens before addition and subtraction.\n  4. It's not allowed to use the unary negation operator (`-`).  For example, \"`x - x`\" is a valid expression as it only uses subtraction, but \"`-x + x`\" is not because it uses negation.\n\nWe would like to write an expression with the least number of operators such\nthat the expression equals the given `target`.  Return the least number of\noperators used.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** x = 3, target = 19\r\n    **Output:** 5\r\n    **Explanation:** 3 * 3 + 3 * 3 + 3 / 3.  The expression contains 5 operations.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** x = 5, target = 501\r\n    **Output:** 8\r\n    **Explanation:** 5 * 5 * 5 * 5 - 5 * 5 * 5 + 5 / 5.  The expression contains 8 operations.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** x = 100, target = 100000000\r\n    **Output:** 3\r\n    **Explanation:** 100 * 100 * 100 * 100.  The expression contains 3 operations.\n\n\n\n**Note:**\n\n  * `2 <= x <= 100`\n  * `1 <= target <= 2 * 10^8`",
        "level": 3,
        "paid_only": false,
        "question_id": 1004,
        "slug": "least-operators-to-express-number",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Least Operators to Express Number",
        "url": "https://leetcode.com/problems/least-operators-to-express-number/description/"
    },
    "1005": {
        "description": "A binary tree is _univalued_ if every node in the tree has the same value.\n\nReturn `true` if and only if the given tree is univalued.\n\n\n\n**Example 1:**\n\n![](https://assets.leetcode.com/uploads/2018/12/28/unival_bst_1.png)\n\n    \n    \r\n    **Input:** [1,1,1,1,1,null,1]\r\n    **Output:** true\r\n    \n\n**Example 2:**\n\n![](https://assets.leetcode.com/uploads/2018/12/28/unival_bst_2.png)\n\n    \n    \r\n    **Input:** [2,2,2,5,2]\r\n    **Output:** false\r\n    \n\n\n\n**Note:**\n\n  1. The number of nodes in the given tree will be in the range `[1, 100]`.\n  2. Each node's value will be an integer in the range `[0, 99]`.",
        "level": 1,
        "paid_only": false,
        "question_id": 1005,
        "slug": "univalued-binary-tree",
        "tags": [
            "Tree"
        ],
        "title": "Univalued Binary Tree",
        "url": "https://leetcode.com/problems/univalued-binary-tree/description/"
    },
    "1006": {
        "description": "Given a `wordlist`, we want to implement a spellchecker that converts a query\nword into a correct word.\n\nFor a given `query` word, the spell checker handles two categories of spelling\nmistakes:\n\n  * Capitalization: If the query matches a word in the wordlist ( **case-insensitive** ), then the query word is returned with the same case as the case in the wordlist. \n    * Example: `wordlist = [\"yellow\"]`, `query = \"YellOw\"`: `correct = \"yellow\"`\n    * Example: `wordlist = [\"Yellow\"]`, `query = \"yellow\"`: `correct = \"Yellow\"`\n    * Example: `wordlist = [\"yellow\"]`, `query = \"yellow\"`: `correct = \"yellow\"`\n  * Vowel Errors: If after replacing the vowels ('a', 'e', 'i', 'o', 'u') of the query word with any vowel individually, it matches a word in the wordlist ( **case-insensitive** ), then the query word is returned with the same case as the match in the wordlist. \n    * Example: `wordlist = [\"YellOw\"]`, `query = \"yollow\"`: `correct = \"YellOw\"`\n    * Example: `wordlist = [\"YellOw\"]`, `query = \"yeellow\"`: `correct = \"\"` (no match)\n    * Example: `wordlist = [\"YellOw\"]`, `query = \"yllw\"`: `correct = \"\"` (no match)\n\nIn addition, the spell checker operates under the following precedence rules:\n\n  * When the query exactly matches a word in the wordlist ( **case-sensitive** ), you should return the same word back.\n  * When the query matches a word up to capitlization, you should return the first such match in the wordlist.\n  * When the query matches a word up to vowel errors, you should return the first such match in the wordlist.\n  * If the query has no matches in the wordlist, you should return the empty string.\n\nGiven some `queries`, return a list of words `answer`, where `answer[i]` is\nthe correct word for `query = queries[i]`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** wordlist = [\"KiTe\",\"kite\",\"hare\",\"Hare\"], queries = [\"kite\",\"Kite\",\"KiTe\",\"Hare\",\"HARE\",\"Hear\",\"hear\",\"keti\",\"keet\",\"keto\"]\r\n    **Output:** [\"kite\",\"KiTe\",\"KiTe\",\"Hare\",\"hare\",\"\",\"\",\"KiTe\",\"\",\"KiTe\"]\n\n\n\n**Note:**\n\n  * `1 <= wordlist.length <= 5000`\n  * `1 <= queries.length <= 5000`\n  * `1 <= wordlist[i].length <= 7`\n  * `1 <= queries[i].length <= 7`\n  * All strings in `wordlist` and `queries` consist only of **english**  letters.",
        "level": 2,
        "paid_only": false,
        "question_id": 1006,
        "slug": "vowel-spellchecker",
        "tags": [
            "Hash Table",
            "String"
        ],
        "title": "Vowel Spellchecker",
        "url": "https://leetcode.com/problems/vowel-spellchecker/description/"
    },
    "1007": {
        "description": "Return all **non-negative** integers of length `N` such that the absolute\ndifference between every two consecutive digits is `K`.\n\nNote that **every** number in the answer **must not** have leading zeros\n**except** for the number `0` itself. For example, `01` has one leading zero\nand is invalid, but `0` is valid.\n\nYou may return the answer in any order.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** N = 3, K = 7\r\n    **Output:** [181,292,707,818,929]\r\n    **Explanation:** Note that 070 is not a valid number, because it has leading zeroes.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** N = 2, K = 1\r\n    **Output:** [10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]\n\n\n\n**Note:**\n\n  1. `1 <= N <= 9`\n  2. `0 <= K <= 9`",
        "level": 2,
        "paid_only": false,
        "question_id": 1007,
        "slug": "numbers-with-same-consecutive-differences",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Numbers With Same Consecutive Differences",
        "url": "https://leetcode.com/problems/numbers-with-same-consecutive-differences/description/"
    },
    "1008": {
        "description": "Given a binary tree, we install cameras on the nodes of the tree.\n\nEach camera at a node can monitor **its parent, itself, and its immediate\nchildren**.\n\nCalculate the minimum number of cameras needed to monitor all nodes of the\ntree.\n\n\n\n**Example 1:**\n\n![](https://assets.leetcode.com/uploads/2018/12/29/bst_cameras_01.png)\n\n    \n    \r\n    **Input:** [0,0,null,0,0]\r\n    **Output:** 1\r\n    **Explanation:** One camera is enough to monitor all nodes if placed as shown.\r\n    \n\n**Example 2:**\n\n![](https://assets.leetcode.com/uploads/2018/12/29/bst_cameras_02.png)\n\n    \n    \r\n    **Input:** [0,0,null,0,null,0,null,null,0]\r\n    **Output:** 2\r\n    **Explanation:** At least two cameras are needed to monitor all nodes of the tree. The above image shows one of the valid configurations of camera placement.\r\n    \n\n  \n**Note:**\n\n  1. The number of nodes in the given tree will be in the range `[1, 1000]`.\n  2. **Every** node has value 0.",
        "level": 3,
        "paid_only": false,
        "question_id": 1008,
        "slug": "binary-tree-cameras",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-first Search"
        ],
        "title": "Binary Tree Cameras",
        "url": "https://leetcode.com/problems/binary-tree-cameras/description/"
    },
    "1009": {
        "description": "Given an array `A`, we can perform a  _pancake flip_ : We choose some positive\ninteger ` **k** <= A.length`, then reverse the order of the first **k**\nelements of `A`.  We want to perform zero or more pancake flips (doing them\none after another in succession) to sort the array `A`.\n\nReturn the k-values corresponding to a sequence of pancake flips that sort\n`A`.  Any valid answer that sorts the array within `10 * A.length` flips will\nbe judged as correct.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [3,2,4,1]\r\n    **Output:** [4,2,4,3]\r\n    **Explanation:**\r\n    We perform 4 pancake flips, with k values 4, 2, 4, and 3.\r\n    Starting state: A = [3, 2, 4, 1]\r\n    After 1st flip (k=4): A = [1, 4, 2, 3]\r\n    After 2nd flip (k=2): A = [4, 1, 2, 3]\r\n    After 3rd flip (k=4): A = [3, 2, 1, 4]\r\n    After 4th flip (k=3): A = [1, 2, 3, 4], which is sorted. \r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,2,3]\r\n    **Output:** []\r\n    **Explanation:** The input is already sorted, so there is no need to flip anything.\r\n    Note that other answers, such as [3, 3], would also be accepted.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 100`\n  2. `A[i]` is a permutation of `[1, 2, ..., A.length]`",
        "level": 2,
        "paid_only": false,
        "question_id": 1009,
        "slug": "pancake-sorting",
        "tags": [
            "Array",
            "Sort"
        ],
        "title": "Pancake Sorting",
        "url": "https://leetcode.com/problems/pancake-sorting/description/"
    },
    "1010": {
        "description": "Given two non-negative integers `x` and `y`, an integer is _powerful_  if it\nis equal to `x^i + y^j` for some integers `i >= 0` and `j >= 0`.\n\nReturn a list of all _powerful_ integers that have value less than or equal to\n`bound`.\n\nYou may return the answer in any order.  In your answer, each value should\noccur at most once.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** x = 2, y = 3, bound = 10\r\n    **Output:** [2,3,4,5,7,9,10]\r\n    **Explanation:**\r\n    2 = 2^0 + 3^0\r\n    3 = 2^1 + 3^0\r\n    4 = 2^0 + 3^1\r\n    5 = 2^1 + 3^1\r\n    7 = 2^2 + 3^1\r\n    9 = 2^3 + 3^0\r\n    10 = 2^0 + 3^2\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** x = 3, y = 5, bound = 15\r\n    **Output:** [2,4,6,8,10,14]\r\n    \n\n\n\n**Note:**\n\n  * `1 <= x <= 100`\n  * `1 <= y <= 100`\n  * `0 <= bound <= 10^6`",
        "level": 1,
        "paid_only": false,
        "question_id": 1010,
        "slug": "powerful-integers",
        "tags": [
            "Math"
        ],
        "title": "Powerful Integers",
        "url": "https://leetcode.com/problems/powerful-integers/description/"
    },
    "1011": {
        "description": "Given a binary tree with `N` nodes, each node has a different value from `{1,\n..., N}`.\n\nA node in this binary tree can be _flipped_  by swapping the left child and\nthe right child of that node.\n\nConsider the sequence of `N` values reported by a preorder traversal starting\nfrom the root.  Call such a sequence of `N` values the  _voyage_  of the tree.\n\n(Recall that a _preorder traversal_  of a node means we report the current\nnode's value, then preorder-traverse the left child, then preorder-traverse\nthe right child.)\n\nOur goal is to flip the **least number** of nodes in the tree so that the\nvoyage of the tree matches the `voyage` we are given.\n\nIf we can do so, then return a list of the values of all nodes flipped.  You\nmay return the answer in any order.\n\nIf we cannot do so, then return the list `[-1]`.\n\n\n\n**Example 1:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/02/1219-01.png)**\n\n    \n    \r\n    **Input:** root = [1,2], voyage = [2,1]\r\n    **Output:** [-1]\r\n    \n\n**Example 2:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/02/1219-02.png)**\n\n    \n    \r\n    **Input:** root = [1,2,3], voyage = [1,3,2]\r\n    **Output:** [1]\r\n    \n\n**Example 3:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/02/1219-02.png)**\n\n    \n    \r\n    **Input:** root = [1,2,3], voyage = [1,2,3]\r\n    **Output:** []\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= N <= 100`",
        "level": 2,
        "paid_only": false,
        "question_id": 1011,
        "slug": "flip-binary-tree-to-match-preorder-traversal",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Flip Binary Tree To Match Preorder Traversal",
        "url": "https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal/description/"
    },
    "1012": {
        "description": "Given two strings `S` and `T`, each of which represents a non-negative\nrational number, return **True** if and only if they represent the same\nnumber. The strings may use parentheses to denote the repeating part of the\nrational number.\n\nIn general a rational number can be represented using up to three parts: an\n_integer part_ , a  _non-repeating part,_ and a   _repeating part_. The number\nwill be represented  in one of the following three ways:\n\n  * `<IntegerPart>` (e.g. 0, 12, 123)\n  * `<IntegerPart><.><NonRepeatingPart>`  (e.g. 0.5, 1., 2.12, 2.0001)\n  * `<IntegerPart><.><NonRepeatingPart><(><RepeatingPart><)>` (e.g. 0.1(6), 0.9(9), 0.00(1212))\n\nThe repeating portion of a decimal expansion is conventionally denoted within\na pair of round brackets.  For example:\n\n1 / 6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66)\n\nBoth 0.1(6) or 0.1666(6) or 0.166(66) are correct representations of 1 / 6.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** S = \"0.(52)\", T = \"0.5(25)\"\r\n    **Output:** true\r\n    **Explanation:** Because \"0.(52)\" represents 0.52525252..., and \"0.5(25)\" represents 0.52525252525..... , the strings represent the same number.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** S = \"0.1666(6)\", T = \"0.166(66)\"\r\n    **Output:** true\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** S = \"0.9(9)\", T = \"1.\"\r\n    **Output:** true\r\n    **Explanation:**\r\n     \"0.9(9)\" represents 0.999999999... repeated forever, which equals 1.  [[See this link for an explanation.](https://en.wikipedia.org/wiki/0.999...)]\r\n    \"1.\" represents the number 1, which is formed correctly: (IntegerPart) = \"1\" and (NonRepeatingPart) = \"\".\n\n\n\n**Note:**\n\n  1. Each part consists only of digits.\n  2. The `<IntegerPart>` will not begin with 2 or more zeros.  (There is no other restriction on the digits of each part.)\n  3. `1 <= <IntegerPart>.length <= 4 `\n  4. `0 <= <NonRepeatingPart>.length <= 4 `\n  5. `1 <= <RepeatingPart>.length <= 4`",
        "level": 3,
        "paid_only": false,
        "question_id": 1012,
        "slug": "equal-rational-numbers",
        "tags": [
            "Math"
        ],
        "title": "Equal Rational Numbers",
        "url": "https://leetcode.com/problems/equal-rational-numbers/description/"
    },
    "1013": {
        "description": "The  **Fibonacci numbers** , commonly denoted `F(n)` form a sequence, called\nthe  **Fibonacci sequence** , such that each number is the sum of the two\npreceding ones, starting from `0` and `1`. That is,\n\n    \n    \r\n    F(0) = 0,   F(1) = 1\r\n    F(N) = F(N - 1) + F(N - 2), for N > 1.\r\n    \n\nGiven `N`, calculate `F(N)`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 2\r\n    **Output:** 1\r\n    **Explanation:** F(2) = F(1) + F(0) = 1 + 0 = 1.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** 3\r\n    **Output:** 2\r\n    **Explanation:** F(3) = F(2) + F(1) = 1 + 1 = 2.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** 4\r\n    **Output:** 3\r\n    **Explanation:** F(4) = F(3) + F(2) = 2 + 1 = 3.\r\n    \n\n\n\n**Note:**\n\n0 ≤ `N` ≤ 30.",
        "level": 1,
        "paid_only": false,
        "question_id": 1013,
        "slug": "fibonacci-number",
        "tags": [
            "Array"
        ],
        "title": "Fibonacci Number",
        "url": "https://leetcode.com/problems/fibonacci-number/description/"
    },
    "1014": {
        "description": "We have a list of `points` on the plane.  Find the `K` closest points to the\norigin `(0, 0)`.\n\n(Here, the distance between two points on a plane is the Euclidean distance.)\n\nYou may return the answer in any order.  The answer is guaranteed to be unique\n(except for the order that it is in.)\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** points = [[1,3],[-2,2]], K = 1\r\n    **Output:** [[-2,2]]\r\n    **Explanation:**\r\n    The distance between (1, 3) and the origin is sqrt(10).\r\n    The distance between (-2, 2) and the origin is sqrt(8).\r\n    Since sqrt(8)  < sqrt(10), (-2, 2) is closer to the origin.\r\n    We only want the closest K = 1 points from the origin, so the answer is just [[-2,2]].\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** points = [[3,3],[5,-1],[-2,4]], K = 2\r\n    **Output:** [[3,3],[-2,4]]\r\n    (The answer [[-2,4],[3,3]] would also be accepted.)\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= K <= points.length <= 10000`\n  2. `-10000 < points[i][0] < 10000`\n  3. `-10000 < points[i][1] < 10000`",
        "level": 1,
        "paid_only": false,
        "question_id": 1014,
        "slug": "k-closest-points-to-origin",
        "tags": [
            "Math",
            "Divide and Conquer",
            "Sort"
        ],
        "title": "K Closest Points to Origin",
        "url": "https://leetcode.com/problems/k-closest-points-to-origin/description/"
    },
    "1016": {
        "description": "Given an array `A` of integers, return the number of (contiguous, non-empty)\nsubarrays that have a sum divisible by `K`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [4,5,0,-2,-3,1], K = 5\r\n    **Output:** 7\r\n    **Explanation:** There are 7 subarrays with a sum divisible by K = 5:\r\n    [4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 30000`\n  2. `-10000 <= A[i] <= 10000`\n  3. `2 <= K <= 10000`",
        "level": 2,
        "paid_only": false,
        "question_id": 1016,
        "slug": "subarray-sums-divisible-by-k",
        "tags": [
            "Array"
        ],
        "title": "Subarray Sums Divisible by K",
        "url": "https://leetcode.com/problems/subarray-sums-divisible-by-k/description/"
    },
    "1017": {
        "description": "You are given an integer array `A`.  From some starting index, you can make a\nseries of jumps.  The (1st, 3rd, 5th, ...) jumps in the series are called _odd\nnumbered jumps_ , and the (2nd, 4th, 6th, ...) jumps in the series are called\n_even numbered jumps_.\n\nYou may from index `i` jump forward to index `j` (with `i < j`) in the\nfollowing way:\n\n  * During odd numbered jumps (ie. jumps 1, 3, 5, ...), you jump to the index j such that `A[i] <= A[j]` and `A[j]` is the smallest possible value.  If there are multiple such indexes `j`, you can only jump to the **smallest** such index ` j`.\n  * During even numbered jumps (ie. jumps 2, 4, 6, ...), you jump to the index j such that `A[i] >= A[j]` and `A[j]` is the largest possible value.  If there are multiple such indexes `j`, you can only jump to the **smallest** such index ` j`.\n  * (It may be the case that for some index `i,` there are no legal jumps.)\n\nA starting index is _good_ if, starting from that index, you can reach the end\nof the array (index `A.length - 1`) by jumping some number of times (possibly\n0 or more than once.)\n\nReturn the number of good starting indexes.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [10,13,12,14,15]\r\n    **Output:** 2\r\n    **Explanation:**\r\n    From starting index i = 0, we can jump to i = 2 (since A[2] is the smallest among A[1], A[2], A[3], A[4] that is greater or equal to A[0]), then we can 't jump any more.\r\n    From starting index i = 1 and i = 2, we can jump to i = 3, then we can't jump any more.\r\n    From starting index i = 3, we can jump to i = 4, so we've reached the end.\r\n    From starting index i = 4, we've reached the end already.\r\n    In total, there are 2 different starting indexes (i = 3, i = 4) where we can reach the end with some number of jumps.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [2,3,1,1,4]\r\n    **Output:** 3\r\n    **Explanation:**\r\n    From starting index i = 0, we make jumps to i = 1, i = 2, i = 3:\r\n    \r\n    During our 1st jump (odd numbered), we first jump to i = 1 because A[1] is the smallest value in (A[1], A[2], A[3], A[4]) that is greater than or equal to A[0].\r\n    \r\n    During our 2nd jump (even numbered), we jump from i = 1 to i = 2 because A[2] is the largest value in (A[2], A[3], A[4]) that is less than or equal to A[1].  A[3] is also the largest value, but 2 is a smaller index, so we can only jump to i = 2 and not i = 3.\r\n    \r\n    During our 3rd jump (odd numbered), we jump from i = 2 to i = 3 because A[3] is the smallest value in (A[3], A[4]) that is greater than or equal to A[2].\r\n    \r\n    We can 't jump from i = 3 to i = 4, so the starting index i = 0 is not good.\r\n    \r\n    In a similar manner, we can deduce that:\r\n    From starting index i = 1, we jump to i = 4, so we reach the end.\r\n    From starting index i = 2, we jump to i = 3, and then we can't jump anymore.\r\n    From starting index i = 3, we jump to i = 4, so we reach the end.\r\n    From starting index i = 4, we are already at the end.\r\n    In total, there are 3 different starting indexes (i = 1, i = 3, i = 4) where we can reach the end with some number of jumps.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [5,1,3,4,2]\r\n    **Output:** 3\r\n    **Explanation:**\r\n    We can reach the end from starting indexes 1, 2, and 4.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 20000`\n  2. `0 <= A[i] < 100000`",
        "level": 3,
        "paid_only": false,
        "question_id": 1017,
        "slug": "odd-even-jump",
        "tags": [
            "Dynamic Programming",
            "Stack"
        ],
        "title": "Odd Even Jump",
        "url": "https://leetcode.com/problems/odd-even-jump/description/"
    },
    "1018": {
        "description": "Given an array `A` of positive lengths, return the largest perimeter of a\ntriangle with **non-zero area** , formed from 3 of these lengths.\n\nIf it is impossible to form any triangle of non-zero area, return `0`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [2,1,2]\r\n    **Output:** 5\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,2,1]\r\n    **Output:** 0\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [3,2,3,4]\r\n    **Output:** 10\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [3,6,2,3]\r\n    **Output:** 8\r\n    \n\n\n\n**Note:**\n\n  1. `3 <= A.length <= 10000`\n  2. `1 <= A[i] <= 10^6`",
        "level": 1,
        "paid_only": false,
        "question_id": 1018,
        "slug": "largest-perimeter-triangle",
        "tags": [
            "Array",
            "Math"
        ],
        "title": "Largest Perimeter Triangle",
        "url": "https://leetcode.com/problems/largest-perimeter-triangle/description/"
    },
    "1019": {
        "description": "Given an array of integers `A` sorted in non-decreasing order, return an array\nof the squares of each number, also in sorted non-decreasing order.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [-4,-1,0,3,10]\r\n    **Output:** [0,1,9,16,100]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [-7,-3,2,3,11]\r\n    **Output:** [4,9,9,49,121]\r\n    \n\n\n\n**Note:**\n\n  1. ` 1 <= A.length <= 10000`\n  2. `-10000 <= A[i] <= 10000`\n  3. `A` is sorted in non-decreasing order.",
        "level": 1,
        "paid_only": false,
        "question_id": 1019,
        "slug": "squares-of-a-sorted-array",
        "tags": [
            "Array",
            "Two Pointers",
            "Sort"
        ],
        "title": "Squares of a Sorted Array",
        "url": "https://leetcode.com/problems/squares-of-a-sorted-array/description/"
    },
    "1020": {
        "description": "A subarray `A[i], A[i+1], ..., A[j]` of `A` is said to be _turbulent_ if and\nonly if:\n\n  * For `i <= k < j`, `A[k] > A[k+1]` when `k` is odd, and `A[k] < A[k+1]` when `k` is even;\n  * **OR** , for `i <= k < j`, `A[k] > A[k+1]` when `k` is even, and `A[k] < A[k+1]` when `k` is odd.\n\nThat is, the subarray is turbulent if the comparison sign flips between each\nadjacent pair of elements in the subarray.\n\nReturn the **length** of a  maximum size turbulent subarray of A.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [9,4,2,10,7,8,8,1,9]\r\n    **Output:** 5\r\n    **Explanation:** (A[1] > A[2] < A[3] > A[4] < A[5])\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [4,8,12,16]\r\n    **Output:** 2\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [100]\r\n    **Output:** 1\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 40000`\n  2. `0 <= A[i] <= 10^9`",
        "level": 2,
        "paid_only": false,
        "question_id": 1020,
        "slug": "longest-turbulent-subarray",
        "tags": [
            "Array"
        ],
        "title": "Longest Turbulent Subarray",
        "url": "https://leetcode.com/problems/longest-turbulent-subarray/description/"
    },
    "1021": {
        "description": "Given the `root` of a binary tree with `N` nodes, each `node` in the tree has\n`node.val` coins, and there are `N` coins total.\n\nIn one move, we may choose two adjacent nodes and move one coin from one node\nto another.  (The move may be from parent to child, or from child to parent.)\n\nReturn the number of moves required to make every node have exactly one coin.\n\n\n\n**Example 1:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/18/tree1.png)**\n\n    \n    \r\n    **Input:** [3,0,0]\r\n    **Output:** 2\r\n    **Explanation:** From the root of the tree, we move one coin to its left child, and one coin to its right child.\r\n    \n\n**Example 2:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/18/tree2.png)**\n\n    \n    \r\n    **Input:** [0,3,0]\r\n    **Output:** 3\r\n    **Explanation:** From the left child of the root, we move two coins to the root [taking two moves].  Then, we move one coin from the root of the tree to the right child.\r\n    \n\n**Example 3:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/18/tree3.png)**\n\n    \n    \r\n    **Input:** [1,0,2]\r\n    **Output:** 2\r\n    \n\n**Example 4:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/18/tree4.png)**\n\n    \n    \r\n    **Input:** [1,0,0,null,3]\r\n    **Output:** 4\r\n    \n\n\n\n**Note:**\n\n  1. `1<= N <= 100`\n  2. `0 <= node.val <= N`",
        "level": 2,
        "paid_only": false,
        "question_id": 1021,
        "slug": "distribute-coins-in-binary-tree",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Distribute Coins in Binary Tree",
        "url": "https://leetcode.com/problems/distribute-coins-in-binary-tree/description/"
    },
    "1022": {
        "description": "On a 2-dimensional `grid`, there are 4 types of squares:\n\n  * `1` represents the starting square.  There is exactly one starting square.\n  * `2` represents the ending square.  There is exactly one ending square.\n  * `0` represents empty squares we can walk over.\n  * `-1` represents obstacles that we cannot walk over.\n\nReturn the number of 4-directional walks from the starting square to the\nending square, that **walk over every non-obstacle square  exactly once**.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [[1,0,0,0],[0,0,0,0],[0,0,2,-1]]\r\n    **Output:** 2\r\n    **Explanation:** We have the following two paths: \r\n    1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)\r\n    2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)\n\n**Example 2:**\n\n    \n    \r\n    **Input:** [[1,0,0,0],[0,0,0,0],[0,0,0,2]]\r\n    **Output:** 4\r\n    **Explanation:** We have the following four paths: \r\n    1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)\r\n    2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)\r\n    3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)\r\n    4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)\n\n**Example 3:**\n\n    \n    \r\n    **Input:** [[0,1],[2,0]]\r\n    **Output:** 0\r\n    **Explanation:**\r\n    There is no path that walks over every empty square exactly once.\r\n    Note that the starting and ending square can be anywhere in the grid.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= grid.length * grid[0].length <= 20`",
        "level": 3,
        "paid_only": false,
        "question_id": 1022,
        "slug": "unique-paths-iii",
        "tags": [
            "Dynamic Programming",
            "Backtracking"
        ],
        "title": "Unique Paths III",
        "url": "https://leetcode.com/problems/unique-paths-iii/description/"
    },
    "1023": {
        "description": "Create a timebased key-value store class `TimeMap`, that supports two\noperations.\n\n1\\. `set(string key, string value, int timestamp)`\n\n  * Stores the `key` and `value`, along with the given `timestamp`.\n\n2\\. `get(string key, int timestamp)`\n\n  * Returns a value such that `set(key, value, timestamp_prev)` was called previously, with `timestamp_prev <= timestamp`.\n  * If there are multiple such values, it returns the one with the largest `timestamp_prev`.\n  * If there are no values, it returns the empty string (`\"\"`).\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** inputs = [\"TimeMap\",\"set\",\"get\",\"get\",\"set\",\"get\",\"get\"], inputs = [[],[\"foo\",\"bar\",1],[\"foo\",1],[\"foo\",3],[\"foo\",\"bar2\",4],[\"foo\",4],[\"foo\",5]]\r\n    **Output:** [null,null,\"bar\",\"bar\",null,\"bar2\",\"bar2\"]\r\n    **Explanation:**   \r\n    TimeMap kv;   \r\n    kv.set(\"foo\", \"bar\", 1); // store the key \"foo\" and value \"bar\" along with timestamp = 1   \r\n    kv.get(\"foo\", 1);  // output \"bar\"   \r\n    kv.get(\"foo\", 3); // output \"bar\" since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 ie \"bar\"   \r\n    kv.set(\"foo\", \"bar2\", 4);   \r\n    kv.get(\"foo\", 4); // output \"bar2\"   \r\n    kv.get(\"foo\", 5); //output \"bar2\"   \r\n    \r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** inputs = [\"TimeMap\",\"set\",\"set\",\"get\",\"get\",\"get\",\"get\",\"get\"], inputs = [[],[\"love\",\"high\",10],[\"love\",\"low\",20],[\"love\",5],[\"love\",10],[\"love\",15],[\"love\",20],[\"love\",25]]\r\n    **Output:** [null,null,null,\"\",\"high\",\"high\",\"low\",\"low\"]\r\n    \n\n\n\n**Note:**\n\n  1. All key/value strings are lowercase.\n  2. All key/value strings have length in the range `[1, 100]`\n  3. The `timestamps` for all `TimeMap.set` operations are strictly increasing.\n  4. `1 <= timestamp <= 10^7`\n  5. `TimeMap.set` and `TimeMap.get` functions will be called a total of `120000` times (combined) per test case.",
        "level": 2,
        "paid_only": false,
        "question_id": 1023,
        "slug": "time-based-key-value-store",
        "tags": [
            "Hash Table",
            "Binary Search"
        ],
        "title": "Time Based Key-Value Store",
        "url": "https://leetcode.com/problems/time-based-key-value-store/description/"
    },
    "1024": {
        "description": "Given an array of integers `A`, find the number of triples of indices (i, j,\nk) such that:\n\n  * `0 <= i < A.length`\n  * `0 <= j < A.length`\n  * `0 <= k < A.length`\n  * `A[i] & A[j] & A[k] == 0`, where `&` represents the bitwise-AND operator.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [2,1,3]\r\n    **Output:** 12\r\n    **Explanation:** We could choose the following i, j, k triples:\r\n    (i=0, j=0, k=1) : 2 & 2 & 1\r\n    (i=0, j=1, k=0) : 2 & 1 & 2\r\n    (i=0, j=1, k=1) : 2 & 1 & 1\r\n    (i=0, j=1, k=2) : 2 & 1 & 3\r\n    (i=0, j=2, k=1) : 2 & 3 & 1\r\n    (i=1, j=0, k=0) : 1 & 2 & 2\r\n    (i=1, j=0, k=1) : 1 & 2 & 1\r\n    (i=1, j=0, k=2) : 1 & 2 & 3\r\n    (i=1, j=1, k=0) : 1 & 1 & 2\r\n    (i=1, j=2, k=0) : 1 & 3 & 2\r\n    (i=2, j=0, k=1) : 3 & 2 & 1\r\n    (i=2, j=1, k=0) : 3 & 1 & 2\r\n    \n\n\n\n**Note:**\n\n  1. ` 1 <= A.length <= 1000`\n  2. `0 <= A[i] < 2^16`",
        "level": 3,
        "paid_only": false,
        "question_id": 1024,
        "slug": "triples-with-bitwise-and-equal-to-zero",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Triples with Bitwise AND Equal To Zero",
        "url": "https://leetcode.com/problems/triples-with-bitwise-and-equal-to-zero/description/"
    },
    "1025": {
        "description": "In a country popular for train travel, you have planned some train travelling\none year in advance.  The days of the year that you will travel is given as an\narray `days`.  Each day is an integer from `1` to `365`.\n\nTrain tickets are sold in 3 different ways:\n\n  * a 1-day pass is sold for `costs[0]` dollars;\n  * a 7-day pass is sold for `costs[1]` dollars;\n  * a 30-day pass is sold for `costs[2]` dollars.\n\nThe passes allow that many days of consecutive travel.  For example, if we get\na 7-day pass on day 2, then we can travel for 7 days: day 2, 3, 4, 5, 6, 7,\nand 8.\n\nReturn the minimum number of dollars you need to travel every day in the given\nlist of `days`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** days = [1,4,6,7,8,20], costs = [2,7,15]\r\n    **Output:** 11\r\n    **Explanation:**\r\n    For example, here is one way to buy passes that lets you travel your travel plan:\r\n    On day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.\r\n    On day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.\r\n    On day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.\r\n    In total you spent $11 and covered all the days of your travel.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]\r\n    **Output:** 17\r\n    **Explanation:**\r\n    For example, here is one way to buy passes that lets you travel your travel plan:\r\n    On day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.\r\n    On day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.\r\n    In total you spent $17 and covered all the days of your travel.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= days.length <= 365`\n  2. `1 <= days[i] <= 365`\n  3. `days` is in strictly increasing order.\n  4. `costs.length == 3`\n  5. `1 <= costs[i] <= 1000`",
        "level": 2,
        "paid_only": false,
        "question_id": 1025,
        "slug": "minimum-cost-for-tickets",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Minimum Cost For Tickets",
        "url": "https://leetcode.com/problems/minimum-cost-for-tickets/description/"
    },
    "1026": {
        "description": "Given two integers `A` and `B`, return **any** string `S` such that:\n\n  * `S` has length `A + B` and contains exactly `A` `'a'` letters, and exactly `B` `'b'` letters;\n  * The substring `'aaa'` does not occur in `S`;\n  * The substring `'bbb'` does not occur in `S`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = 1, B = 2\r\n    **Output:** \"abb\"\r\n    **Explanation:**  \"abb\", \"bab\" and \"bba\" are all correct answers.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = 4, B = 1\r\n    **Output:** \"aabaa\"\n\n\n\n**Note:**\n\n  1. `0 <= A <= 100`\n  2. `0 <= B <= 100`\n  3. It is guaranteed such an `S` exists for the given `A` and `B`.",
        "level": 1,
        "paid_only": false,
        "question_id": 1026,
        "slug": "string-without-aaa-or-bbb",
        "tags": [
            "Greedy"
        ],
        "title": "String Without AAA or BBB",
        "url": "https://leetcode.com/problems/string-without-aaa-or-bbb/description/"
    },
    "1027": {
        "description": "We have an array `A` of integers, and an array `queries` of queries.\n\nFor the `i`-th query `val = queries[i][0], index = queries[i][1]`, we add val\nto `A[index]`.  Then, the answer to the `i`-th query is the sum of the even\nvalues of `A`.\n\n_(Here, the given`index = queries[i][1]` is a 0-based index, and each query\npermanently modifies the array `A`.)_\n\nReturn the answer to all queries.  Your `answer` array should have `answer[i]`\nas the answer to the `i`-th query.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]\r\n    **Output:** [8,6,2,4]\r\n    **Explanation:**\r\n    At the beginning, the array is [1,2,3,4].\r\n    After adding 1 to A[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.\r\n    After adding -3 to A[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.\r\n    After adding -4 to A[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.\r\n    After adding 2 to A[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 10000`\n  2. `-10000 <= A[i] <= 10000`\n  3. `1 <= queries.length <= 10000`\n  4. `-10000 <= queries[i][0] <= 10000`\n  5. `0 <= queries[i][1] < A.length`",
        "level": 1,
        "paid_only": false,
        "question_id": 1027,
        "slug": "sum-of-even-numbers-after-queries",
        "tags": [
            "Array"
        ],
        "title": "Sum of Even Numbers After Queries",
        "url": "https://leetcode.com/problems/sum-of-even-numbers-after-queries/description/"
    },
    "1028": {
        "description": "Given two lists of **closed** intervals, each list of intervals is pairwise\ndisjoint and in sorted order.\n\nReturn the intersection of these two interval lists.\n\n_(Formally, a closed interval`[a, b]` (with `a <= b`) denotes the set of real\nnumbers `x` with `a <= x <= b`.  The intersection of two closed intervals is a\nset of real numbers that is either empty, or can be represented as a closed\ninterval.  For example, the intersection of [1, 3] and [2, 4] is [2, 3].)_\n\n\n\n**Example 1:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/30/interval1.png)**\n\n    \n    \r\n    **Input:** A = [[0,2],[5,10],[13,23],[24,25]], B = [[1,5],[8,12],[15,24],[25,26]]\r\n    **Output:** [[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]\r\n    **Reminder:** The inputs and the desired output are lists of Interval objects, and not arrays or lists.\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= A.length < 1000`\n  2. `0 <= B.length < 1000`\n  3. `0 <= A[i].start, A[i].end, B[i].start, B[i].end < 10^9`",
        "level": 2,
        "paid_only": false,
        "question_id": 1028,
        "slug": "interval-list-intersections",
        "tags": [
            "Two Pointers"
        ],
        "title": "Interval List Intersections",
        "url": "https://leetcode.com/problems/interval-list-intersections/description/"
    },
    "1029": {
        "description": "Given a binary tree, return the _vertical order_ traversal of its nodes\nvalues.\n\nFor each node at position `(X, Y)`, its left and right children respectively\nwill be at positions `(X-1, Y-1)` and `(X+1, Y-1)`.\n\nRunning a vertical line from `X = -infinity` to `X = +infinity`, whenever the\nvertical line touches some nodes, we report the values of the nodes in order\nfrom top to bottom (decreasing `Y` coordinates).\n\nIf two nodes have the same position, then the value of the node that is\nreported first is the value that is smaller.\n\nReturn an list of non-empty reports in order of `X` coordinate.  Every report\nwill have a list of values of nodes.\n\n\n\n**Example 1:**\n\n![](https://assets.leetcode.com/uploads/2019/01/31/1236_example_1.PNG)\n\n    \n    \r\n    **Input:** [3,9,20,null,null,15,7]\r\n    **Output:** [[9],[3,15],[20],[7]]\r\n    **Explanation:**\r\n    Without loss of generality, we can assume the root node is at position (0, 0):\r\n    Then, the node with value 9 occurs at position (-1, -1);\r\n    The nodes with values 3 and 15 occur at positions (0, 0) and (0, -2);\r\n    The node with value 20 occurs at position (1, -1);\r\n    The node with value 7 occurs at position (2, -2).\r\n    \n\n**Example 2:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/31/tree2.png)**\n\n    \n    \r\n    **Input:** [1,2,3,4,5,6,7]\r\n    **Output:** [[4],[2],[1,5,6],[3],[7]]\r\n    **Explanation:**\r\n    The node with value 5 and the node with value 6 have the same position according to the given scheme.\r\n    However, in the report  \"[1,5,6]\", the node value of 5 comes first since 5 is smaller than 6.\r\n    \n\n\n\n**Note:**\n\n  1. The tree will have between 1 and `1000` nodes.\n  2. Each node's value will be between `0` and `1000`.",
        "level": 2,
        "paid_only": false,
        "question_id": 1029,
        "slug": "vertical-order-traversal-of-a-binary-tree",
        "tags": [
            "Hash Table",
            "Tree"
        ],
        "title": "Vertical Order Traversal of a Binary Tree",
        "url": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/description/"
    },
    "1030": {
        "description": "Given the `root` of a binary tree, each node has a value from `0` to `25`\nrepresenting the letters `'a'` to `'z'`: a value of `0` represents `'a'`, a\nvalue of `1` represents `'b'`, and so on.\n\nFind the lexicographically smallest string that starts at a leaf of this tree\nand ends at the root.\n\n_(As a reminder, any shorter prefix of a string is lexicographically smaller:\nfor example,`\"ab\"` is lexicographically smaller than `\"aba\"`.  A leaf of a\nnode is a node that has no children.)_\n\n\n\n**Example 1:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/30/tree1.png)**\n\n    \n    \r\n    **Input:** [0,1,2,3,4,3,4]\r\n    **Output:** \"dba\"\r\n    \n\n**Example 2:**\n\n**![](https://assets.leetcode.com/uploads/2019/01/30/tree2.png)**\n\n    \n    \r\n    **Input:** [25,1,3,1,3,0,2]\r\n    **Output:** \"adz\"\r\n    \n\n**Example 3:**\n\n**![](https://assets.leetcode.com/uploads/2019/02/01/tree3.png)**\n\n    \n    \r\n    **Input:** [2,2,1,null,1,0,null,0]\r\n    **Output:** \"abc\"\r\n    \n\n\n\n**Note:**\n\n  1. The number of nodes in the given tree will be between `1` and `1000`.\n  2. Each node in the tree will have a value between `0` and `25`.",
        "level": 2,
        "paid_only": false,
        "question_id": 1030,
        "slug": "smallest-string-starting-from-leaf",
        "tags": [
            "Tree"
        ],
        "title": "Smallest String Starting From Leaf",
        "url": "https://leetcode.com/problems/smallest-string-starting-from-leaf/description/"
    },
    "1031": {
        "description": "For a non-negative integer `X`, the  _array-form of`X`_  is an array of its\ndigits in left to right order.  For example, if `X = 1231`, then the array\nform is `[1,2,3,1]`.\n\nGiven the array-form `A` of a non-negative integer `X`, return the array-form\nof the integer `X+K`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [1,2,0,0], K = 34\r\n    **Output:** [1,2,3,4]\r\n    **Explanation:** 1200 + 34 = 1234\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [2,7,4], K = 181\r\n    **Output:** [4,5,5]\r\n    **Explanation:** 274 + 181 = 455\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** A = [2,1,5], K = 806\r\n    **Output:** [1,0,2,1]\r\n    **Explanation:** 215 + 806 = 1021\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** A = [9,9,9,9,9,9,9,9,9,9], K = 1\r\n    **Output:** [1,0,0,0,0,0,0,0,0,0,0]\r\n    **Explanation:** 9999999999 + 1 = 10000000000\r\n    \n\n\n\n**Note：**\n\n  1. `1 <= A.length <= 10000`\n  2. `0 <= A[i] <= 9`\n  3. `0 <= K <= 10000`\n  4. If `A.length > 1`, then `A[0] != 0`",
        "level": 1,
        "paid_only": false,
        "question_id": 1031,
        "slug": "add-to-array-form-of-integer",
        "tags": [
            "Array"
        ],
        "title": "Add to Array-Form of Integer",
        "url": "https://leetcode.com/problems/add-to-array-form-of-integer/description/"
    },
    "1032": {
        "description": "Given an array equations of strings that represent relationships between\nvariables, each string `equations[i]` has length `4` and takes one of two\ndifferent forms: `\"a==b\"` or `\"a!=b\"`.  Here, `a` and `b` are lowercase\nletters (not necessarily different) that represent one-letter variable names.\n\nReturn `true` if and only if it is possible to assign integers to variable\nnames so as to satisfy all the given equations.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"a==b\",\"b!=a\"]\r\n    **Output:** false\r\n    **Explanation:** If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not the second.  There is no way to assign the variables to satisfy both equations.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"b==a\",\"a==b\"]\r\n    **Output:** true\r\n    **Explanation:** We could assign a = 1 and b = 1 to satisfy both equations.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [\"a==b\",\"b==c\",\"a==c\"]\r\n    **Output:** true\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [\"a==b\",\"b!=c\",\"c==a\"]\r\n    **Output:** false\r\n    \n\n**Example 5:**\n\n    \n    \r\n    **Input:** [\"c==c\",\"b==d\",\"x!=z\"]\r\n    **Output:** true\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= equations.length <= 500`\n  2. `equations[i].length == 4`\n  3. `equations[i][0]` and `equations[i][3]` are lowercase letters\n  4. `equations[i][1]` is either `'='` or `'!'`\n  5. `equations[i][2]` is `'='`",
        "level": 2,
        "paid_only": false,
        "question_id": 1032,
        "slug": "satisfiability-of-equality-equations",
        "tags": [
            "Union Find",
            "Graph"
        ],
        "title": "Satisfiability of Equality Equations",
        "url": "https://leetcode.com/problems/satisfiability-of-equality-equations/description/"
    },
    "1033": {
        "description": "On a broken calculator that has a number showing on its display, we can\nperform two operations:\n\n  * **Double** : Multiply the number on the display by 2, or;\n  * **Decrement** : Subtract 1 from the number on the display.\n\nInitially, the calculator is displaying the number `X`.\n\nReturn the minimum number of operations needed to display the number `Y`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** X = 2, Y = 3\r\n    **Output:** 2\r\n    **Explanation:** Use double operation and then decrement operation {2 -> 4 -> 3}.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** X = 5, Y = 8\r\n    **Output:** 2\r\n    **Explanation:** Use decrement and then double {5 -> 4 -> 8}.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** X = 3, Y = 10\r\n    **Output:** 3\r\n    **Explanation:** Use double, decrement and double {3 - > 6 -> 5 -> 10}.\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** X = 1024, Y = 1\r\n    **Output:** 1023\r\n    **Explanation:** Use decrement operations 1023 times.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= X <= 10^9`\n  2. `1 <= Y <= 10^9`",
        "level": 2,
        "paid_only": false,
        "question_id": 1033,
        "slug": "broken-calculator",
        "tags": [
            "Math",
            "Greedy"
        ],
        "title": "Broken Calculator",
        "url": "https://leetcode.com/problems/broken-calculator/description/"
    },
    "1034": {
        "description": "Given an array `A` of positive integers, call a (contiguous, not necessarily\ndistinct) subarray of `A` _good_ if the number of different integers in that\nsubarray is exactly `K`.\n\n(For example, `[1,2,3,1,2]` has `3` different integers: `1`, `2`, and `3`.)\n\nReturn the number of good subarrays of `A`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [1,2,1,2,3], K = 2\r\n    **Output:** 7\r\n    **Explanation:** Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [1,2,1,3,4], K = 3\r\n    **Output:** 3\r\n    **Explanation:** Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 20000`\n  2. `1 <= A[i] <= A.length`\n  3. `1 <= K <= A.length`",
        "level": 3,
        "paid_only": false,
        "question_id": 1034,
        "slug": "subarrays-with-k-different-integers",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "Sliding Window"
        ],
        "title": "Subarrays with K Different Integers",
        "url": "https://leetcode.com/problems/subarrays-with-k-different-integers/description/"
    },
    "1035": {
        "description": "In a binary tree, the root node is at depth `0`, and children of each depth\n`k` node are at depth `k+1`.\n\nTwo nodes of a binary tree are _cousins_ if they have the same depth, but have\n**different parents**.\n\nWe are given the `root` of a binary tree with unique values, and the values\n`x` and `y` of two different nodes in the tree.\n\nReturn `true` if and only if the nodes corresponding to the values `x` and `y`\nare cousins.\n\n\n\n**Example 1:  \n![](https://assets.leetcode.com/uploads/2019/02/12/q1248-01.png)**\n\n    \n    \r\n    **Input:** root = [1,2,3,4], x = 4, y = 3\r\n    **Output:** false\r\n    \n\n**Example 2:  \n![](https://assets.leetcode.com/uploads/2019/02/12/q1248-02.png)**\n\n    \n    \r\n    **Input:** root = [1,2,3,null,4,null,5], x = 5, y = 4\r\n    **Output:** true\r\n    \n\n**Example 3:**\n\n**![](https://assets.leetcode.com/uploads/2019/02/13/q1248-03.png)**\n\n    \n    \r\n    **Input:** root = [1,2,3,null,4], x = 2, y = 3\r\n    **Output:** false\n\n\n\n**Note:**\n\n  1. The number of nodes in the tree will be between `2` and `100`.\n  2. Each node has a unique integer value from `1` to `100`.",
        "level": 1,
        "paid_only": false,
        "question_id": 1035,
        "slug": "cousins-in-binary-tree",
        "tags": [
            "Tree",
            "Breadth-first Search"
        ],
        "title": "Cousins in Binary Tree",
        "url": "https://leetcode.com/problems/cousins-in-binary-tree/description/"
    },
    "1036": {
        "description": "In a given grid, each cell can have one of three values:\n\n  * the value `0` representing an empty cell;\n  * the value `1` representing a fresh orange;\n  * the value `2` representing a rotten orange.\n\nEvery minute, any fresh orange that is adjacent (4-directionally) to a rotten\norange becomes rotten.\n\nReturn the minimum number of minutes that must elapse until no cell has a\nfresh orange.  If this is impossible, return `-1` instead.\n\n\n\n**Example 1:**\n\n**![](https://assets.leetcode.com/uploads/2019/02/16/oranges.png)**\n\n    \n    \r\n    **Input:** [[2,1,1],[1,1,0],[0,1,1]]\r\n    **Output:** 4\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [[2,1,1],[0,1,1],[1,0,1]]\r\n    **Output:** -1\r\n    **Explanation:** The orange in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [[0,2]]\r\n    **Output:** 0\r\n    **Explanation:** Since there are already no fresh oranges at minute 0, the answer is just 0.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= grid.length <= 10`\n  2. `1 <= grid[0].length <= 10`\n  3. `grid[i][j]` is only `0`, `1`, or `2`.",
        "level": 1,
        "paid_only": false,
        "question_id": 1036,
        "slug": "rotting-oranges",
        "tags": [
            "Breadth-first Search"
        ],
        "title": "Rotting Oranges",
        "url": "https://leetcode.com/problems/rotting-oranges/description/"
    },
    "1037": {
        "description": "In an array `A` containing only 0s and 1s, a _`K`-bit flip _ consists of\nchoosing a (contiguous) subarray of length `K` and simultaneously changing\nevery 0 in the subarray to 1, and every 1 in the subarray to 0.\n\nReturn the minimum number of `K`-bit flips required so that there is no 0 in\nthe array.  If it is not possible, return `-1`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [0,1,0], K = 1\r\n    **Output:** 2\r\n    **Explanation:** Flip A[0], then flip A[2].\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [1,1,0], K = 2\r\n    **Output:** -1\r\n    **Explanation:**  No matter how we flip subarrays of size 2, we can't make the array become [1,1,1].\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** A = [0,0,0,1,0,1,1,0], K = 3\r\n    **Output:** 3\r\n    **Explanation:**\r\n    Flip A[0],A[1],A[2]:  A becomes [1,1,1,1,0,1,1,0]\r\n    Flip A[4],A[5],A[6]: A becomes [1,1,1,1,1,0,0,0]\r\n    Flip A[5],A[6],A[7]: A becomes [1,1,1,1,1,1,1,1]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 30000`\n  2. `1 <= K <= A.length`",
        "level": 3,
        "paid_only": false,
        "question_id": 1037,
        "slug": "minimum-number-of-k-consecutive-bit-flips",
        "tags": [
            "Greedy",
            "Sliding Window"
        ],
        "title": "Minimum Number of K Consecutive Bit Flips",
        "url": "https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips/description/"
    },
    "1038": {
        "description": "Given an array `A` of non-negative integers, the array is _squareful_ if for\nevery pair of adjacent elements, their sum is a perfect square.\n\nReturn the number of permutations of A that are squareful.  Two permutations\n`A1` and `A2` differ if and only if there is some index `i` such that `A1[i]\n!= A2[i]`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [1,17,8]\r\n    **Output:** 2\r\n    **Explanation:**\r\n    [1,8,17] and [17,8,1] are the valid permutations.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [2,2,2]\r\n    **Output:** 1\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 12`\n  2. `0 <= A[i] <= 1e9`",
        "level": 3,
        "paid_only": false,
        "question_id": 1038,
        "slug": "number-of-squareful-arrays",
        "tags": [
            "Math",
            "Backtracking",
            "Graph"
        ],
        "title": "Number of Squareful Arrays",
        "url": "https://leetcode.com/problems/number-of-squareful-arrays/description/"
    },
    "1039": {
        "description": "In a town, there are `N` people labelled from `1` to `N`.  There is a rumor\nthat one of these people is secretly the town judge.\n\nIf the town judge exists, then:\n\n  1. The town judge trusts nobody.\n  2. Everybody (except for the town judge) trusts the town judge.\n  3. There is exactly one person that satisfies properties 1 and 2.\n\nYou are given `trust`, an array of pairs `trust[i] = [a, b]` representing that\nthe person labelled `a` trusts the person labelled `b`.\n\nIf the town judge exists and can be identified, return the label of the town\njudge.  Otherwise, return `-1`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** N = 2, trust = [[1,2]]\r\n    **Output:** 2\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** N = 3, trust = [[1,3],[2,3]]\r\n    **Output:** 3\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** N = 3, trust = [[1,3],[2,3],[3,1]]\r\n    **Output:** -1\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** N = 3, trust = [[1,2],[2,3]]\r\n    **Output:** -1\r\n    \n\n**Example 5:**\n\n    \n    \r\n    **Input:** N = 4, trust = [[1,3],[1,4],[2,3],[2,4],[4,3]]\r\n    **Output:** 3\n\n\n\n**Note:**\n\n  1. `1 <= N <= 1000`\n  2. `trust.length <= 10000`\n  3. `trust[i]` are all different\n  4. `trust[i][0] != trust[i][1]`\n  5. `1 <= trust[i][0], trust[i][1] <= N`",
        "level": 1,
        "paid_only": false,
        "question_id": 1039,
        "slug": "find-the-town-judge",
        "tags": [
            "Graph"
        ],
        "title": "Find the Town Judge",
        "url": "https://leetcode.com/problems/find-the-town-judge/description/"
    },
    "1040": {
        "description": "We are given the `root` node of a _maximum tree:_ a tree where every node has\na value greater than any other value in its subtree.\n\nJust as in the [previous problem](https://leetcode.com/problems/maximum-\nbinary-tree/), the given tree was constructed from an list `A` (`root =\nConstruct(A)`) recursively with the following `Construct(A)` routine:\n\n  * If `A` is empty, return `null`.\n  * Otherwise, let `A[i]` be the largest element of `A`.  Create a `root` node with value `A[i]`.\n  * The left child of `root` will be `Construct([A[0], A[1], ..., A[i-1]])`\n  * The right child of `root` will be `Construct([A[i+1], A[i+2], ..., A[A.length - 1]])`\n  * Return `root`.\n\nNote that we were not given A directly, only a root node `root =\nConstruct(A)`.\n\nSuppose `B` is a copy of `A` with the value `val` appended to it.  It is\nguaranteed that `B` has unique values.\n\nReturn `Construct(B)`.\n\n\n\n**Example 1:**\n\n**![](https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-\ntree-1-1.png)![](https://assets.leetcode.com/uploads/2019/02/21/maximum-\nbinary-tree-1-2.png)**\n\n    \n    \r\n    **Input:** root = [4,1,3,null,null,2], val = 5\r\n    **Output:** [5,4,null,1,3,null,null,2]\r\n    **Explanation:** A =  [1,4,2,3], B = [1,4,2,3,5]\r\n    \n\n**Example 2:  \n![](https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-\ntree-2-1.png)![](https://assets.leetcode.com/uploads/2019/02/21/maximum-\nbinary-tree-2-2.png)**\n\n    \n    \r\n    **Input:** root = [5,2,4,null,1], val = 3\r\n    **Output:** [5,2,4,null,1,null,3]\r\n    **Explanation:** A =  [2,1,5,4], B = [2,1,5,4,3]\r\n    \n\n**Example 3:  \n![](https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-\ntree-3-1.png)![](https://assets.leetcode.com/uploads/2019/02/21/maximum-\nbinary-tree-3-2.png)**\n\n    \n    \r\n    **Input:** root = [5,2,3,null,1], val = 4\r\n    **Output:** [5,2,4,null,1,3]\r\n    **Explanation:** A =  [2,1,5,3], B = [2,1,5,3,4]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= B.length <= 100`",
        "level": 2,
        "paid_only": false,
        "question_id": 1040,
        "slug": "maximum-binary-tree-ii",
        "tags": [
            "Tree"
        ],
        "title": "Maximum Binary Tree II",
        "url": "https://leetcode.com/problems/maximum-binary-tree-ii/description/"
    },
    "1041": {
        "description": "On an 8 x 8 chessboard, there is one white rook.  There also may be empty\nsquares, white bishops, and black pawns.  These are given as characters 'R',\n'.', 'B', and 'p' respectively. Uppercase characters represent white pieces,\nand lowercase characters represent black pieces.\n\nThe rook moves as in the rules of Chess: it chooses one of four cardinal\ndirections (north, east, west, and south), then moves in that direction until\nit chooses to stop, reaches the edge of the board, or captures an opposite\ncolored pawn by moving to the same square it occupies.  Also, rooks cannot\nmove into the same square as other friendly bishops.\n\nReturn the number of pawns the rook can capture in one move.\n\n\n\n**Example 1:**\n\n![](https://assets.leetcode.com/uploads/2019/02/20/1253_example_1_improved.PNG)\n\n    \n    \r\n    **Input:** [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"R\",\".\",\".\",\".\",\"p\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\r\n    **Output:** 3\r\n    **Explanation:**\r\n    In this example the rook is able to capture all the pawns.\r\n    \n\n**Example 2:**\n\n![](https://assets.leetcode.com/uploads/2019/02/19/1253_example_2_improved.PNG)\n\n    \n    \r\n    **Input:** [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"B\",\"R\",\"B\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"p\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\r\n    **Output:** 0\r\n    **Explanation:**\r\n    Bishops are blocking the rook to capture any pawn.\r\n    \n\n**Example 3:**\n\n![](https://assets.leetcode.com/uploads/2019/02/20/1253_example_3_improved.PNG)\n\n    \n    \r\n    **Input:** [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\"p\",\"p\",\".\",\"R\",\".\",\"p\",\"B\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\r\n    **Output:** 3\r\n    **Explanation:**\r\n    The rook can capture the pawns at positions b5, d6 and f5.\r\n    \n\n\n\n**Note:**\n\n  1. `board.length == board[i].length == 8`\n  2. `board[i][j]` is either `'R'`, `'.'`, `'B'`, or `'p'`\n  3. There is exactly one cell with `board[i][j] == 'R'`",
        "level": 1,
        "paid_only": false,
        "question_id": 1041,
        "slug": "available-captures-for-rook",
        "tags": [
            "Array"
        ],
        "title": "Available Captures for Rook",
        "url": "https://leetcode.com/problems/available-captures-for-rook/description/"
    },
    "1042": {
        "description": "There are `N` piles of stones arranged in a row.  The `i`-th pile has\n`stones[i]` stones.\n\nA _move_ consists of merging **exactly  `K` consecutive** piles into one pile,\nand the cost of this move is equal to the total number of stones in these `K`\npiles.\n\nFind the minimum cost to merge all piles of stones into one pile.  If it is\nimpossible, return `-1`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** stones = [3,2,4,1], K = 2\r\n    **Output:** 20\r\n    **Explanation:**\r\n    We start with [3, 2, 4, 1].\r\n    We merge [3, 2] for a cost of 5, and we are left with [5, 4, 1].\r\n    We merge [4, 1] for a cost of 5, and we are left with [5, 5].\r\n    We merge [5, 5] for a cost of 10, and we are left with [10].\r\n    The total cost was 20, and this is the minimum possible.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** stones = [3,2,4,1], K = 3\r\n    **Output:** -1\r\n    **Explanation:** After any merge operation, there are 2 piles left, and we can't merge anymore.  So the task is impossible.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** stones = [3,5,1,2,6], K = 3\r\n    **Output:** 25\r\n    **Explanation:**\r\n    We start with [3, 5, 1, 2, 6].\r\n    We merge [5, 1, 2] for a cost of 8, and we are left with [3, 8, 6].\r\n    We merge [3, 8, 6] for a cost of 17, and we are left with [17].\r\n    The total cost was 25, and this is the minimum possible.\r\n    \n\n\n\n**Note:**\n\n  * ` 1 <= stones.length <= 30`\n  * `2 <= K <= 30`\n  * `1 <= stones[i] <= 100`",
        "level": 3,
        "paid_only": false,
        "question_id": 1042,
        "slug": "minimum-cost-to-merge-stones",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Minimum Cost to Merge Stones",
        "url": "https://leetcode.com/problems/minimum-cost-to-merge-stones/description/"
    },
    "1043": {
        "description": "On a `N x N` grid of cells, each cell `(x, y)` with `0 <= x < N` and `0 <= y <\nN` has a lamp.\n\nInitially, some number of lamps are on.  `lamps[i]` tells us the location of\nthe `i`-th lamp that is on.  Each lamp that is on illuminates every square on\nits x-axis, y-axis, and both diagonals (similar to a Queen in chess).\n\nFor the i-th query `queries[i] = (x, y)`, the answer to the query is 1 if the\ncell (x, y) is illuminated, else 0.\n\nAfter each query `(x, y)` [in the order given by `queries`], we turn off any\nlamps that are at cell `(x, y)` or are adjacent 8-directionally (ie., share a\ncorner or edge with cell `(x, y)`.)\n\nReturn an array of answers.  Each value `answer[i]` should be equal to the\nanswer of the `i`-th query `queries[i]`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** N = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,0]]\r\n    **Output:** [1,0]\r\n    **Explanation:**\r\n    Before performing the first query we have both lamps [0,0] and [4,4] on.\r\n    The grid representing which cells are lit looks like this, where [0,0] is the top left corner, and [4,4] is the bottom right corner:\r\n    1 1 1 1 1\r\n    1 1 0 0 1\r\n    1 0 1 0 1\r\n    1 0 0 1 1\r\n    1 1 1 1 1\r\n    Then the query at [1, 1] returns 1 because the cell is lit.  After this query, the lamp at [0, 0] turns off, and the grid now looks like this:\r\n    1 0 0 0 1\r\n    0 1 0 0 1\r\n    0 0 1 0 1\r\n    0 0 0 1 1\r\n    1 1 1 1 1\r\n    Before performing the second query we have only the lamp [4,4] on.  Now the query at [1,0] returns 0, because the cell is no longer lit.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= N <= 10^9`\n  2. `0 <= lamps.length <= 20000`\n  3. `0 <= queries.length <= 20000`\n  4. `lamps[i].length == queries[i].length == 2`",
        "level": 3,
        "paid_only": false,
        "question_id": 1043,
        "slug": "grid-illumination",
        "tags": [
            "Hash Table"
        ],
        "title": "Grid Illumination",
        "url": "https://leetcode.com/problems/grid-illumination/description/"
    },
    "1044": {
        "description": "Given an array `A` of strings made only from lowercase letters, return a list\nof all characters that show up in all strings within the list **(including\nduplicates)**.   For example, if a character occurs 3 times in all strings but\nnot 4 times, you need to include that character three times in the final\nanswer.\n\nYou may return the answer in any order.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [\"bella\",\"label\",\"roller\"]\r\n    **Output:** [\"e\",\"l\",\"l\"]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [\"cool\",\"lock\",\"cook\"]\r\n    **Output:** [\"c\",\"o\"]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 100`\n  2. `1 <= A[i].length <= 100`\n  3. `A[i][j]` is a lowercase letter",
        "level": 1,
        "paid_only": false,
        "question_id": 1044,
        "slug": "find-common-characters",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "title": "Find Common Characters",
        "url": "https://leetcode.com/problems/find-common-characters/description/"
    },
    "1045": {
        "description": "We are given that the string `\"abc\"` is valid.\n\nFrom any valid string `V`, we may split `V` into two pieces `X` and `Y` such\nthat `X + Y` (`X` concatenated with `Y`) is equal to `V`.  (`X` or `Y` may be\nempty.)  Then, `X + \"abc\" + Y` is also valid.\n\nIf for example `S = \"abc\"`, then examples of valid strings are: `\"abc\",\n\"aabcbc\", \"abcabc\", \"abcabcababcc\"`.  Examples of **invalid**  strings are:\n`\"abccba\"`, `\"ab\"`, `\"cababc\"`, `\"bac\"`.\n\nReturn `true` if and only if the given string `S` is valid.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** \"aabcbc\"\r\n    **Output:** true\r\n    **Explanation:**\r\n    We start with the valid string  \"abc\".\r\n    Then we can insert another \"abc\" between \"a\" and \"bc\", resulting in \"a\" + \"abc\" + \"bc\" which is \"aabcbc\".\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** \"abcabcababcc\"\r\n    **Output:** true\r\n    **Explanation:**\r\n     \"abcabcabc\" is valid after consecutive insertings of \"abc\".\r\n    Then we can insert \"abc\" before the last letter, resulting in \"abcabcab\" + \"abc\" + \"c\" which is \"abcabcababcc\".\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** \"abccba\"\r\n    **Output:** false\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** \"cababc\"\r\n    **Output:** false\n\n\n\n**Note:**\n\n  1. `1 <= S.length <= 20000`\n  2. `S[i]` is `'a'`, `'b'`, or `'c'`",
        "level": 2,
        "paid_only": false,
        "question_id": 1045,
        "slug": "check-if-word-is-valid-after-substitutions",
        "tags": [
            "String",
            "Stack"
        ],
        "title": "Check If Word Is Valid After Substitutions",
        "url": "https://leetcode.com/problems/check-if-word-is-valid-after-substitutions/description/"
    },
    "1046": {
        "description": "Given an array `A` of 0s and 1s, we may change up to `K` values from 0 to 1.\n\nReturn the length of the longest (contiguous) subarray that contains only 1s.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [1,1,1,0,0,0,1,1,1,1,0], K = 2\r\n    **Output:** 6\r\n    **Explanation:**\r\n    [1,1,1,0,0, _ **1** ,1,1,1,1, **1**_ ]\r\n    Bolded numbers were flipped from 0 to 1.  The longest subarray is underlined.\n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3\r\n    **Output:** 10\r\n    **Explanation:**\r\n    [0,0, _1,1, **1** , **1** ,1,1,1, **1** ,1,1_,0,0,0,1,1,1,1]\r\n    Bolded numbers were flipped from 0 to 1.  The longest subarray is underlined.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 20000`\n  2. `0 <= K <= A.length`\n  3. `A[i]` is `0` or `1`",
        "level": 2,
        "paid_only": false,
        "question_id": 1046,
        "slug": "max-consecutive-ones-iii",
        "tags": [
            "Two Pointers",
            "Sliding Window"
        ],
        "title": "Max Consecutive Ones III",
        "url": "https://leetcode.com/problems/max-consecutive-ones-iii/description/"
    },
    "1047": {
        "description": "Given an array `A` of integers, we **must**  modify the array in the following\nway: we choose an `i` and replace `A[i]` with `-A[i]`, and we repeat this\nprocess `K` times in total.  (We may choose the same index `i` multiple\ntimes.)\n\nReturn the largest possible sum of the array after modifying it in this way.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** A = [4,2,3], K = 1\r\n    **Output:** 5\r\n    **Explanation:** Choose indices (1,) and A becomes [4,-2,3].\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [3,-1,0,2], K = 3\r\n    **Output:** 6\r\n    **Explanation:** Choose indices (1, 2, 2) and A becomes [3,1,0,2].\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** A = [2,-3,-1,5,-4], K = 2\r\n    **Output:** 13\r\n    **Explanation:** Choose indices (1, 4) and A becomes [2,3,-1,5,4].\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 10000`\n  2. `1 <= K <= 10000`\n  3. `-100 <= A[i] <= 100`",
        "level": 1,
        "paid_only": false,
        "question_id": 1047,
        "slug": "maximize-sum-of-array-after-k-negations",
        "tags": [
            "Greedy"
        ],
        "title": "Maximize Sum Of Array After K Negations",
        "url": "https://leetcode.com/problems/maximize-sum-of-array-after-k-negations/description/"
    },
    "1048": {
        "description": "Normally, the factorial of a positive integer `n` is the product of all\npositive integers less than or equal to `n`.  For example, `factorial(10) = 10\n* 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1`.\n\nWe instead make a _clumsy factorial:_  using the integers in decreasing order,\nwe swap out the multiply operations for a fixed rotation of operations:\nmultiply (*), divide (/), add (+) and subtract (-) in this order.\n\nFor example, `clumsy(10) = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1`.  However,\nthese operations are still applied using the usual order of operations of\narithmetic: we do all multiplication and division steps before any addition or\nsubtraction steps, and multiplication and division steps are processed left to\nright.\n\nAdditionally, the division that we use is _floor division_  such that `10 * 9\n/ 8` equals `11`.  This guarantees the result is an integer.\n\n`Implement the clumsy` function as defined above: given an integer `N`, it\nreturns the clumsy factorial of `N`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 4\r\n    **Output:**  7\r\n    **Explanation:** 7 = 4 * 3 / 2 + 1\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** 10\r\n    **Output:** 12\r\n    **Explanation:** 12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= N <= 10000`\n  2. `-2^31 <= answer <= 2^31 - 1`  (The answer is guaranteed to fit within a 32-bit integer.)",
        "level": 2,
        "paid_only": false,
        "question_id": 1048,
        "slug": "clumsy-factorial",
        "tags": [
            "Math"
        ],
        "title": "Clumsy Factorial",
        "url": "https://leetcode.com/problems/clumsy-factorial/description/"
    },
    "1049": {
        "description": "In a row of dominoes, `A[i]` and `B[i]` represent the top and bottom halves of\nthe `i`-th domino.  (A domino is a tile with two numbers from 1 to 6 - one on\neach half of the tile.)\n\nWe may rotate the `i`-th domino, so that `A[i]` and `B[i]` swap values.\n\nReturn the minimum number of rotations so that all the values in `A` are the\nsame, or all the values in `B` are the same.\n\nIf it cannot be done, return `-1`.\n\n\n\n**Example 1:**\n\n![](https://assets.leetcode.com/uploads/2019/03/08/domino.png)\n\n    \n    \r\n    **Input:** A = [2,1,2,4,2,2], B = [5,2,6,2,3,2]\r\n    **Output:** 2\r\n    **Explanation:**\r\n    The first figure represents the dominoes as given by A and B: before we do any rotations.\r\n    If we rotate the second and fourth dominoes, we can make every value in the top row equal to 2, as indicated by the second figure.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** A = [3,5,1,2,3], B = [3,6,3,3,4]\r\n    **Output:** -1\r\n    **Explanation:**\r\n    In this case, it is not possible to rotate the dominoes to make one row of values equal.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A[i], B[i] <= 6`\n  2. `2 <= A.length == B.length <= 20000`",
        "level": 2,
        "paid_only": false,
        "question_id": 1049,
        "slug": "minimum-domino-rotations-for-equal-row",
        "tags": [
            "Array",
            "Greedy"
        ],
        "title": "Minimum Domino Rotations For Equal Row",
        "url": "https://leetcode.com/problems/minimum-domino-rotations-for-equal-row/description/"
    },
    "1050": {
        "description": "Return the root node of a binary **search** tree that matches the given\n`preorder` traversal.\n\n_(Recall that a binary search tree  is a binary tree where for every node, any\ndescendant of `node.left` has a value `<` `node.val`, and any descendant of\n`node.right` has a value `>` `node.val`.  Also recall that a preorder\ntraversal displays the value of the `node` first, then traverses `node.left`,\nthen traverses `node.right`.)_\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [8,5,1,7,10,12]\r\n    **Output:** [8,5,10,1,7,null,12]\r\n    ![](https://assets.leetcode.com/uploads/2019/03/06/1266.png)\r\n    \n\n\n\n**Note:**  \n\n  1. `1 <= preorder.length <= 100`\n  2. The values of `preorder` are distinct.",
        "level": 2,
        "paid_only": false,
        "question_id": 1050,
        "slug": "construct-binary-search-tree-from-preorder-traversal",
        "tags": [
            "Tree"
        ],
        "title": "Construct Binary Search Tree from Preorder Traversal",
        "url": "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/description/"
    },
    "1054": {
        "description": "Every non-negative integer `N` has a binary representation.  For example, `5`\ncan be represented as `\"101\"` in binary, `11` as `\"1011\"` in binary, and so\non.  Note that except for `N = 0`, there are no leading zeroes in any binary\nrepresentation.\n\nThe _complement_  of a binary representation is the number in binary you get\nwhen changing every `1` to a `0` and `0` to a `1`.  For example, the\ncomplement of `\"101\"` in binary is `\"010\"` in binary.\n\nFor a given number `N` in base-10, return the complement of it's binary\nrepresentation as a base-10 integer.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 5\r\n    **Output:** 2\r\n    **Explanation:** 5 is \"101\" in binary, with complement \"010\" in binary, which is 2 in base-10.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** 7\r\n    **Output:** 0\r\n    **Explanation:** 7 is \"111\" in binary, with complement \"000\" in binary, which is 0 in base-10.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** 10\r\n    **Output:** 5\r\n    **Explanation:** 10 is \"1010\" in binary, with complement \"0101\" in binary, which is 5 in base-10.\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= N < 10^9`",
        "level": 1,
        "paid_only": false,
        "question_id": 1054,
        "slug": "complement-of-base-10-integer",
        "tags": [
            "Math"
        ],
        "title": "Complement of Base 10 Integer",
        "url": "https://leetcode.com/problems/complement-of-base-10-integer/description/"
    },
    "1055": {
        "description": "In a list of songs, the `i`-th song has a duration of `time[i]` seconds.\n\nReturn the number of pairs of songs for which their total duration in seconds\nis divisible by `60`.  Formally, we want the number of indices `i < j` with\n`(time[i] + time[j]) % 60 == 0`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [30,20,150,100,40]\r\n    **Output:** 3\r\n    **Explanation:** Three pairs have a total duration divisible by 60:\r\n    (time[0] = 30, time[2] = 150): total duration 180\r\n    (time[1] = 20, time[3] = 100): total duration 120\r\n    (time[1] = 20, time[4] = 40): total duration 60\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [60,60,60]\r\n    **Output:** 3\r\n    **Explanation:** All three pairs have a total duration of 120, which is divisible by 60.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= time.length <= 60000`\n  2. `1 <= time[i] <= 500`",
        "level": 1,
        "paid_only": false,
        "question_id": 1055,
        "slug": "pairs-of-songs-with-total-durations-divisible-by-60",
        "tags": [
            "Array"
        ],
        "title": "Pairs of Songs With Total Durations Divisible by 60",
        "url": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60/description/"
    },
    "1056": {
        "description": "A conveyor belt has packages that must be shipped from one port to another\nwithin `D` days.\n\nThe `i`-th package on the conveyor belt has a weight of `weights[i]`.  Each\nday, we load the ship with packages on the conveyor belt (in the order given\nby `weights`). We may not load more weight than the maximum weight capacity of\nthe ship.\n\nReturn the least weight capacity of the ship that will result in all the\npackages on the conveyor belt being shipped within `D` days.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** weights = [1,2,3,4,5,6,7,8,9,10], D = 5\r\n    **Output:** 15\r\n    **Explanation:**\r\n    A ship capacity of 15 is the minimum to ship all the packages in 5 days like this:\r\n    1st day: 1, 2, 3, 4, 5\r\n    2nd day: 6, 7\r\n    3rd day: 8\r\n    4th day: 9\r\n    5th day: 10\r\n    \r\n    Note that the cargo must be shipped in the order given, so using a ship of capacity 14 and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed. \r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** weights = [3,2,2,4,1,4], D = 3\r\n    **Output:** 6\r\n    **Explanation:**\r\n    A ship capacity of 6 is the minimum to ship all the packages in 3 days like this:\r\n    1st day: 3, 2\r\n    2nd day: 2, 4\r\n    3rd day: 1, 4\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** weights = [1,2,3,1,1], D = 4\r\n    **Output:** 3\r\n    **Explanation:**\r\n    1st day: 1\r\n    2nd day: 2\r\n    3rd day: 3\r\n    4th day: 1, 1\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= D <= weights.length <= 50000`\n  2. `1 <= weights[i] <= 500`",
        "level": 2,
        "paid_only": false,
        "question_id": 1056,
        "slug": "capacity-to-ship-packages-within-d-days",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "title": "Capacity To Ship Packages Within D Days",
        "url": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/description/"
    },
    "1057": {
        "description": "Given a positive integer `N`, return the number of positive integers less than\nor equal to `N` that have at least 1 repeated digit.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 20\r\n    **Output:** 1\r\n    **Explanation:** The only positive number (<= 20) with at least 1 repeated digit is 11.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** 100\r\n    **Output:** 10\r\n    **Explanation:** The positive numbers (<= 100) with atleast 1 repeated digit are 11, 22, 33, 44, 55, 66, 77, 88, 99, and 100.\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** 1000\r\n    **Output:** 262\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= N <= 10^9`",
        "level": 3,
        "paid_only": false,
        "question_id": 1057,
        "slug": "numbers-with-repeated-digits",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Numbers With Repeated Digits",
        "url": "https://leetcode.com/problems/numbers-with-repeated-digits/description/"
    },
    "1062": {
        "description": "Given an array `A` of integers, return `true` if and only if we can partition\nthe array into three **non-empty** parts with equal sums.\n\nFormally, we can partition the array if we can find indexes `i+1 < j` with\n`(A[0] + A[1] + ... + A[i] == A[i+1] + A[i+2] + ... + A[j-1] == A[j] + A[j-1]\n+ ... + A[A.length - 1])`\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [0,2,1,-6,6,-7,9,1,2,0,1]\r\n    **Output:** true\r\n    **Explanation:** 0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [0,2,1,-6,6,7,9,-1,2,0,1]\r\n    **Output:** false\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [3,3,6,5,-2,2,5,1,-9,4]\r\n    **Output:** true\r\n    **Explanation:** 3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4\r\n    \n\n\n\n**Note:**\n\n  1. `3 <= A.length <= 50000`\n  2. `-10000 <= A[i] <= 10000`",
        "level": 1,
        "paid_only": false,
        "question_id": 1062,
        "slug": "partition-array-into-three-parts-with-equal-sum",
        "tags": [
            "Array"
        ],
        "title": "Partition Array Into Three Parts With Equal Sum",
        "url": "https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum/description/"
    },
    "1063": {
        "description": "Given an array `A` of positive integers, `A[i]` represents the value of the\n`i`-th sightseeing spot, and two sightseeing spots `i` and `j` have distance\n`j - i` between them.\n\nThe _score_  of a pair (`i < j`) of sightseeing spots is (`A[i] + A[j] + i -\nj)` : the sum of the values of the sightseeing spots, **minus** the distance\nbetween them.\n\nReturn the maximum score of a pair of sightseeing spots.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [8,1,5,2,6]\r\n    **Output:** 11\r\n    **Explanation:** i = 0, j = 2, A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11\r\n    \n\n\n\n**Note:**\n\n  1. `2 <= A.length <= 50000`\n  2. `1 <= A[i] <= 1000`",
        "level": 2,
        "paid_only": false,
        "question_id": 1063,
        "slug": "best-sightseeing-pair",
        "tags": [
            "Array"
        ],
        "title": "Best Sightseeing Pair",
        "url": "https://leetcode.com/problems/best-sightseeing-pair/description/"
    },
    "1064": {
        "description": "Given a positive integer `K`, you need find the **smallest**  positive integer\n`N` such that `N` is divisible by `K`, and `N` only contains the digit **1**.\n\nReturn the length of `N`.  If there is no such `N`, return -1.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 1\r\n    **Output:** 1\r\n    **Explanation:** The smallest answer is N = 1, which has length 1.\n\n**Example 2:**\n\n    \n    \r\n    **Input:** 2\r\n    **Output:** -1\r\n    **Explanation:** There is no such positive integer N divisible by 2.\n\n**Example 3:**\n\n    \n    \r\n    **Input:** 3\r\n    **Output:** 3\r\n    **Explanation:** The smallest answer is N = 111, which has length 3.\n\n\n\n**Note:**\n\n  * `1 <= K <= 10^5`",
        "level": 2,
        "paid_only": false,
        "question_id": 1064,
        "slug": "smallest-integer-divisible-by-k",
        "tags": [
            "Math"
        ],
        "title": "Smallest Integer Divisible by K",
        "url": "https://leetcode.com/problems/smallest-integer-divisible-by-k/description/"
    },
    "1065": {
        "description": "Given a binary string `S` (a string consisting only of '0' and '1's) and a\npositive integer `N`, return true if and only if for every integer X from 1 to\nN, the binary representation of X is a substring of S.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** S = \"0110\", N = 3\r\n    **Output:** true\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** S = \"0110\", N = 4\r\n    **Output:** false\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= S.length <= 1000`\n  2. `1 <= N <= 10^9`",
        "level": 2,
        "paid_only": false,
        "question_id": 1065,
        "slug": "binary-string-with-substrings-representing-1-to-n",
        "tags": [
            "String"
        ],
        "title": "Binary String With Substrings Representing 1 To N",
        "url": "https://leetcode.com/problems/binary-string-with-substrings-representing-1-to-n/description/"
    },
    "1070": {
        "description": "Given a number `N`, return a string consisting of `\"0\"`s and `\"1\"`s that\nrepresents its value in base `**-2**` (negative two).\n\nThe returned string must have no leading zeroes, unless the string is `\"0\"`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 2\r\n    **Output:** \"110\"\r\n    **Explantion:** (-2) ^ 2 + (-2) ^ 1 = 2\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** 3\r\n    **Output:** \"111\"\r\n    **Explantion:** (-2) ^ 2 + (-2) ^ 1 + (-2) ^ 0 = 3\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** 4\r\n    **Output:** \"100\"\r\n    **Explantion:** (-2) ^ 2 = 4\r\n    \n\n\n\n**Note:**\n\n  1. `0 <= N <= 10^9`",
        "level": 2,
        "paid_only": false,
        "question_id": 1070,
        "slug": "convert-to-base-2",
        "tags": [
            "Math"
        ],
        "title": "Convert to Base -2",
        "url": "https://leetcode.com/problems/convert-to-base-2/description/"
    },
    "1071": {
        "description": "Given an array `A` of `0`s and `1`s, consider `N_i`: the i-th subarray from\n`A[0]` to `A[i]` interpreted as a binary number (from most-significant-bit to\nleast-significant-bit.)\n\nReturn a list of booleans `answer`, where `answer[i]` is `true` if and only if\n`N_i` is divisible by 5.\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [0,1,1]\r\n    **Output:** [true,false,false]\r\n    **Explanation:**\r\n    The input numbers in binary are 0, 01, 011; which are 0, 1, and 3 in base-10.  Only the first number is divisible by 5, so answer[0] is true.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [1,1,1]\r\n    **Output:** [false,false,false]\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [0,1,1,1,1,1]\r\n    **Output:** [true,false,false,false,true,false]\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** [1,1,1,0,1]\r\n    **Output:** [false,false,false,false,false]\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 30000`\n  2. `A[i]` is `0` or `1`",
        "level": 1,
        "paid_only": false,
        "question_id": 1071,
        "slug": "binary-prefix-divisible-by-5",
        "tags": [
            "Array"
        ],
        "title": "Binary Prefix Divisible By 5",
        "url": "https://leetcode.com/problems/binary-prefix-divisible-by-5/description/"
    },
    "1072": {
        "description": "We are given a linked list with `head` as the first node.  Let's number the\nnodes in the list: `node_1, node_2, node_3, ...` etc.\n\nEach node may have a _next larger_ **value** : for `node_i`,\n`next_larger(node_i)` is the `node_j.val` such that `j > i`, `node_j.val >\nnode_i.val`, and `j` is the smallest possible choice.  If such a `j` does not\nexist, the next larger value is `0`.\n\nReturn an array of integers `answer`, where `answer[i] =\nnext_larger(node_{i+1})`.\n\nNote that in the example **inputs**  (not outputs) below, arrays such as\n`[2,1,5]` represent the serialization of a linked list with a head node value\nof 2, second node value of 1, and third node value of 5.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [2,1,5]\r\n    **Output:** [5,5,0]\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [2,7,4,3,5]\r\n    **Output:** [7,0,5,5,0]\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [1,7,5,1,9,2,5,1]\r\n    **Output:** [7,9,9,9,0,5,0,0]\r\n    \n\n\n\n**Note:**\n\n  1. ` 1 <= node.val <= 10^9` for each node in the linked list.\n  2. The given list has length in the range `[0, 10000]`.",
        "level": 2,
        "paid_only": false,
        "question_id": 1072,
        "slug": "next-greater-node-in-linked-list",
        "tags": [
            "Linked List",
            "Stack"
        ],
        "title": "Next Greater Node In Linked List",
        "url": "https://leetcode.com/problems/next-greater-node-in-linked-list/description/"
    },
    "1073": {
        "description": "Given a 2D array `A`, each cell is 0 (representing sea) or 1 (representing\nland)\n\nA move consists of walking from one land square 4-directionally to another\nland square, or off the boundary of the grid.\n\nReturn the number of land squares in the grid for which we **cannot** walk off\nthe boundary of the grid in any number of moves.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\r\n    **Output:** 3\r\n    **Explanation:**\r\n    There are three 1s that are enclosed by 0s, and one 1 that isn 't enclosed because its on the boundary.\n\n**Example 2:**\n\n    \n    \r\n    **Input:** [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\r\n    **Output:** 0\r\n    **Explanation:**\r\n    All 1s are either on the boundary or can reach the boundary.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= A.length <= 500`\n  2. `1 <= A[i].length <= 500`\n  3. `0 <= A[i][j] <= 1`\n  4. All rows have the same size.",
        "level": 2,
        "paid_only": false,
        "question_id": 1073,
        "slug": "number-of-enclaves",
        "tags": [
            "Depth-first Search"
        ],
        "title": "Number of Enclaves",
        "url": "https://leetcode.com/problems/number-of-enclaves/description/"
    },
    "1078": {
        "description": "A valid parentheses string is either empty `(\"\")`, `\"(\" + A + \")\"`, or `A +\nB`, where `A` and `B` are valid parentheses strings, and `+` represents string\nconcatenation.  For example, `\"\"`, `\"()\"`, `\"(())()\"`, and `\"(()(()))\"` are\nall valid parentheses strings.\n\nA valid parentheses string `S` is **primitive** if it is nonempty, and there\ndoes not exist a way to split it into `S = A+B`, with `A` and `B` nonempty\nvalid parentheses strings.\n\nGiven a valid parentheses string `S`, consider its primitive decomposition: `S\n= P_1 + P_2 + ... + P_k`, where `P_i` are primitive valid parentheses strings.\n\nReturn `S` after removing the outermost parentheses of every primitive string\nin the primitive decomposition of `S`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** \"(()())(())\"\r\n    **Output:** \"()()()\"\r\n    **Explanation:**\r\n    The input string is  \"(()())(())\", with primitive decomposition \"(()())\" + \"(())\".\r\n    After removing outer parentheses of each part, this is \"()()\" + \"()\" = \"()()()\".\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** \"(()())(())(()(()))\"\r\n    **Output:** \"()()()()(())\"\r\n    **Explanation:**\r\n    The input string is  \"(()())(())(()(()))\", with primitive decomposition \"(()())\" + \"(())\" + \"(()(()))\".\r\n    After removing outer parentheses of each part, this is \"()()\" + \"()\" + \"()(())\" = \"()()()()(())\".\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** \"()()\"\r\n    **Output:** \"\"\r\n    **Explanation:**\r\n    The input string is  \"()()\", with primitive decomposition \"()\" + \"()\".\r\n    After removing outer parentheses of each part, this is \"\" + \"\" = \"\".\r\n    \n\n\n\n**Note:**\n\n  1. `S.length <= 10000`\n  2. `S[i]` is `\"(\"` or `\")\"`\n  3. `S` is a valid parentheses string",
        "level": 1,
        "paid_only": false,
        "question_id": 1078,
        "slug": "remove-outermost-parentheses",
        "tags": [
            "Stack"
        ],
        "title": "Remove Outermost Parentheses",
        "url": "https://leetcode.com/problems/remove-outermost-parentheses/description/"
    },
    "1079": {
        "description": "Given a binary tree, each node has value `0` or `1`.  Each root-to-leaf path\nrepresents a binary number starting with the most significant bit.  For\nexample, if the path is `0 -> 1 -> 1 -> 0 -> 1`, then this could represent\n`01101` in binary, which is `13`.\n\nFor all leaves in the tree, consider the numbers represented by the path from\nthe root to that leaf.\n\nReturn the sum of these numbers.\n\n\n\n**Example 1:**\n\n![](https://assets.leetcode.com/uploads/2019/04/04/sum-of-root-to-leaf-binary-\nnumbers.png)\n\n    \n    \r\n    **Input:** [1,0,1,0,1,0,1]\r\n    **Output:** 22\r\n    **Explanation:** (100) + (101) + (110) + (111) = 4 + 5 + 6 + 7 = 22\r\n    \n\n\n\n**Note:**\n\n  1. The number of nodes in the tree is between `1` and `1000`.\n  2. node.val is `0` or `1`.\n  3. The answer will not exceed `2^31 - 1`.",
        "level": 1,
        "paid_only": false,
        "question_id": 1079,
        "slug": "sum-of-root-to-leaf-binary-numbers",
        "tags": [
            "Tree"
        ],
        "title": "Sum of Root To Leaf Binary Numbers",
        "url": "https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/description/"
    },
    "1080": {
        "description": "A query word matches a given `pattern` if we can insert **lowercase** letters\nto the pattern word so that it equals the `query`. (We may insert each\ncharacter at any position, and may insert 0 characters.)\n\nGiven a list of `queries`, and a `pattern`, return an `answer` list of\nbooleans, where `answer[i]` is true if and only if `queries[i]` matches the\n`pattern`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FB\"\r\n    **Output:** [true,false,true,true,false]\r\n    **Explanation:**\r\n     \"FooBar\" can be generated like this \"F\" + \"oo\" + \"B\" + \"ar\".\r\n    \"FootBall\" can be generated like this \"F\" + \"oot\" + \"B\" + \"all\".\r\n    \"FrameBuffer\" can be generated like this \"F\" + \"rame\" + \"B\" + \"uffer\".\n\n**Example 2:**\n\n    \n    \r\n    **Input:** queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBa\"\r\n    **Output:** [true,false,true,false,false]\r\n    **Explanation:**\r\n     \"FooBar\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\".\r\n    \"FootBall\" can be generated like this \"Fo\" + \"ot\" + \"Ba\" + \"ll\".\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBaT\"\r\n    **Output:** [false,true,false,false,false]\r\n    **Explanation:**\r\n     \"FooBarTest\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\" + \"T\" + \"est\".\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= queries.length <= 100`\n  2. `1 <= queries[i].length <= 100`\n  3. `1 <= pattern.length <= 100`\n  4. All strings consists only of lower and upper case English letters.",
        "level": 2,
        "paid_only": false,
        "question_id": 1080,
        "slug": "camelcase-matching",
        "tags": [
            "String",
            "Trie"
        ],
        "title": "Camelcase Matching",
        "url": "https://leetcode.com/problems/camelcase-matching/description/"
    },
    "1081": {
        "description": "You are given a series of video clips from a sporting event that lasted `T`\nseconds.  These video clips can be overlapping with each other and have varied\nlengths.\n\nEach video clip `clips[i]` is an interval: it starts at time `clips[i][0]` and\nends at time `clips[i][1]`.  We can cut these clips into segments freely: for\nexample, a clip `[0, 7]` can be cut into segments `[0, 1] + [1, 3] + [3, 7]`.\n\nReturn the minimum number of clips needed so that we can cut the clips into\nsegments that cover the entire sporting event (`[0, T]`).  If the task is\nimpossible, return `-1`.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** clips = [[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]], T = 10\r\n    **Output:** 3\r\n    **Explanation:**\r\n    We take the clips [0,2], [8,10], [1,9]; a total of 3 clips.\r\n    Then, we can reconstruct the sporting event as follows:\r\n    We cut [1,9] into segments [1,2] + [2,8] + [8,9].\r\n    Now we have segments [0,2] + [2,8] + [8,10] which cover the sporting event [0, 10].\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** clips = [[0,1],[1,2]], T = 5\r\n    **Output:** -1\r\n    **Explanation:**\r\n    We can 't cover [0,5] with only [0,1] and [0,2].\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** clips = [[0,1],[6,8],[0,2],[5,6],[0,4],[0,3],[6,7],[1,3],[4,7],[1,4],[2,5],[2,6],[3,4],[4,5],[5,7],[6,9]], T = 9\r\n    **Output:** 3\r\n    **Explanation:**\r\n    We can take clips [0,4], [4,7], and [6,9].\r\n    \n\n**Example 4:**\n\n    \n    \r\n    **Input:** clips = [[0,4],[2,8]], T = 5\r\n    **Output:** 2\r\n    **Explanation:**\r\n    Notice you can have extra video after the event ends.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= clips.length <= 100`\n  2. `0 <= clips[i][0], clips[i][1] <= 100`\n  3. `0 <= T <= 100`",
        "level": 2,
        "paid_only": false,
        "question_id": 1081,
        "slug": "video-stitching",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Video Stitching",
        "url": "https://leetcode.com/problems/video-stitching/description/"
    },
    "1086": {
        "description": "Alice and Bob take turns playing a game, with Alice starting first.\n\nInitially, there is a number `N` on the chalkboard.  On each player's turn,\nthat player makes a _move_  consisting of:\n\n  * Choosing any `x` with `0 < x < N` and `N % x == 0`.\n  * Replacing the number `N` on the chalkboard with `N - x`.\n\nAlso, if a player cannot make a move, they lose the game.\n\nReturn `True` if and only if Alice wins the game, assuming both players play\noptimally.\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** 2\r\n    **Output:** true\r\n    **Explanation:** Alice chooses 1, and Bob has no more moves.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** 3\r\n    **Output:** false\r\n    **Explanation:** Alice chooses 1, Bob chooses 1, and Alice has no more moves.\r\n    \n\n\n\n**Note:**\n\n  1. `1 <= N <= 1000`",
        "level": 1,
        "paid_only": false,
        "question_id": 1086,
        "slug": "divisor-game",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "title": "Divisor Game",
        "url": "https://leetcode.com/problems/divisor-game/description/"
    },
    "1087": {
        "description": "Given an array `A` of integers, return the **length** of the longest\narithmetic subsequence in `A`.\n\nRecall that a _subsequence_ of `A` is a list `A[i_1], A[i_2], ..., A[i_k]`\nwith `0 <= i_1 < i_2 < ... < i_k <= A.length - 1`, and that a sequence `B` is\n_arithmetic_ if `B[i+1] - B[i]` are all the same value (for `0 <= i < B.length\n- 1`).\n\n\n\n**Example 1:**\n\n    \n    \r\n    **Input:** [3,6,9,12]\r\n    **Output:** 4\r\n    **Explanation:**\r\n    The whole array is an arithmetic sequence with steps of length = 3.\r\n    \n\n**Example 2:**\n\n    \n    \r\n    **Input:** [9,4,7,2,10]\r\n    **Output:** 3\r\n    **Explanation:**\r\n    The longest arithmetic subsequence is [4,7,10].\r\n    \n\n**Example 3:**\n\n    \n    \r\n    **Input:** [20,1,15,3,10,5,8]\r\n    **Output:** 4\r\n    **Explanation:**\r\n    The longest arithmetic subsequence is [20,15,10,5].\r\n    \n\n\n\n**Note:**\n\n  1. `2 <= A.length <= 2000`\n  2. `0 <= A[i] <= 10000`",
        "level": 2,
        "paid_only": false,
        "question_id": 1087,
        "slug": "longest-arithmetic-sequence",
        "tags": [
            "Dynamic Programming"
        ],
        "title": "Longest Arithmetic Sequence",
        "url": "https://leetcode.com/problems/longest-arithmetic-sequence/description/"
    },
    "1092": {
        "description": "Given the `root` of a binary tree, find the maximum value `V` for which there\nexists **different** nodes `A` and `B` where `V = |A.val - B.val|` and `A` is\nan ancestor of `B`.\n\n(A node A is an ancestor of B if either: any child of A is equal to B, or any\nchild of A is an ancestor of B.)\n\n\n\n**Example 1:**\n\n![](http://i68.tinypic.com/2whqcep.jpg)\n\n    \n    \r\n    **Input:** [8,3,10,1,6,null,14,null,null,4,7,13]\r\n    **Output:** 7\r\n    **Explanation:**\r\n    We have various ancestor-node differences, some of which are given below :\r\n    |8 - 3| = 5\r\n    |3 - 7| = 4\r\n    |8 - 1| = 7\r\n    |10 - 13| = 3\r\n    Among all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.\r\n    \n\n\n\n**Note:**\n\n  1. The number of nodes in the tree is between `2` and `5000`.\n  2. Each node will have value between `0` and `100000`.",
        "level": 2,
        "paid_only": false,
        "question_id": 1092,
        "slug": "maximum-difference-between-node-and-ancestor",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Maximum Difference Between Node and Ancestor",
        "url": "https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/description/"
    },
    "1093": {
        "description": "We run a preorder depth first search on the `root` of a binary tree.\n\nAt each node in this traversal, we output `D` dashes (where `D` is the _depth_\nof this node), then we output the value of this node.    _(If the depth of a\nnode is`D`, the depth of its immediate child is `D+1`.  The depth of the root\nnode is `0`.)_\n\nIf a node has only one child, that child is guaranteed to be the left child.\n\nGiven the output `S` of this traversal, recover the tree and return its\n`root`.\n\n\n\n**Example 1:**\n\n**![](https://assets.leetcode.com/uploads/2019/04/08/recover-a-tree-from-\npreorder-traversal.png)**\n\n    \n    \r\n    **Input:** \"1-2--3--4-5--6--7\"\r\n    **Output:** [1,2,5,3,4,6,7]\r\n    \n\n**Example 2:**\n\n**![](https://assets.leetcode.com/uploads/2019/04/11/screen-\nshot-2019-04-10-at-114101-pm.png)**\n\n    \n    \r\n    **Input:** \"1-2--3---4-5--6---7\"\r\n    **Output:** [1,2,5,3,null,6,null,4,null,7]\n\n\n\n**Example 3:**\n\n![](https://assets.leetcode.com/uploads/2019/04/11/screen-\nshot-2019-04-10-at-114955-pm.png)\n\n    \n    \r\n    **Input:** \"1-401--349---90--88\"\r\n    **Output:** [1,401,null,349,88,90]\r\n    \n\n\n\n**Note:**\n\n  * The number of nodes in the original tree is between `1` and `1000`.` `\n  * Each node will have a value between `1` and `10^9`.",
        "level": 3,
        "paid_only": false,
        "question_id": 1093,
        "slug": "recover-a-tree-from-preorder-traversal",
        "tags": [
            "Tree",
            "Depth-first Search"
        ],
        "title": "Recover a Tree From Preorder Traversal",
        "url": "https://leetcode.com/problems/recover-a-tree-from-preorder-traversal/description/"
    }
}